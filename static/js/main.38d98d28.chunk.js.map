{"version":3,"sources":["pages/agenda/footer/useStyles.js","pages/agenda/Footer.js","components/StandarButton.js","pages/agenda/navBar/mainBar/hospitalSection/hospitalIcon/useStyles.js","pages/agenda/navBar/mainBar/hospitalSection/HospitalIcon.js","pages/agenda/navBar/mainBar/HospitalSection.js","components/userLogo/useStyles.js","components/UserLogo.js","components/StandardBadge.js","components/standardDropDownMenu/StandardMenuItem.js","components/standardDropDownMenu/NestedMenu.js","components/standardDropDownMenu/useInput.js","components/StandardDropDownMenu.js","pages/agenda/navBar/mainBar/userSection/userOptions/useStyles.js","pages/agenda/navBar/mainBar/userSection/UserOptions.js","pages/agenda/navBar/mainBar/userSection/useStyles.js","pages/agenda/navBar/mainBar/UserSection.js","pages/agenda/navBar/mainBar/useStyles.js","pages/agenda/navBar/MainBar.js","pages/agenda/navBar/menuButton/useStyles.js","pages/agenda/navBar/MenuButton.js","components/barElement/useStyles.js","components/BarElement.js","components/input/useStyles.js","components/Input.js","pages/agenda/navBar/navigationBar/barTitle/useStyles.js","pages/agenda/navBar/navigationBar/BarTitle.js","components/iconButton/useStyles.js","components/IconButton.js","pages/agenda/navBar/navigationBar/dateNav/useStyles.js","pages/agenda/navBar/navigationBar/DateNav.js","pages/agenda/navBar/navigationBar/useStyles.js","pages/agenda/navBar/NavigationBar.js","pages/agenda/navBar/useStyles.js","pages/agenda/NavBar.js","PDF/layout/bodyMainHeaderPDF/styles.js","PDF/layout/BodyMainHeaderPDF.js","PDF/layout/tableColumnPDF/styles.js","PDF/layout/TableColumnPDF.js","PDF/layout/tableRowPDF/styles.js","PDF/layout/TableRowPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/airwayExamSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/AirwayExamSectionPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/bottomSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/BottomSectionPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/footerSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/FooterSectionPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/headerSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/HeaderSectionPDF.js","PDF/layout/bodySubSectionHeaderPDF/styles.js","PDF/layout/BodySubSectionHeaderPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/simpleTableRow/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/SimpleTableRow.js","PDF/pdfMaker/preSurgicalSheetPDF/patientDataTablePDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/PatientDataTablePDF.js","PDF/pdfMaker/preSurgicalSheetPDF/physicalExamSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/PhysicalExamSectionPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/PreSurgicalItemPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalClinicalSectionPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/preSurgicalClinicalItemBodyPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/PreSurgicalClinicalItemBodyPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/treatmentListPDF/treatmentItemPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/treatmentListPDF/TreatmentItemPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/treatmentListPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/TreatmentListPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/PreSurgicalClinicalSectionPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/singleLineTextItem/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/SingleLineTextItem.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/medicalStudiesListPDF/medicalStudyItemPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/medicalStudiesListPDF/MedicalStudyItemPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/medicalStudiesListPDF/styles.js","PDF/pdfMaker/preSurgicalSheetPDF/preSurgicalItemPDF/MedicalStudiesListPDF.js","PDF/pdfMaker/preSurgicalSheetPDF/styles.js","PDF/pdfMaker/PreSurgicalSheetPDF.js","PDF/pdfMaker/RenderInWindow.js","PDF/PDFMaker.js","components/standarDateInput/useInput.js","components/standarDateInput/useStyles.js","components/StandarDateInput.js","context/PreSurgical.js","components/radioButtonsGroup/useInput.js","components/radioButtonsGroup/useStyles.js","components/RadioButtonsGroup.js","components/titledItem/useStyles.js","components/TitledItem.js","components/doubleRadioButtonInput/useStyles.js","components/DoubleRadioButtonInput.js","components/formHeading/useStyles.js","components/FormHeading.js","components/FormRow.js","components/leftFormContainer/useStyles.js","components/LeftFormContainer.js","components/rightFormContainer/useStyles.js","components/RightFormContainer.js","components/standarTextareaAutosize/useInput.js","components/standarTextareaAutosize/useStyles.js","components/StandarTextareaAutosize.js","components/TitledTextAreaAutoSize.js","pages/agenda/preSurgicalForm/bottomSection/useForm.js","pages/agenda/preSurgicalForm/bottomSection/useStyles.js","pages/agenda/preSurgicalForm/BottomSection.js","components/inputText/useInput.js","components/InputText.js","components/TitledInput.js","pages/agenda/preSurgicalForm/patientIdentification/useStyles.js","pages/agenda/preSurgicalForm/PatientIdentification.js","pages/agenda/preSurgicalForm/headerSectionPS/useForm.js","pages/agenda/preSurgicalForm/headerSectionPS/useStyles.js","pages/agenda/preSurgicalForm/HeaderSectionPS.js","pages/agenda/preSurgicalForm/physicalExamForm/airwayExamForm/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/AirwayExamForm.js","components/formAddedItem/useStyles.js","components/FormAddedItem.js","components/standarSlider/useInput.js","components/StandarSlider.js","components/inputNumber/useInput.js","components/InputNumber.js","components/titledInputWithUnit/useStyles.js","components/TitledInputWithUnit.js","components/spacerCharacter/useStyles.js","components/SpacerCharacter.js","pages/agenda/preSurgicalForm/physicalExamForm/doubleFieldInput/useInput.js","pages/agenda/preSurgicalForm/physicalExamForm/doubleFieldInput/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/DoubleFieldInput.js","components/standarSelect/useInput.js","components/standarSelect/useStyles.js","components/StandarSelect.js","pages/agenda/preSurgicalForm/physicalExamForm/doubleSelectInput/useInput.js","pages/agenda/preSurgicalForm/physicalExamForm/doubleSelectInput/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/DoubleSelectInput.js","pages/agenda/preSurgicalForm/physicalExamForm/firstSectionPhysicalExam/useForm.js","pages/agenda/preSurgicalForm/physicalExamForm/firstSectionPhysicalExam/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/FirstSectionPhysicalExam.js","components/standarSwitch/useStyles.js","components/StandarSwitch.js","components/formItemsWithSwitch/useStyles.js","components/FormItemsWithSwitch.js","components/preSurgicalFormChildrenModal/useStyles.js","components/PreSurgicalFormChildrenModal.js","components/standarCheckboxesGroup/checkboxItem/useCheckbox.js","components/standarCheckboxesGroup/checkboxItem/useStyles.js","components/standarCheckboxesGroup/CheckboxItem.js","components/standarCheckboxesGroup/useCheckboxesGroup.js","components/standarCheckboxesGroup/useStyles.js","components/StandarCheckboxesGroup.js","components/StandarModal.js","components/StandarPagination.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/completedStudiesList/completedStudy/useButtonHandlers.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/completedStudiesList/completedStudy/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/completedStudiesList/CompletedStudy.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/completedStudiesList/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/CompletedStudiesList.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/newStudyForm/useForm.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/newStudyForm/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/NewStudyForm.js","components/fileInput/useInput.js","components/fileInput/useStyles.js","components/FileInput.js","components/titledDateInput/useStyles.js","components/TitledDateInput.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/studyForm/useForm.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/studyForm/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/StudyForm.js","helpers/createArrFromObj.js","helpers/getItems.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/useForm.js","pages/agenda/preSurgicalForm/physicalExamForm/medicalStudies/useStyles.js","pages/agenda/preSurgicalForm/physicalExamForm/MedicalStudies.js","pages/agenda/preSurgicalForm/physicalExamForm/useStyles.js","pages/agenda/preSurgicalForm/PhysicalExamForm.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/preSurgicalClinicalGenericItem/useForm.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/preSurgicalClinicalGenericItem/useStyles.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/PreSurgicalClinicalGenericItem.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/treatmentItem/useInputs.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/treatmentItem/useStyles.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/TreatmentItem.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/treatmentsList/useStyles.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/TreatmentsList.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/useForm.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/treatments/useStyles.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/Treatments.js","pages/agenda/preSurgicalForm/preSurgicalClinicalForm/useStyles.js","pages/agenda/preSurgicalForm/PreSurgicalClinicalForm.js","pages/agenda/preSurgicalForm/preSurgicalFormModal/useStyles.js","pages/agenda/preSurgicalForm/PreSurgicalFormModal.js","pages/agenda/preSurgicalForm/validationMessagesList/validationMessage/useStyles.js","pages/agenda/preSurgicalForm/validationMessagesList/ValidationMessage.js","pages/agenda/preSurgicalForm/ValidationMessagesList.js","pages/agenda/preSurgicalForm/useStyles.js","pages/agenda/preSurgicalForm/useForm.js","pages/agenda/PreSurgicalForm.js","pages/Agenda.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","left","right","zIndex","background","palette","primary","main","breakpoints","up","height","Footer","classes","Grid","container","justifyContent","className","Typography","StandarButton","ref","text","props","Button","size","React","forwardRef","hospitalIcon","color","alert","responsiveStyles","marginRight","HospitalIcon","fontSize","HospitalSection","item","wrap","xs","direction","alignItems","variant","userLogoBox","borderRadius","borderColor","secondary","borderStyle","borderWidth","flexShrink","width","UserLogo","user","clsx","BadgeStandard","children","badgeContent","Badge","anchorOrigin","vertical","horizontal","max","textRightMargin","ifIcon","display","menuListItem","paddingLeft","StandardMenuItem","label","onClick","icon","MenuItem","StandardBadge","NestedMenu","items","anchorEl","handleClose","handleOnMouseLeaveNested","handleOpen","nestedArr","map","ArrowLeft","Menu","id","MenuListProps","onMouseLeave","keepMounted","open","Boolean","onClose","disableScrollLock","getContentAnchorEl","undefined","transformOrigin","style","pointerEvents","useMenuHandlers","useState","setAnchorEl","anchorElNested","setAnchorElNested","handleClick","event","currentTarget","handleOpenNested","handleCloseNested","StandardDropDownMenu","menuItemsArr","buttonIconJSX","buttonText","badgePosition","useInput","startIcon","disableRipple","index","badge","lastPatientClassName","nested","menuWithBadge","menuWithBadgeZero","UserOptions","badgeValue","containerClass","userLogo","UserSection","paddingRight","MainBar","lastPatient","info","MenuButton","containerBorder","growClass","flexGrow","BarElement","noBorder","grow","responsiveContainer","staticContainer","alignSelf","form","Input","TextField","fullWidth","hiddenLabel","BarTitle","sectionName","padding","minWidth","IconButton","marginLeft","DateNav","date","ternary","input","lineHeight","barElement","NavigationBar","placeholder","buttonsBar","paddingTop","paddingBottom","flexDirection","buttonsContainer","leftButtonMargin","menuButton","top","NavBar","styles","StyleSheet","create","bodyMainHeaderContainers","borderBottom","backgroundColor","marginBottom","bodyMainHeaderText","paddingVertical","BodyMainHeaderPDF","headerColumnCells","columnHeaderText","bodyText","rootContainer","border","TableColumnPDF","headerText","rootContainerStyle","textStyle","header","textContainer","TableRowPDF","tableContainer","rowTableContainer","mainBody","alertTextColor","AirwayExamSectionPDF","valuesObj","mouthOpening","malampati","thyromentalDistance","goniomentalDistance","neckMovement","teeth","difficultAirwayForetell","observations","teethValue","difficultAirwayForetellValue","columnRootContainer","anestheticPlanColumnRootContainer","BottomSectionPDF","psychicState","psychicStateObservation","anestheticPlan","anestheticPlanObservation","bloodSampleRequest","iCURequest","interconsultations","extraObservations","getValue","key","obj","setNewValue","string","bloodSampleRequestValue","iCURequestValue","psychicStateValue","normal","depress","anxious","exited","comatose","hyperemotive","anestheticPlanValue","generalAnesthesia","subarachnoid","peridural","peripheralLock","sedation","combined","footerSection","borderTop","footerSectionText","fontFamily","FooterSectionPDF","fixed","render","pageNumber","totalPages","headerSection","paddingHorizontal","HeaderSectionPDF","bodySubSectionHeaderContainers","bodySubSectionHeadersText","BodySubSectionHeaderPDF","tableRow","rowHeaderText","SimpleTableRow","sectionWithOutBorder","PatientDataTable","currentPatientData","lastName","firstName","iDNumber","gender","age","PhysicalExamSectionPDF","cardiacAuscultation","pulmonaryAuscultation","spine","diastolicPressure","systolicPressure","pulse","asaLevel","painLevel","weight","vTFactor","bMIndex","bMI","bMIC","tV","bloodType","factorRh","bloodTypeValue","bloodPresureValue","PreSurgicalItemPDF","title","rowContainer","PreSurgicalClinicalItemBodyPDF","conditions","conditionsString","join","length","flexWrap","firstColumnTable","firstSectionContainer","remainingColumnsTable","TreatmentItemPDF","drug","startingTreatmentDate","endingTreatmentDate","TreatmenstListPDF","itemsToRender","valuesArr","isDataAvailable","PreSurgicalClinicalSectionPDF","preSurgicalClinicalConditions","treatments","itemToRender","conditionsLabels","checkboxHypertension","checkboxArrhythmias","checkboxStableAnginaCF","checkboxUnstableAngina","checkboxAMIDate","checkboxValvularHeartDisease","checkboxDyspnoeaCF","checkboxheartSurgeryDate","checkboxPacemaker","checkboxEdema","checkboxVaricoseVeins","checkboxAsthma","checkboxCOPD","checkboxSmoking","checkboxCough","checkboxExpectoration","checkboxGlaucoma","checkboxWearingContactLenses","checkboxAcidSensitiveSyndrome","checkboxHiatalHerniaReflux","checkboxOcclusion","checkboxLiverFailure","checkboxHepatitis","checkboxCirrhosis","checkboxJaundiceCholectosis","checkboxChronicKidneyFailure","checkboxAcuteRenalFailure","checkboxDialysis","checkboxIncontinence","checkboxDysuriaPolish","checkboxMedicines","checkboxObesity","checkboxDiabetes","checkboxHyperthyroidism","checkboxHypothyroidism","checkboxAdrenals","checkboxMalnutrition","checkboxDehydration","checkboxHyperthermia","checkboxAlcoholism","checkboxCVA","checkboxTIA","checkboxParesis","checkboxParaesthesia","checkboxAphasias","checkboxSeizures","checkboxIntracranialHypertension","checkboxMyopathies","checkboxAnemia","checkboxCoagulopathies","checkboxTransfusions","checkboxJehovahsWitness","checkboxSEL","checkboxRA","checkboxAntiphospholipidSyndrome","checkboxLMP","checkboxPregnancies","checkboxAbortions","checkboxEclampsia","checkboxPreeclampsiaOC","currentValue","currentObj","declaredConditionsLabels","arrItem","bodyContainer","sectionWithBottomBorder","SingleLineTextItem","secondColumnsTable","MedicalStudyItemPDF","result","unit","resultValue","MedicalStudiesListPDF","page","bodySection","headingContainer","headingText","PreSurgicalSheetPDF","formData","shallowValueObtainer","shallowKey","nestedValueObtainer","nestedKey","preSurgicalClinicalValues","medicalStudiesValues","statusValue","physicalExamValues","airwayExamValues","preSurgicalBottomSectionValues","patientLastName","patientFirstName","preSurgicalDiagnostic","proposedSurgeon","author","subject","pdfVersion","RenderInWindow","setState","setContainer","useEffect","document","createElement","current","window","body","appendChild","onbeforeunload","curWindow","close","createPortal","PDFMaker","data","renderInWindowSetState","renderInWindowState","url","loading","pDFFileUrlRef","newWindowRef","memo","value","isRequiredError","shouldReset","nestedHandler","valueState","setValueState","errorState","setErrorState","helperText","setHelperText","removeErrorState","useCallback","setRequiredErrorOn","isRequiredErrorProp","inputValue","updateStateValueOn","valueProp","resetStateValueOn","shouldResetProp","val","error","textError","marginTop","StandarDateInput","type","inputState","handleOnChange","inputToRender","standarProps","maskChar","invalidDateMessage","maxDateMessage","minDateMessage","minDate","Date","maxDate","push","FormControl","onChange","FormHelperText","PreSurgical","createContext","removeError","target","radioButtonsContainer","radioItem","textAlign","whiteSpace","radioButtonsColumn","radioButtonsColumnError","RadioButtonsGroup","radioItemsArr","showInColumn","disabled","radioItemClassName","name","radioColumnsArr","counter","columArr","radioButtonsArr","currentLabel","FormControlLabel","control","Radio","component","FormLabel","RadioGroup","textMargin","TitledItem","titlePaddingClassName","DoubleRadioButtonInput","measurementUnit","radioItemStyle","measurementTextStyle","headingRow","dark","FormHeading","FormRow","LeftFormContainer","sm","evaluateValueEffect","trim","boxSizing","maxWidth","typography","fontWeight","formControl","StandarTextareaAutosize","removeWhiteSpacesOnBlur","TextareaAutosize","minRows","cols","onBlur","TitledTextAreaAutoSize","classNameTextArea","useForm","useContext","initialState","updateGlobalState","handleOnChangeFor","prevState","bottomSection","handlePsychicStateDebounced","useDebouncedCallback","trailing","handlePsychicStateObservationDebounced","handleAnestheticPlanDebounced","handleAnestheticPlanObservationDebounced","handleBloodSampleRequestDebounced","handleICURequestDebounced","handleInterconsultationsDebounced","handleExtraObservationsDebounced","rowBottomMargin","bottomLine","boxShadow","bottomLineFullPadding","textArea","BottomSection","leftContainer","RightFormContainer","maxLength","pattern","isLocalErrorSetted","setIsLocalErrorSetted","checkIfPropExists","prop","thereIsMaxLength","setErrorRefTo","bool","refProp","checkIfValueIsValid","patternProp","findMatches","regExpPattern","match","matches","setItMatches","setInvalidFormatError","thereIsPattern","setIsExceedingMaxLengthError","maxLengthProp","thereIsMaxLengthCondition","manageValidation","isLocalErrorSettedState","InputText","TitledInput","inputTitle","headingBottomMargin","lastChildren","PatientIdentification","values","handlePreSurgicalDiagnosticDebounced","handleProposedSurgeonDebounced","rightContainerAligment","HeaderSectionPS","isPreSurgicalDiagnosticInputOnError","isProposedSurgeonInputOnError","headingSection","currentPatient","radioItemMalampati","inputAlign","AirwayExamForm","airwayExams","updateState","newValue","handleObservationsDebounced","buttonContainer","FormAddedItem","StandarSlider","Slider","inputProps","propObj","nestedPropKey","mayValueHaveDecimals","mayValueHaveDecimalsCondition","checkIfValueIsExceedingMax","inputPropObj","parseFloat","setIsExceedingMaxError","maxValue","valueToReturn","isValueValid","isExceedingMax","splittedValue","split","mayValueHaveDecimalPart","isValueInteger","truncatedDecimalPart","slice","decimalplaces","integerPart","isDecimalPartEmpty","parseInt","isValueEmpty","isValueEqualToZero","InputNumber","individualInput","innerContainer","unitText","TitledInputWithUnit","inputWidthClassName","SpacerCharacter","inputNames","setError","value1","value2","handleOnChangeOne","handleOnChangeTwo","manageError","topPadding","inputContainer","containerError","margin","measurementUnitText","spacerCharacter","DoubleFieldInput","placeholders","separatorCharacter","stateObj","ref1","ref2","StandarSelect","InputLabel","Select","labelId","MenuProps","leftSelectInput","DoubleSelectInput","spacing","isUnresolvedError","weightVal","heightVal","vTfactorVal","genderVal","isWeightInputOnErrorLocal","useRef","isHeightInputOnErrorLocal","physicalExams","isWeightInputOnError","isHeightInputOnError","firstSectionProduct","defaultInputError","useMemo","weightInputError","heightInputError","weightState","setWeightState","heightState","setHeightState","vTFactorState","setVTFactorState","isRequired","setIsRequired","bMIndexValue","setBMIndexValue","bMIValue","setBMIValue","bMICValue","setBMICValue","tVValue","setTVValue","isUnresolved","setIsUnresolved","setRequiredError","removeRequiredError","getRoundedResult","number","stringNumber","toString","toIndex","indexOf","Number","newValues","calculateOnClick","bMIdeal","calculateBMIdeal","bMIndexVal","Math","pow","calculateBMIndex","bMICVal","bMIVal","calculateBMIC","tVVal","calculateTV","handleWeightDebounced","handleVTFactorDebounced","handleHeightDebounced","handlePulseDebounced","handleCardiacAuscultationDebounced","handlePulmonaryAuscultationDebounced","handleSpineDebounced","handlePainLevelDebounced","handleAsaLevelDebounced","manageIsUnresolvedOnProp","matchRefs","updateRef1","withRef1","updateRefForValidation","vTFactorVal","refToUpdate","currentBMIndex","currentTV","inputWidth","rowContainerBottomLine","fitContent","sliders","textFirstSectionSpacing","textSecondSectionSpacing","textAligment","textMark","textMarkContainer","leftTextMarkContainer","rightTextMarkContainer","formulaText","FirstSectionPhysicalExam","isRequiredErrorFirstSectionState","bloodPresureErrorState","bloodTypeErrorState","bloodPresureForm","isPulseInputOnError","marks","step","valueLabelDisplay","min","align","Diast","defaultValue","StandarSwitch","state","Switch","checked","childrenContainer","visibility","opacity","transition","renderedChildrenContainer","formHeaderContainer","FormItemsWithSwitch","groupTitle","switchState","handleSwitch","childrenContainerStyles","mainBackground","transform","modalItemsMargin","PreSurgicalFormChildrenModal","handleAcceptButton","handleCancelButton","alignContent","setGroupState","setValue","labelText","overflow","textOverflow","CheckboxItem","onFocus","checkboxLabel","useCheckbox","Checkbox","useCheckboxesGroup","evaluateValuesEffect","checkboxesValues","setCheckboxesValues","checkboxesColumn","noWrapWithOutSlider","noWrapContainer","scrollSnapType","noWrapChildren","scrollSnapAlign","scrollOnAmountMoreThan8Container","overflowX","scrollOnAmountMoreThan8Children","scrollOnAmountMoreThan12Container","scrollOnAmountMoreThan12Children","scrollOnAmountMoreThan16Container","scrollOnAmountMoreThan16Children","StandarCheckboxesGroup","groupLabel","checkboxesArr","checkboxesState","handleOnFocus","noWrap","checkboxesAmount","noMoreThan8Wrap","moreThan8Wrap","moreThan12Wrap","moreThan16Wrap","checkboxesColumnsArr","checkboxItemsArr","currentKey","FormGroup","StandarModal","openState","Modal","StandarPagination","Pagination","useButtonHandlers","setStateObj","showModal","setShowModal","setCompletedStudiesParent","deleteExistingKeyFromState","currentName","handleOnClickDeleteButton","wrapText","inlineSize","overflowWrap","hyphens","CompletedStudy","completedStudiesValues","imageFiles","rowTopMargin","itemsContainer","CompletedStudiesList","itemsToRenderProps","completedStudiesArr","condition","formValues","defaultState","studyName","studyType","studyDescription","formState","setFormState","formErrorsDefaultValues","studyNameRequired","studyTypeRequired","measurementUnitRequired","setAvailableStudiesParent","setStudiesCheckboxesStateParent","setShouldReset","formErrors","setFormErrors","isStudyNameInputInError","isMeasurementUnitInputInError","handleStudyNameDebounced","handleMeasurementUnitDebounced","handleStudyDescriptionDebounced","handleStudyType","isFormValid","handleOnAdd","description","setFormErrorFor","keyValue","setFormError","button","radioButtonsAlignment","unitInput","NewStudyForm","maxSize","maxSizeProp","fileObjState","setFileObj","checkIfFileTypeIsInvalid","fileType","checkIfFileIsExceedingSize","isFileTypeInvalid","isExceedingSize","currentInputValue","files","isInteger","setInvalidFileTypeError","setFileExceedingSizeError","minHeight","FileInput","accept","multiple","TitledDateInput","formProps","currentFormValuesStorage","defaultInputErrors","resultRequired","resultDateRequired","defaultModalState","show","delete","modalStateObj","unitValue","getUnitValue","setStudiesFormPropsParent","setStudyCountParent","setPageParent","setStudiesFormValuesStorageParent","resultValueStoraged","resultDateValueStoraged","resultDate","observationsValueStoraged","imageFilesValueStoraged","modalState","setModalState","setResult","setResultDate","setObservations","setImageFiles","isResultInputInErrorRef","isImageFilesInputInErrorRef","resultDateIsAfter","isAfter","resultDateIsBefore","isBefore","isResultDateValidated","handleResultDebounced","handleResultDateDebounced","handleObservationDebounced","resetStatesForUnchecking","removeStudyToRender","formattedDate","getDate","getMonth","getFullYear","addNewObjInState","fileNamesArr","labelValue","observationsValue","typeValue","imageFilesObj","shouldDisplay","fileNames","getFilesNames","Object","assign","handleOnClose","modalTextForClosing","setStateForClosingStudyForm","handleDelete","modalTextForDeleting","shouldDeleteStudy","shouldCloseForm","filesInputErrorRef","formVal","resultDateCondition","resultInputErrorRef","getValidationForAStudyWithFileInput","getValidationForStudyForm","handleOnAddFor","getStoredStudiesUpdatedStateFor","resultDateValue","imageFilesArr","newState","getStoredStudiesUpdatedState","treatmentsTexts","textButton","individualFieldWidth","resultInput","StudyForm","addedItemTextContainer","resultTextArea","toRenderArr","imageInput","setRemainingInput","format","textareaname","createArrFromObject","arr","currentItem","getItems","objToReturn","studiesFromServer","closeCurrentForm","closeRootForm","studiesDone","completedStudiesProps","completedStudies","setCompletedStudies","shouldRender","setShouldRender","availableStudies","setAvailableStudies","studiesCheckboxes","setStudiesCheckboxes","currentCheckboxStudyName","setCurrentCheckboxStudyName","studiesFormProps","setStudiesFormProps","storageOfStudyFormValues","setStorageOfStudyFormValues","studyCount","setStudyCount","setPage","resetForGlobalState","updateStateWithFunction","func","getDefaultCheckboxesStateFrom","resetFormStates","currentState","setStatesOnUnchecking","stateOfStudiesStoraged","studiesDoneState","renderCondition","atLeastOneFieldIsNotEmpty","currentStudy","checkValuesEqualityIn","keys","handleSwitchFor","handleAcceptButtonFor","handleCheckboxes","availableStudiesState","currentStudyName","storedValues","checkValuesEqualityInCurrentStudy","studyLabel","modalTextForClosingCurrentStudy","newStudyFormProps","addNewStudyPropsFor","newStudyFormValues","handleCheckboxesFor","studyProps","setStateObjStudyForm","setStateObjNewStudy","setStateObjCompletedStudy","completedStudiesPropsArr","studiesCheckboxesArr","getStudiesCheckboxesArr","updateRefOnStudiesToRender","count","refValue","thereIsStudiesToRender","isUnresolvedProp","handlePaginationOnChange","checkBoxesGroup","MedicalStudies","studiesFormPropsArr","studyFormToShow","currentProps","showFirstButton","showLastButton","rowDoubleBottomMargin","PhysicalExamForm","firstSectionErrorState","isRequiredAirwaySectionState","isFirstSectionUnresolved","isMedicalStudiesUnresolved","firstSectionRef","isMedicalStudiesUnresolvedRef","currentShallowStateKey","formValuesMemoized","checkboxes","shouldDisplayModal","setShouldDisplayModal","isTextAreaFieldWithValue","setIsTextAreaFieldWithValue","isACheckboxChecked","setIsACheckboxChecked","areThereCheckboxes","shouldDisplayModalCondition","defaultValues","objectToIterate","defaultObj","createDefaultLocalValues","currentValues","shallowObj","nestedObj","evaluateCheckboxesGroupValue","evaluateTextAreaValue","topMargin","PreSurgicalClinicalGenericItem","textAreaPlaceHolder","textAreaClassName","useInputs","currentDrugName","currentDrug","setFormStatePS","setTreatmentsParent","handleDeleteButton","observationContainerSpacing","sinceDate","TreatmentItem","textMarkContainerWidthClass","TreatmentsList","consignedTreatmentsArr","drugInputRequired","startingDateRequired","endingDateRequired","observationsRequired","treatmentsProps","drugValue","setDrugValue","radioButtonValue","setRadioButtonValue","startingTreatmentDateValue","setStartingTreatmentDateValue","endingTreatmentDateValue","setEndingTreatmentDateValue","setTreatments","isDrugInputOnErrorRef","setStatesToDefaultOn","range","shouldResetInputsState","resetNestedFormsStates","isStartingDateAfter","isStartingDateBefore","isStartingDateValidated","isEndingDateInputValueValidated","isDrugInputFilled","treatmentsPropsArr","thereAreTreatmentToRender","shouldHaveEndingDate","createTreatmentsObj","startingDateCondition","startingDate","shouldHaveEndingDateValue","endingDate","getFormattedDateOn","startingDateValue","endingDateValue","createTreatmentsObjFrom","endingDateCondition","isDrugInputOnError","isStartingDateInputOnError","isObservationsInputOnError","isEndingDateInputOnError","setErrorFor","drugInputCondition","shouldRenderState","treatmentsToRenderCondition","resetObservationAndStartingDateError","handleDrugValueDebounced","handleStartingTreatmentDateValueDebounced","handleEndingTreatmentDateValueDebounced","handleAddTreatment","errorRefCondition","isDrugValueValidated","atLeastOneRequiredFieldIsFilled","isEndingDateValidated","addNewObjInGlobalState","handleAddTreatmentFor","setStateObjTreatment","updateIsUnresolvedRefOn","handleRadioOnChange","dateInputLeftPadding","textExtraError","Treatments","disableFuture","disablePast","noCheckboxesTextArea","PreSurgicalClinicalForm","isTreatmentsUnresolved","preSurgicalClinical","pSCFormsWithCheckboxesArray","keyForFormStateNestedObJ","currentGroupTitle","currentCheckboxes","currentFormValues","addButtonText","pSCFormsWithoutCheckboxesArray","modalChildrenContainer","isValid","success","modalButtonsContainer","PreSurgicalFormModal","handleSubmittForm","setStatesGroup","conditionsGroup","dynamicText","staticTextsGroup","classNamesGroup","getStringToDisplay","strings","medicalStudiesRequired","requiredErrorSetted","forMedicalStudiesRequiredSetted","forRequiredErrorSetted","forFormValidated","forBothErrorSetted","setIsValidated","setIsPreviewClicked","isValidated","areMedicalStudiesRequiredErrorSetted","isRequiredErrorSetted","titleIsRequiredErrorSetted","titleForAreMedicalStudiesRequiredErrorSetted","textForAreMedicalStudiesRequiredErrorSetted","errorSettedBlueText","textForBothErrorSetted","titleToDisplay","textToDisplay","ValidationMessage","headerClassName","ValidationMessagesList","validationMessagesArr","doubleRowBottomMargin","rightMargin","errorSettedRedText","dateInputLabel","preSurgicalDefaultState","cardiovascular","respiratory","ocular","gastrointestinal","urinary","allergies","endocrineMetabolic","neuromuscular","hematological","connectiveTissueDiseases","obstetricGynecologicalHistory","psychiatric","anestheticHistory","others","initialFormState","formGlobalState","setFormGlobalState","contextObject","dateState","setDateState","isPreviewClicked","preSurgicalDiagnosticIsRequired","proposedSurgeonIsRequired","isRequiredErrorHeaderSection","setIsRequiredErrorHeaderSection","weightIsRequired","heightIsRequired","isRequiredErrorFirstSection","setIsRequiredErrorFirstSection","mouthOpeningIsRequired","malampatiIsRequired","thyromentalDistanceIsRequired","goniomentalDistanceIsRequired","neckMovementIsRequired","teethIsRequired","difficultAirwayForetellIsRequired","isRequiredAirwaySection","setIsRequiredAirwaySection","anestheticPlanIsRequired","isRequiredBottomSection","setIsRequiredBottomSection","isRequiredDateAndTime","setIsRequiredDateAndTime","setIsTreatmentsUnresolved","setIsFirstSectionUnresolved","setIsMedicalStudiesUnresolved","setMedicalStudiesRequired","setIsRequiredErrorSetted","isInputOnErrorSetted","setIsInputOnErrorSetted","isInnerFormUnresolvedSetted","setIsInnerFormUnresolvedSetted","setIsMedicalStudiesRequiredErrorSetted","areBothFieldsRequiredBloodPresure","setAreBothFieldsRequiredBloodPresure","areBothFieldsRequiredBloodType","setAreBothFieldsRequiredBloodType","formDataWasSended","setFormDataWasSended","formDataWasSendedAsCompleted","setFormDataWasSendedAsCompleted","preSurgicalFormPDFData","setPreSurgicalFormPDFData","countOfRequiredInputsCompleted","isDiastolicPressureInputOnError","isSystolicPressureInputOnError","isFirstSectionUnresolvedRef","isTreatmentsUnresolvedRef","isRequiredErrorSettedRef","isRequiredDateSettedRef","isInputOnErrorSettedRef","isInnerFormUnresolvedSettedRef","areBothFieldsRequiredBloodPresureRef","areBothFieldsRequiredBloodTypeRef","areDoubleFieldsUnresolvedRef","downloadButtonRef","maxDateProp","headerSectionRef","physicalExamRef","physicalExamIsUnresolved","inputsOnErrorRefs","physicalExamFormIsRequired","getDateAndTimeFormatted","dateAndTime","toLocaleString","hour","minute","hour12","incrementValidatedInputsCount","countRef","manageInputsRequiredError","shouldSetError","currentSetState","currentStateKey","requiredErrorSettedRef","countOfRequiredInputCompletedRef","stateKey","manageRequiredError","manageInputValueValidated","validateFormOnClick","refs","firstSectionProductRef","firstSectionUnresolvedRef","innerFormUnresolvedSettedRef","treatmentsUnresolvedRef","medicalStudiesUnresolvedRef","requiredDateSettedRef","bloodPresure","doubleFieldsUnresolved","getValidationParameter","forEach","getValidationParameterForNumberType","refObj","isRequiredDateSetted","requiredInputsCompletedRef","manageRequiredDateValidated","manageDateRequiredError","resetCount","manageAllRequiredInputsCompleted","refsArr","manageInputsOnErrorRef","areFirstSectionInputValuesOutdated","areWeightAndHeightInputsFilled","isNaN","areFirstSectionValuesNotCalculated","manageIsFirstSectionPhysicalExamUnresolvedError","manageIsMedicalStudiesFormUnresolvedError","manageIsTreatmentsFormUnresolvedError","manageAreBothDoubleFieldsCompleted","firstValue","secondValue","bothFieldsRequiredRef","bothFieldsRequiredStateUpdater","diastolicPressureVal","systolicPressureVal","bloodTypeVal","factorRhVal","bloodPresureRef","bloodTypeRef","doubleFieldsUnresolvedRef","updateDoubleFieldsUnresolvedRef","manageDoubleFieldsValidation","stringToRetur","missingStudies","getLabelsOfRequiredStudiesMissing","requiredStudies","completedRequiredStudiesArr","filter","study","completedStudy","getRequiredStudiesMissing","completedMedicalStudies","array","getCompletedMedicalStudies","manageMedicalStudiesRequired","pSCFormWithOutCheckboxesState","iterateOver","objectUpdater","objectToReturn","assignFalseToCurrent","inObj","rest","currentUpdate","getArrayFrom","arrToReturn","conditionsWithCheckboxes","checkedCheckboxesArr","resultingArr","getCheckedCheckboxesFrom","isObservationsInputFilled","isThereCheckedCheckboxes","conditionWithOutCheckboxes","medicalStudies","objectCreatorToSubmit","validateFormOnClickFor","handleDateTimeDebounce","setStatesGroupForModal","conditionsGroupForModal","refsGroupForPDFMaker","formStatus","shouldSubmittAsCompleted","status","PreSurgicalForm","Provider","download","href","setAttribute","e","Agenda","locale","es","utils","DateFnsUtils","createMuiTheme","md","lg","xl","customShadows","defaultOutter","light","darker","secondaryTextColor","roundingWithBase0_5","valueToRound","roundedValue","int_part","trunc","difference","initialStyleObj","isImportant","important","firstBreakpointsStyles","secondBreakpointsStyles","thirdBreakpointsStyles","property","incrementedValue_xl","finalValue_lg","finalValue_xl","defaultResponsiveFontSizes","MuiTypography","MuiGrid","MuiMenuItem","body1","body2","h6","caption","overrides","MuiSvgIcon","fontSizeLarge","fontSizeSmall","MuiButton","letterSpacing","textSizeSmall","iconSizeSmall","MuiBadge","anchorOriginTopRightRectangle","colorError","MuiOutlinedInput","inputMarginDense","MuiInputBase","MuiFormControl","MuiAccordion","rounded","MuiAccordionSummary","borderBottomLeftRadius","borderBottomRightRadius","content","MuiAccordionDetails","MuiIconButton","MuiPaper","elevation1","MuiSwitch","thumb","MuiFormLabel","MuiInput","underline","MuiSlider","App","ThemeProvider","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"qaAEMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,GACFC,SAAU,QACVC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,MACRC,WAAYP,EAAMQ,QAAQC,QAAQC,MANhC,cAODV,EAAMW,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,UARR,cAUDb,EAAMW,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,UAXR,cAaDb,EAAMW,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,UAdR,cAgBDb,EAAMW,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,UAjBR,OAsBSf,I,OCXAgB,EATA,WACb,IAAMC,EAAUjB,IAChB,OACE,cAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,UAAWJ,EAAQd,KAA3D,SACE,cAACmB,EAAA,EAAD,4C,mCCLAC,EAAgB,SAAC,EAAoBC,GAArB,IAAGC,EAAH,EAAGA,KAASC,EAAZ,wBACpB,cAACC,EAAA,EAAD,yBAAQC,KAAK,SAAYF,GAAzB,IAAgCF,IAAKA,EAArC,SACE,cAACF,EAAA,EAAD,UAAaG,QAGFI,MAAMC,WAAWP,G,kBCP1BvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6B,aAAa,aACXC,MAAO9B,EAAMQ,QAAQuB,MAAMrB,MACxBV,EAAMgC,iBAAiB,CAAEC,YAAa,UAI9BnC,ICAAoC,EALM,WACnB,IAAMnB,EAAUjB,IAChB,OAAO,cAAC,IAAD,CAA2BqC,SAAS,QAAQhB,UAAWJ,EAAQc,gBCWzDO,EAZS,kBACtB,eAACpB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACC,KAAK,SAASC,GAAI,EAAvC,UACE,cAAC,EAAD,IACA,eAACvB,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,cAACrB,EAAA,EAAD,CAAYsB,QAAQ,SAApB,wBACA,cAACtB,EAAA,EAAD,CAAYU,MAAM,gBAAgBY,QAAQ,QAA1C,8B,OCRA5C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2C,YAAY,aACVC,aAAc,MACdC,YAAa7C,EAAMQ,QAAQsC,UAAUpC,KACrCqC,YAAa,QACbC,YAAa,MACbC,WAAY,KACTjD,EAAMgC,iBAAiB,CACxBkB,MAAO,GACPrC,OAAQ,UAKCf,ICDAqD,EATE,SAAC,GAAyB,IAAvBhC,EAAsB,EAAtBA,UAAWiC,EAAW,EAAXA,KACvBrC,EAAUjB,IAChB,OACE,cAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,UAAWkC,YAAKtC,EAAQ4B,YAAaxB,GAA7E,SACE,cAACC,EAAA,EAAD,CAAYsB,QAAQ,SAApB,SAA8BU,O,yDCKrBE,EAbO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAiBhC,EAA9B,wBACpB,cAACiC,EAAA,EAAD,yBACEf,QAAQ,WACRZ,MAAM,QACN4B,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,IAAK,EACLL,aAAcA,GACVhC,GANN,aAQG+B,M,mFCJCzD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8D,gBAAiB9D,EAAMgC,iBAAiB,CAAEC,YAAa,KACvD8B,OAAQ,CACNC,QAAS,QAEXC,aAAc,CACZC,YAAa,YAIXC,GAAmB,SAAC,EAA6D7C,GAAS,IAApE8C,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,QAASb,EAAmD,EAAnDA,aAAcc,EAAqC,EAArCA,KAAMnD,EAA+B,EAA/BA,UAAcK,EAAiB,iBACvFT,EAAUjB,EAAUwE,GAC1B,OAAId,EAEA,cAACe,EAAA,EAAD,yBACEF,QAASA,GACL7C,GAFN,IAGEL,UAAWkC,YAAKiB,GAAQvD,EAAQkD,cAChC3C,IAAKA,EAJP,SAME,cAACkD,EAAD,CAAe9B,QAAQ,MAAMc,aAAcA,EAA3C,SACE,eAACpC,EAAA,EAAD,CAAYD,UAAWkC,YAAKtC,EAAQ+C,gBAAiBQ,GAAQvD,EAAQgD,QAArE,UACGO,EACAF,UAOT,cAACG,EAAA,EAAD,CAAUF,QAASA,EAASlD,UAAWkC,YAAKiB,GAAQvD,EAAQkD,cAAe3C,IAAKA,EAAhF,SACE,eAACF,EAAA,EAAD,CAAYD,UAAWkC,YAAKtC,EAAQgD,OAAQ5C,GAA5C,UACGmD,EACAF,QAMMzC,OAAMC,WAAWuC,ICAjBM,GAxCI,SAAC,GAQb,IAPLC,EAOI,EAPJA,MACAN,EAMI,EANJA,MACAO,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,yBACAC,EAEI,EAFJA,WACA3D,EACI,EADJA,UAEM4D,EAAYL,EAAMM,KAAI,SAAC3C,GAAD,OAC1B,cAAC,GAAD,CAA6B+B,MAAO/B,EAAMgC,QAASO,GAA5BvC,MAGzB,OACE,sBAAKgC,QAASS,EAAd,UACE,cAAC,GAAD,CAAkBV,MAAOA,EAAOE,KAAM,cAACW,EAAA,EAAD,CAAW9C,SAAS,UAAYhB,UAAWA,IACjF,cAAC+D,EAAA,EAAD,CACEC,GAAG,wBACHC,cAAe,CAAEC,aAAcR,GAC/BF,SAAUA,EACVW,aAAW,EACXC,KAAMC,QAAQb,GACdc,QAASb,EACTc,mBAAmB,EACnBC,wBAAoBC,EACpBlC,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdiC,gBAAiB,CACflC,SAAU,MACVC,WAAY,SAfhB,SAkBE,qBAAKkC,MAAO,CAAEC,cAAe,QAA7B,SAAwChB,U,QCDjCiB,GArCS,WACtB,MAAgCC,mBAAS,MAAzC,oBAAOtB,EAAP,KAAiBuB,EAAjB,KACA,EAA4CD,mBAAS,MAArD,oBAAOE,EAAP,KAAuBC,EAAvB,KAKMxB,EAAc,WAClBsB,EAAY,OAkBd,MAAO,CACLvB,WACA0B,YAxBkB,SAACC,GACnBJ,EAAYI,EAAMC,gBAwBlB3B,cACAuB,iBACAK,iBApBuB,SAACF,GACD,OAAnBH,GACFC,EAAkBE,EAAMC,gBAmB1BE,kBAfwB,WACxBL,EAAkB,MAClBxB,KAcAC,yBAX+B,WAC/BuB,EAAkB,SCoDPM,GApEc,SAAC,GAOvB,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,cACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAtD,EAEI,EAFJA,aACArC,EACI,EADJA,UAEA,EAQI4F,KAPFpC,EADF,EACEA,SACA0B,EAFF,EAEEA,YACAzB,EAHF,EAGEA,YACAuB,EAJF,EAIEA,eACAK,EALF,EAKEA,iBACAC,EANF,EAMEA,kBACA5B,EAPF,EAOEA,yBAGF,OACE,gCACE,cAACpD,EAAA,EAAD,CACEuF,UAAWJ,EACXlF,KAAK,QACL2C,QAASgC,EACTlF,UAAWA,EACX8F,eAAe,EALjB,SAOE,cAAC7F,EAAA,EAAD,CAAYsB,QAAQ,SAApB,SAA8BmE,MAEhC,cAAC3B,EAAA,EAAD,CACEP,SAAUA,EACVW,aAAW,EACXC,KAAMC,QAAQb,GACdc,QAASb,EACTc,mBAAmB,EALrB,SAOGiB,EAAa3B,KAAI,SAAC3C,EAAM6E,GACvB,GAAoB,kBAAT7E,EAAmB,CAC5B,IAAM8E,EAAQD,IAAUJ,EAAgBtD,EAAe,KACvD,OACE,cAAC,GAAD,CAEEY,MAAO/B,EACPgC,QAASO,EACTpB,aAAc2D,GAHT9E,GAMJ,GAAoB,kBAATA,GAA8B,OAATA,EACrC,OACE,8BACE,cAAC,GAAD,CACE+B,MAAO/B,EAAK+B,MACZjD,UAAWkB,EAAK+E,qBAChB1C,MAAOrC,EAAKgF,OACZ1C,SAAUwB,EACVvB,YAAa6B,EACb3B,WAAY0B,EACZ3B,yBAA0BA,KAR9B,gBAAmBxC,aCxD3BvC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsH,cAAetH,EAAMgC,iBAAiB,CAAEC,YAAa,KACrDsF,kBAAmB,CAAEtF,YAAa,YAGrBnC,MCkBA0H,GAnBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYX,EAAoB,EAApBA,cAC3B/F,EAAUjB,KACV4H,EAAgC,IAAfD,EAAmB1G,EAAQuG,cAAgBvG,EAAQwG,kBAE1E,OACE,cAAC/C,EAAD,CAAehB,aAAciE,EAA7B,SACE,cAAC,GAAD,CACEd,aAAc,CAAC,SAAU,kBAAmB,oBAAkB,oBAC9DC,cAAe,cAAC,IAAD,IACfC,WAAW,OACXC,cAAeA,EACftD,aAAciE,EACdtG,UAAWuG,EACXvC,GAAG,mBCjBLrF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2H,SAAU3H,EAAMgC,iBAAiB,CAC/BC,YAAa,SAIFnC,MCQA8H,GAVK,WAClB,IAAM7G,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACC,KAAK,SAASpB,eAAe,WAAWqB,GAAI,EAAjE,UACE,cAAC,EAAD,CAAUa,KAAK,KAAKjC,UAAWJ,EAAQ4G,WACvC,cAAC,GAAD,CAAab,cAAe,EAAGW,WAAY,SCT3C3H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAK,aACHM,WAAYP,EAAMQ,QAAQC,QAAQC,MAC/BV,EAAMgC,iBAAiB,CAAEkC,YAAa,GAAI2D,aAAc,UAGhD/H,MCQAgI,GAVC,WACd,IAAM/G,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAAgBC,UAAWJ,EAAQd,KAAlE,UACE,cAAC,EAAD,IACA,cAAC,GAAD,QCTAH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+H,YAAa,CACXjG,MAAO9B,EAAMQ,QAAQwH,KAAKtH,UAIfZ,M,4CCkBAmI,GAtBI,SAAC,GAAsD,IAApDF,EAAmD,EAAnDA,YAAalB,EAAsC,EAAtCA,WAAY1F,EAA0B,EAA1BA,UAAcK,EAAY,kBACjET,EAAUjB,KACV6G,EAAe,CACnB,mBACAoB,EACI,CACE3D,MAAO2D,EACPX,qBAAsBW,EAAchH,EAAQgH,YAAc,KAC1DV,OAAQ,CAAC,gBAAiB,kBAE5B,MAEN,OACE,cAAC,GAAD,aACEV,aAAcA,EACdE,WAAYA,EACZ1F,UAAWA,GACPK,KCnBJ1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiB,UAAW,CACT2B,aAAc,OAEhBsF,gBAAiB,CACfnF,YAAa,QACbF,YAAa7C,EAAMQ,QAAQsC,UAAUpC,KACrCsC,YAAa,OAEfmF,UAAW,CACTC,SAAU,SAICtI,M,8CCWAuI,GAtBI,SAAC,GAAuD,IAArDlH,EAAoD,EAApDA,UAAWoC,EAAyC,EAAzCA,SAAU+E,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAS/G,EAAY,kBAClET,EAAUjB,KACV4H,EAAiBrE,YACrBtC,EAAQE,WACPqH,GAAYvH,EAAQmH,gBACrBK,GAAQxH,EAAQoH,UAChBhH,GAEIqH,EACJ,cAACxH,EAAA,EAAD,yBAAMqB,MAAI,EAAClB,UAAWuG,GAAoBlG,GAA1C,IAAiDe,IAAI,EAArD,SACGgB,KAGCkF,EACJ,6CAAKtH,UAAWuG,GAAoBlG,GAApC,aACG+B,KAIL,OAAO/B,EAAMP,WAAaO,EAAMa,KAAOmG,EAAsBC,G,UCtBzD3I,GAAYC,YAAW,CAC3BE,KAAM,CACJyI,UAAW,WAEbC,KAAM,CACJzF,MAAO,UAIIpD,M,iBCLT8I,GAAQ,SAAC,EAAyBtH,GAAS,IAAhCH,EAA+B,EAA/BA,UAAcK,EAAiB,kBACxCT,EAAUjB,KAEhB,OACE,cAAC+I,GAAA,EAAD,aACEnG,QAAQ,WACRZ,MAAM,YACNJ,KAAK,QACLoH,WAAS,EACTC,aAAW,EACX5H,UAAWkC,YAAKtC,EAAQd,KAAMkB,GAC9BG,IAAKA,GACDE,KAKKG,OAAMC,WAAWgH,ICrB1B9I,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,GACFgD,WAAY,KADV,cAEDjD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,WAHP,cAKDlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,YANP,cAQDlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UATP,OAcSpD,MCHAkJ,GATE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZlI,EAAUjB,KAChB,OACE,cAAC,GAAD,CAAYwI,UAAQ,EAACnH,UAAWJ,EAAQd,KAAMgB,WAAS,EAACC,eAAe,SAAvE,SACE,cAACE,EAAA,EAAD,CAAYsB,QAAQ,KAApB,SAA0BuG,O,0CCP1BnJ,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvC,uBACEkJ,QAAS,OADX,cAEGlJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,MACbiF,SAAU,SAJd,cAMGnJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,MACbiF,SAAU,SARd,cAUGnJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,OACbiF,SAAU,WAZd,OAiBarJ,M,6BCJAsJ,GAXI,SAAC,GAAwC,IAAtCpC,EAAqC,EAArCA,UAAW7F,EAA0B,EAA1BA,UAAcK,EAAY,kBACnDT,EAAUjB,KAChB,OACE,cAAC2B,EAAA,EAAD,aACEC,KAAK,QACLsF,UAAWA,EACX7F,UAAWkC,YAAKtC,EAAQ,oBAAqBI,IACzCK,KCVJ1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAK,aACHgD,WAAY,KACTjD,EAAMgC,iBAAiB,CACxBqH,WAAY,GACZnG,MAAO,WAKEpD,MCOAwJ,GAXC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXxI,EAAUjB,KAChB,OACE,eAAC,GAAD,CAAYmB,WAAS,EAACC,eAAe,gBAAgBoH,UAAQ,EAACnH,UAAWJ,EAAQd,KAAjF,UACE,cAAC,GAAD,CAAY+G,UAAW,cAAC,KAAD,MACvB,cAAC5F,EAAA,EAAD,UAAamI,IACb,cAAC,GAAD,CAAYvC,UAAW,cAAC,KAAD,UCZvBlH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAK,aACHM,WAAYP,EAAMQ,QAAQgJ,QAAQ9I,MAC/BV,EAAMgC,iBAAiB,CAAEkC,YAAa,GAAI2D,aAAc,MAE7D4B,MAAO,CACL,UAAW,CACT,4CAA6C,CAC3CC,WAAY,UAIlBC,WAAY,CAAER,SAAU,aAGXrJ,MCYA8J,GAjBO,WACpB,IAAM7I,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACqB,KAAK,SAASnB,UAAWJ,EAAQd,KAAjD,UACE,cAAC,GAAD,CAAUgJ,YAAY,WACtB,cAAC,GAAD,CAAYX,UAAQ,EAACC,MAAI,EAACpH,UAAWJ,EAAQ4I,WAA7C,SACE,cAAC,GAAD,CACEE,YAAY,mCACZ1E,GAAG,gBACHhE,UAAWJ,EAAQ0I,UAGvB,cAAC,GAAD,CAASF,KAAK,sBCtBdzJ,GAAYC,aAAW,SAACC,GAAD,gBAAY,CACvC8J,YAAU,GACRvJ,WAAYP,EAAMQ,QAAQC,QAAQC,KAClCqJ,WAAY,MACZC,cAAe,MACf9J,SAAU,YAJF,cAKPF,EAAMW,YAAYC,GAAG,MAAQ,CAC5BM,eAAgB,gBAChB+I,cAAe,MACf/F,YAAa,OACb2D,aAAc,SATR,cAWP7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BM,eAAgB,WAZV,cAcPlB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,OACb2D,aAAc,SAhBR,GAmBVqC,iBAAkB,CAChBhH,MAAO,WAETiH,kBAAgB,mBACbnK,EAAMW,YAAYC,GAAG,MAAQ,CAC5ByI,WAAY,SAFA,cAIbrJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5ByI,WAAY,SALA,cAObrJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5ByI,WAAY,UARA,GAWhBpJ,KAAM,CACJM,WAAYP,EAAMQ,QAAQC,QAAQC,MAEpC0J,YAAU,mBACPpK,EAAMW,YAAYC,GAAG,MAAQ,CAC5BV,SAAU,WAFJ,cAKPF,EAAMW,YAAYC,GAAG,MAAQ,CAC5BV,SAAU,WACVG,MAAO,OACPgK,IAAK,QARC,cAWPrK,EAAMW,YAAYC,GAAG,MAAQ,CAC5BP,MAAO,SAZD,OAiBGP,MCtBAwK,GAvBA,WACb,IAAMvJ,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMG,UAAWJ,EAAQd,KAAzB,UACE,eAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,eAACF,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,SAAStB,UAAWJ,EAAQ+I,WAAvD,UACE,eAAC9I,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,UAAWJ,EAAQmJ,iBAA3D,UACE,cAAC,EAAD,CAAe3I,KAAK,uBACpB,cAAC,EAAD,CAAeA,KAAK,iBAAiBJ,UAAWJ,EAAQoJ,sBAE1D,cAAC,GAAD,CACEpC,YAAY,mBACZlB,WAAW,UACX1F,UAAWJ,EAAQqJ,oB,SCzBvBG,GAASC,cAAWC,OAAO,CAC/BC,yBAA0B,CACxBT,cAAe,MACf/I,eAAgB,SAChByJ,aAAc,oBACdC,gBAAiB,UACjBC,aAAc,MACd3H,MAAO,QAET4H,mBAAoB,CAClB3I,SAAU,MACV4I,gBAAiB,SAINR,MCPAS,GANW,SAAC,GAAD,IAAGzJ,EAAH,EAAGA,KAAH,OACxB,cAAC,QAAD,CAAMuE,MAAOyE,GAAOG,yBAApB,SACE,cAAC,QAAD,CAAM5E,MAAOyE,GAAOO,mBAApB,SAAyCvJ,OCJvCgJ,GAASC,cAAWC,OAAO,CAC/BQ,kBAAmB,CACjB/H,MAAO,OACPyH,aAAc,oBACdC,gBAAiB,WAEnBM,iBAAkB,CAChB/I,SAAU,MACV+G,QAAS,OAEXiC,SAAU,CACRjC,QAAS,MACThF,YAAa,MACb/B,SAAU,OAEZiJ,cAAe,CACbnB,cAAe,SACfxH,WAAY,aACZ4I,OAAQ,uBAIGd,MCRAe,GAZQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYJ,EAAf,EAAeA,SAAUK,EAAzB,EAAyBA,mBAAoBC,EAA7C,EAA6CA,UAA7C,OACrB,eAAC,QAAD,CAAM3F,MAAK,2BAAOyE,GAAOa,eAAkBI,GAA3C,UACE,cAAC,QAAD,CAAM1F,MAAOyE,GAAOU,kBAApB,SACE,cAAC,QAAD,CAAMnF,MAAK,2BAAOyE,GAAOW,kBAAqBO,GAA9C,mBAA+DF,EAA/D,SAEY,KAAbJ,EACC,cAAC,QAAD,CAAMrF,MAAK,2BAAOyE,GAAOY,UAAaM,GAAtC,SAAoDN,IAEpD,cAAC,QAAD,CAAMrF,MAAOyE,GAAOY,SAApB,qBCVAZ,GAASC,cAAWC,OAAO,CAC/BW,cAAe,CACbnB,cAAe,MACfxH,WAAY,cAEdiJ,OAAQ,CACN7K,OAAQ,OACRqI,QAAS,MACT/G,SAAU,MACVe,MAAO,OACPmI,OAAQ,oBACRT,gBAAiB,WAEnBrJ,KAAM,CACJY,SAAU,OAEZwJ,cAAe,CACb9K,OAAQ,OACRqC,MAAO,QACPgG,QAAS,MACTmC,OAAQ,uBAIGd,MCTAqB,GAbK,SAAC,GAAD,IAAGL,EAAH,EAAGA,WAAYJ,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,cAAzB,OAClB,eAAC,QAAD,CAAMtF,MAAK,2BAAOyE,GAAOa,eAAkBA,GAAiB9I,MAAM,EAAlE,UACE,cAAC,QAAD,CAAMwD,MAAOyE,GAAOmB,OAApB,mBAAgCH,EAAhC,OACA,cAAC,QAAD,CAAMzF,MAAOyE,GAAOoB,cAApB,SACgB,KAAbR,EACC,cAAC,QAAD,CAAMrF,MAAOyE,GAAOhJ,KAApB,SAA2B4J,IAE3B,cAAC,QAAD,CAAMrF,MAAOyE,GAAOhJ,KAApB,uBCTFgJ,GAASC,cAAWC,OAAO,CAC/BoB,eAAgB,CACd5B,cAAe,MACfxH,WAAY,aACZoI,aAAc,OAEhBiB,kBAAmB,CACjBjB,aAAc,OAEhBkB,SAAU,CACRpB,aAAc,oBACdE,aAAc,OAEhBmB,eAAgB,CACdlK,MAAO,aAIIyI,MC+BA0B,GA5Cc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAE5BC,EAQED,EARFC,aACAC,EAOEF,EAPFE,UACAC,EAMEH,EANFG,oBACAC,EAKEJ,EALFI,oBACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,MACAC,EAEEP,EAFFO,wBACAC,EACER,EADFQ,aAGIC,EAAuB,aAAVH,EAAuB,WAAa,aACjDI,EAA2D,QAA5BH,EAAoC,QAAO,KAEhF,OACE,eAAC,QAAD,CAAMnK,MAAM,EAAZ,UACE,cAAC,GAAD,CAAmBf,KAAK,+BACxB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOwB,SAApB,UACE,eAAC,QAAD,CAAMjG,MAAOyE,GAAOsB,eAApB,UACE,cAAC,GAAD,CAAgBN,WAAW,YAAYJ,SAAUgB,IACjD,cAAC,GAAD,CAAgBZ,WAAW,YAAYJ,SAAUiB,IACjD,cAAC,GAAD,CAAgBb,WAAW,kBAAkBJ,SAAUkB,IACvD,cAAC,GAAD,CAAgBd,WAAW,mBAAmBJ,SAAUmB,IACxD,cAAC,GAAD,CAAgBf,WAAW,cAAcJ,SAAUoB,IACnD,cAAC,GAAD,CAAgBhB,WAAW,YAAYJ,SAAUwB,OAEnD,cAAC,QAAD,CAAM7G,MAAOyE,GAAOsB,eAApB,SACE,cAAC,GAAD,CACEN,WAAW,gCACXJ,SAAUyB,EACVnB,UAAuC,QAA5BgB,EAAoClC,GAAOyB,oBAAiBpG,SAI7E,cAAC,GAAD,CACE2F,WAAW,gBACXJ,SAAUuB,EACVtB,cAAeb,GAAOuB,wBC3CxBvB,GAASC,cAAWC,OAAO,CAC/BoB,eAAgB,CACd5B,cAAe,SACfxH,WAAY,cAEdoK,oBAAqB,CACnBhC,aAAc,OAEhBiC,kCAAmC,CACjCjC,aAAc,MACd3H,MAAO,QAET4I,kBAAmB,CACjBjB,aAAc,OAEhBF,aAAc,CACZV,cAAe,SACfxH,WAAY,aACZkI,aAAc,oBACdE,aAAc,SAIHN,MC8EAwC,GAhGU,SAAC,GAAmB,IAAjBb,EAAgB,EAAhBA,UAExBc,EAQEd,EARFc,aACAC,EAOEf,EAPFe,wBACAC,EAMEhB,EANFgB,eACAC,EAKEjB,EALFiB,0BACAC,EAIElB,EAJFkB,mBACAC,EAGEnB,EAHFmB,WACAC,EAEEpB,EAFFoB,mBACAC,EACErB,EADFqB,kBAkBIC,EAAW,SAACC,EAAKC,GACrB,MAAY,KAARD,EACKC,EAAID,GAEJ,IAGLE,EAAc,SAACC,GAAD,MAAwB,QAAXA,EAAmB,QAAO,MACrDC,EAA0BF,EAAYP,GACtCU,EAAkBH,EAAYN,GAC9BU,EAAoBP,EAASR,EA1BR,CACzBgB,OAAQ,SACRC,QAAS,YACTC,QAAS,UACTC,OAAQ,UACRC,SAAU,WACVC,aAAc,iBAqBVC,EAAsBd,EAASN,EAnBR,CAC3BqB,kBAAmB,oBACnBC,aAAc,gBACdC,UAAW,YACXC,eAAgB,wBAChBC,SAAU,cACVC,SAAU,cAcZ,OACE,eAAC,QAAD,CAAMtM,MAAM,EAAZ,UACE,cAAC,GAAD,CAAmBf,KAAK,uCACxB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOsB,eAApB,UACE,cAAC,GAAD,CACEN,WAAW,qBACXJ,SAAU4C,EACVvC,mBAAoBjB,GAAOsC,sBAE7B,cAAC,GAAD,CACEtB,WAAW,gBACXJ,SAAU8B,EACV7B,cAAeb,GAAOuB,uBAG1B,cAAC,GAAD,CAAmBvK,KAAK,oCACxB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOsB,eAApB,UACE,cAAC,GAAD,CACEN,WAAW,wBACXJ,SAAUmD,EACV9C,mBAAoBjB,GAAOuC,oCAE7B,cAAC,GAAD,CACEvB,WAAW,gBACXJ,SAAUgC,EACV/B,cAAeb,GAAOuB,uBAG1B,cAAC,GAAD,CAAmBvK,KAAK,YACxB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOsB,eAApB,UACE,eAAC,QAAD,CAAM/F,MAAOyE,GAAOI,aAApB,UACE,cAAC,GAAD,CACEY,WAAW,sBACXJ,SAAU0C,EACVrC,mBAAoBjB,GAAOsC,sBAE7B,cAAC,GAAD,CACEtB,WAAW,mBACXJ,SAAU2C,EACVtC,mBAAoBjB,GAAOsC,sBAE7B,cAAC,GAAD,CACEtB,WAAW,iBACXJ,SAAUmC,EACVlC,cAAeb,GAAOuB,uBAG1B,cAAC,GAAD,CACEP,WAAW,gBACXJ,SAAUoC,EACVnC,cAAeb,GAAOuB,2BC9F1BvB,GAASC,cAAWC,OAAO,CAC/BoE,cAAe,CACbjE,gBAAiB,UACjBkE,UAAW,oBACX5O,SAAU,WACVC,OAAQ,MACR+C,MAAO,OACPrC,OAAQ,QAEVkO,kBAAmB,CACjB7O,SAAU,WACVmK,IAAK,MACLhK,MAAO,OACP8B,SAAU,MACV6M,WAAY,uBAIDzE,MCRA0E,GARU,kBACvB,cAAC,QAAD,CAAMC,OAAK,EAACpJ,MAAOyE,GAAOsE,cAA1B,SACE,cAAC,QAAD,CACE/I,MAAOyE,GAAOwE,kBACdI,OAAQ,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,0BAA0CD,EAA1C,eAA2DC,EAA3D,WCNR9E,GAASC,cAAWC,OAAO,CAC/B6E,cAAe,CACb1E,gBAAiB,UACjBD,aAAc,oBACdzH,MAAO,OACP6H,gBAAiB,MACjBwE,kBAAmB,OACnB1E,aAAc,OAEhBU,WAAY,CACVzJ,MAAO,UACPkN,WAAY,uBAIDzE,MCDAiF,GAZU,kBACvB,eAAC,QAAD,CAAMN,OAAK,EAACpJ,MAAOyE,GAAO+E,cAA1B,UACE,cAAC,QAAD,CAAMxJ,MAAO,CAACyE,GAAOgB,WAAY,CAAEpJ,SAAU,QAA7C,kDAGA,cAAC,QAAD,CAAM2D,MAAO,CAACyE,GAAOgB,WAAY,CAAEpJ,SAAU,MAAO0I,aAAc,QAAlE,wDAGA,cAAC,QAAD,CAAM/E,MAAO,CAACyE,GAAOgB,WAAY,CAAEpJ,SAAU,QAA7C,kCCVEoI,GAASC,cAAWC,OAAO,CAC/BgF,+BAAgC,CAC9BxF,cAAe,OAEjByF,0BAA2B,CACzBxG,QAAS,MACT2B,aAAc,MACd1I,SAAU,MACVyI,gBAAiB,UACjBD,aAAc,uBAIHJ,MCNAoF,GALiB,SAAC,GAAD,IAAGpO,EAAH,EAAGA,KAAH,OAC9B,cAAC,QAAD,CAAMuE,MAAOyE,GAAOkF,+BAApB,SACE,cAAC,QAAD,CAAM3J,MAAOyE,GAAOmF,0BAApB,SAAgDnO,OCJ9CgJ,GAASC,cAAWC,OAAO,CAC/BmF,SAAU,CACR7E,gBAAiB,MACjBd,cAAe,MACfU,aAAc,qBAEhBkF,cAAe,CACb1N,SAAU,MACVe,MAAO,QAETiI,SAAU,CACRhJ,SAAU,SAICoI,MCNAuF,GAPQ,SAAC,GAAD,IAAGvE,EAAH,EAAGA,WAAYhK,EAAf,EAAeA,KAAf,OACrB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOqF,SAApB,UACE,cAAC,QAAD,CAAM9J,MAAOyE,GAAOsF,cAApB,SAAoCtE,IACpC,cAAC,QAAD,CAAMzF,MAAOyE,GAAOY,SAApB,SAA+B5J,QCL7BgJ,GAASC,cAAWC,OAAO,CAC/BsF,qBAAsB,CACpBlF,aAAc,SAIHN,MCeAyF,GAjBU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAClBC,EAA+CD,EAA/CC,SAAUC,EAAqCF,EAArCE,UAAWC,EAA0BH,EAA1BG,SAAUC,EAAgBJ,EAAhBI,OAAQC,EAAQL,EAARK,IAE/C,OACE,eAAC,QAAD,CAAMxK,MAAOyE,GAAOwF,qBAApB,UACE,cAAC,GAAD,CAAyBxO,KAAK,cAC9B,cAAC,GAAD,CAAgBgK,WAAW,YAAYhK,KAAM2O,IAC7C,cAAC,GAAD,CAAgB3E,WAAW,UAAUhK,KAAM4O,IAC3C,cAAC,GAAD,CAAgB5E,WAAW,OAAOhK,KAAM6O,IACxC,cAAC,GAAD,CACE7E,WAAW,aACXhK,KAAI,UAAgB,SAAX8O,EAAoB,YAAc,cAE7C,cAAC,GAAD,CAAgB9E,WAAW,QAAQhK,KAAI,UAAK+O,EAAL,kBCjBvC/F,GAASC,cAAWC,OAAO,CAC/BoB,eAAgB,CACd5B,cAAe,MACfxH,WAAY,aACZoI,aAAc,OAEhBiB,kBAAmB,CACjBjB,aAAc,OAEhBkB,SAAU,CACRpB,aAAc,oBACdE,aAAc,SAIHN,MC6DAgG,GAvEgB,SAAC,GAAmB,IAAjBrE,EAAgB,EAAhBA,UAE9BsE,EAkBEtE,EAlBFsE,oBACAC,EAiBEvE,EAjBFuE,sBACAC,EAgBExE,EAhBFwE,MACAC,EAeEzE,EAfFyE,kBACAC,EAcE1E,EAdF0E,iBACAC,EAaE3E,EAbF2E,MACAC,EAYE5E,EAZF4E,SACAC,EAWE7E,EAXF6E,UACAC,EAUE9E,EAVF8E,OACAnQ,EASEqL,EATFrL,OACAoQ,EAQE/E,EARF+E,SACAvE,EAOER,EAPFQ,aACAwE,EAMEhF,EANFgF,QACAC,EAKEjF,EALFiF,IACAC,EAIElF,EAJFkF,KACAC,EAGEnF,EAHFmF,GACAC,EAEEpF,EAFFoF,UACAC,EACErF,EADFqF,SAGIC,EAA+B,KAAdF,EAAA,UAAsBA,EAAtB,cAAqCC,GAAa,GACnEE,EACiB,KAArBb,EAAA,UAA6BA,EAA7B,YAAiDD,GAAsB,GAEzE,OACE,eAAC,QAAD,CAAMrO,MAAM,EAAZ,UACE,cAAC,GAAD,CAAmBf,KAAK,yBACxB,eAAC,QAAD,CAAMuE,MAAOyE,GAAOwB,SAApB,UACE,eAAC,QAAD,CAAMjG,MAAOyE,GAAOsB,eAApB,UACE,cAAC,GAAD,CAAgBN,WAAW,YAAYJ,SAAU6F,IACjD,cAAC,GAAD,CAAgBzF,WAAW,cAAcJ,SAAUtK,IACnD,cAAC,GAAD,CAAgB0K,WAAW,oBAAoBJ,SAAU8F,IACzD,cAAC,GAAD,CAAgB1F,WAAW,cAAcJ,SAAU+F,IACnD,cAAC,GAAD,CAAgB3F,WAAW,UAAUJ,SAAUgG,IAC/C,cAAC,GAAD,CAAgB5F,WAAW,WAAWJ,SAAUiG,IAChD,cAAC,GAAD,CAAgB7F,WAAW,UAAUJ,SAAUkG,OAEjD,eAAC,QAAD,CAAMvL,MAAOyE,GAAOsB,eAApB,UACE,cAAC,GAAD,CAAgBN,WAAW,6BAA0BJ,SAAUsG,IAC/D,cAAC,GAAD,CAAgBlG,WAAW,cAAcJ,SAAU0F,IACnD,cAAC,GAAD,CAAgBtF,WAAW,iBAAiBJ,SAAUqG,IACtD,cAAC,GAAD,CAAgBjG,WAAW,iBAAiBJ,SAAU4F,IACtD,cAAC,GAAD,CAAgBxF,WAAW,MAAMJ,SAAU2F,OAE7C,cAAC,GAAD,CACEvF,WAAW,2BACXJ,SAAUsF,EACVrF,cAAeb,GAAOuB,oBAExB,cAAC,GAAD,CACEP,WAAW,8BACXJ,SAAUqF,EACVpF,cAAeb,GAAOuB,oBAExB,cAAC,GAAD,CACEP,WAAW,oBACXJ,SAAUuF,EACVtF,cAAeb,GAAOuB,uBAG1B,cAAC,GAAD,CACEP,WAAW,gBACXJ,SAAUuB,EACVtB,cAAeb,GAAOuB,wBCtExBvB,GAASC,cAAWC,OAAO,CAC/BW,cAAe,CACbnB,cAAe,SACfxH,WAAY,aACZoI,aAAc,SAIHN,MCEAmH,GAPY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOpO,EAAV,EAAUA,SAAV,OACzB,eAAC,QAAD,CAAMuC,MAAOyE,GAAOa,cAAe9I,MAAM,EAAzC,UACE,cAAC,GAAD,CAAyBf,KAAI,UAAKoQ,EAAL,OAC5BpO,MCNCgH,GAASC,cAAWC,OAAO,CAC/BU,SAAU,CACRhJ,SAAU,SAICoI,MCNTA,GAASC,cAAWC,OAAO,CAC/BoF,cAAe,CACb1N,SAAU,MACVe,MAAO,QAETiI,SAAU,CACRhJ,SAAU,MACVe,MAAO,SAET0O,aAAc,CACZ7G,gBAAiB,MACjBd,cAAe,MACfxH,WAAY,aACZkI,aAAc,uBAIHJ,MCMAsH,GArBwB,SAAC,GAAmB,IAAjB3F,EAAgB,EAAhBA,UAChCQ,EAA6BR,EAA7BQ,aAAcoF,EAAe5F,EAAf4F,WAChBC,EAAmBD,EAAWE,KAAK,OACzC,OACE,eAAC,QAAD,WACyB,IAAtBF,EAAWG,OACV,eAAC,QAAD,CAAMnM,MAAOyE,GAAOqH,aAApB,UACE,cAAC,QAAD,CAAM9L,MAAOyE,GAAOsF,cAApB,0BACA,cAAC,QAAD,CAAM/J,MAAOyE,GAAOY,SAApB,SAA+B4G,OAE/B,KACc,KAAjBrF,EACC,eAAC,QAAD,CAAM5G,MAAOyE,GAAOqH,aAApB,UACE,cAAC,QAAD,CAAM9L,MAAOyE,GAAOsF,cAApB,4BACA,cAAC,QAAD,CAAM/J,MAAOyE,GAAOY,SAApB,SAA+BuB,OAE/B,SClBJnC,GAASC,cAAWC,OAAO,CAC/BW,cAAe,CACbP,aAAc,MACdqH,SAAU,UAEZC,iBAAkB,CAChBjP,MAAO,QAETkP,sBAAuB,CACrBnI,cAAe,MACfxH,WAAY,aACZ4G,WAAY,QAGdgJ,sBAAuB,CACrBnP,MAAO,UAIIqH,MCWA+H,GA1BU,SAAC,GAAmB,IAAjBpG,EAAgB,EAAhBA,UAClBqG,EAAmErG,EAAnEqG,KAAMC,EAA6DtG,EAA7DsG,sBAAuBC,EAAsCvG,EAAtCuG,oBAAqB/F,EAAiBR,EAAjBQ,aAC1D,OACE,eAAC,QAAD,CAAM5G,MAAOyE,GAAOa,cAAe9I,MAAM,EAAzC,UACE,eAAC,QAAD,CAAMwD,MAAOyE,GAAO6H,sBAApB,UACE,cAAC,GAAD,CACE7G,WAAW,gBACXJ,SAAUoH,EACV/G,mBAAoBjB,GAAO4H,mBAE7B,cAAC,GAAD,CACE5G,WAAW,QACXJ,SAAUqH,EACVhH,mBAAoBjB,GAAO8H,wBAE7B,cAAC,GAAD,CACE9G,WAAW,QACXJ,SAAUsH,EACVjH,mBAAoBjB,GAAO8H,2BAG/B,cAAC,GAAD,CAAa9G,WAAW,gBAAgBJ,SAAUuB,QCzBlDnC,GAASC,cAAWC,OAAO,CAC/BU,SAAU,CACRhJ,SAAU,OAEZiJ,cAAe,CACbnB,cAAe,SACfxH,WAAY,aACZoI,aAAc,SAIHN,MCUAmI,GAjBW,SAAC,GAAmB,IAExCC,EAFuBC,EAAgB,EAAhBA,UACrBC,EAAuC,IAArBD,EAAUX,OAQlC,OANIY,IACFF,EAAgBC,EAAU5N,KAAI,SAAC3C,GAAD,OAC5B,cAAC,GAAD,CAAqC6J,UAAW7J,GAAzBA,EAAI,UAK7B,eAAC,QAAD,CAAMyD,MAAOyE,GAAOa,cAApB,UACE,cAAC,GAAD,CAAmB7J,KAAK,iBACvBsR,EAAkBF,EAAgB,cAAC,QAAD,CAAM7M,MAAOyE,GAAOY,SAApB,qBCgL1B2H,GA1LuB,SAAC,GAAmB,IAAjB5G,EAAgB,EAAhBA,UAC/B6G,EAA8C7G,EAA9C6G,8BAA+BC,EAAe9G,EAAf8G,WAgJjCC,EA9IS,CACb,CACExF,IAAK,iBACLrJ,MAAO,8BACP8O,iBAAkB,CAChBC,qBAAsB,kBACtBC,oBAAqB,gBACrBC,uBAAwB,mBACxBC,uBAAwB,kBACxBC,gBAAiB,aACjBC,6BAA8B,kBAC9BC,mBAAoB,YACpBC,yBAA0B,0BAC1BC,kBAAmB,YACnBC,cAAe,SACfC,sBAAuB,eAG3B,CACEpG,IAAK,cACLrJ,MAAO,2BACP8O,iBAAkB,CAChBY,eAAgB,OAChBC,aAAc,OACdC,gBAAiB,aACjBC,cAAe,MACfC,sBAAuB,mBACvBT,mBAAoB,cAGxB,CACEhG,IAAK,SACLrJ,MAAO,sBACP8O,iBAAkB,CAChBiB,iBAAkB,WAClBC,6BAA8B,8BAGlC,CACE3G,IAAK,mBACLrJ,MAAO,gCACP8O,iBAAkB,CAChBmB,8BAA+B,uBAC/BC,2BAA4B,yBAC5BC,kBAAmB,cACnBC,qBAAsB,qBACtBC,kBAAmB,YACnBC,kBAAmB,WACnBC,4BAA6B,2BAGjC,CACElH,IAAK,UACLrJ,MAAO,uBACP8O,iBAAkB,CAChB0B,6BAA8B,0BAC9BC,0BAA2B,qBAC3BC,iBAAkB,cAClBC,qBAAsB,gBACtBC,sBAAuB,0BAG3B,CACEvH,IAAK,YACLrJ,MAAO,WACP8O,iBAAkB,CAChB+B,kBAAmB,iBAGvB,CACExH,IAAK,qBACLrJ,MAAO,mCACP8O,iBAAkB,CAChBgC,gBAAiB,WACjBC,iBAAkB,WAClBC,wBAAyB,iBACzBC,uBAAwB,gBACxBC,iBAAkB,gBAClBC,qBAAsB,kBACtBC,oBAAqB,oBACrBC,qBAAsB,cACtBC,mBAAoB,gBAGxB,CACEjI,IAAK,gBACLrJ,MAAO,6BACP8O,iBAAkB,CAChByC,YAAa,MACbC,YAAa,MACbC,gBAAiB,UACjBC,qBAAsB,aACtBC,iBAAkB,UAClBC,iBAAkB,eAClBC,iCAAkC,sBAClCC,mBAAoB,iBAGxB,CACEzI,IAAK,gBACLrJ,MAAO,iBACP8O,iBAAkB,CAChBiD,eAAgB,SAChBC,uBAAwB,mBACxBC,qBAAsB,gBACtBC,wBAAyB,yBAG7B,CACE7I,IAAK,2BACLrJ,MAAO,yBACP8O,iBAAkB,CAChBqD,YAAa,MACbC,WAAY,KACZC,iCAAkC,6BAGtC,CACEhJ,IAAK,gCACLrJ,MAAO,6BACP8O,iBAAkB,CAChBwD,YAAa,MACbC,oBAAqB,YACrBC,kBAAmB,UACnBC,kBAAmB,YACnBC,uBAAwB,qBAG5B,CACErJ,IAAK,cACLrJ,MAAO,+BAET,CACEqJ,IAAK,oBACLrJ,MAAO,+BAET,CACEqJ,IAAK,SACLrJ,MAAO,UAIiBY,KAAI,SAAC3C,GAC/B,IAAQoL,EAAiCpL,EAAjCoL,IAAKrJ,EAA4B/B,EAA5B+B,MAAO8O,EAAqB7Q,EAArB6Q,iBACd6D,EAAehE,EAA8BtF,GAC7CoF,GAAmC,IAAjBkE,EAExB,QAAqBnR,IAAjBmR,EAA4B,CAC9B,IAAMC,EAAa,CACjBtK,aAAc,GACdoF,WAAY,IAGd,GAAIe,EAAiB,CACnB,IAAQf,EAA6BiF,EAA7BjF,WAAYpF,EAAiBqK,EAAjBrK,aAIpB,GAHIA,IACFsK,EAAWtK,aAAeA,GAExBoF,EAAY,CACd,IAAMmF,EAA2BnF,EAAW9M,KAAI,SAACkS,GAAD,OAAahE,EAAiBgE,MAC9EF,EAAWlF,WAAamF,GAG5B,OACE,cAAC,GAAD,CAA8BtF,MAAOvN,EAArC,SACGyO,EACC,cAAC,GAAD,CAAgC3G,UAAW8K,IAE3C,cAAC,QAAD,CAAMlR,MAAOyE,GAAOY,SAApB,SAAuC,cAARsC,EAAsB,SAAW,SAJ3CA,OAU/B,OACE,eAAC,QAAD,WACE,cAAC,GAAD,CAAmBlM,KAAK,+BACvB0R,EACD,cAAC,GAAD,CAAgBL,UAAWI,QC3L3BzI,GAASC,cAAWC,OAAO,CAC/B0M,cAAe,CACblN,cAAe,MACf/I,eAAgB,cAElBiK,SAAU,CACRhJ,SAAU,OAEZiV,wBAAyB,CACvBpN,cAAe,MACfW,aAAc,oBACdE,aAAc,SAIHN,MCHA8M,GATY,SAAC,GAAD,IAAG1F,EAAH,EAAGA,MAAOpQ,EAAV,EAAUA,KAAV,OACzB,eAAC,QAAD,CAAMuE,MAAOyE,GAAO6M,wBAApB,UACE,cAAC,GAAD,CAAyB7V,KAAI,UAAKoQ,EAAL,OAC7B,cAAC,QAAD,CAAM7L,MAAOyE,GAAO4M,cAApB,SACE,cAAC,QAAD,CAAMrR,MAAOyE,GAAOY,SAApB,mBAA2C,KAAT5J,EAAcA,EAAO,eCPvDgJ,GAASC,cAAWC,OAAO,CAC/BW,cAAe,CACbP,aAAc,MACdqH,SAAU,UAEZC,iBAAkB,CAChBjP,MAAO,QAETkP,sBAAuB,CACrBnI,cAAe,MACfxH,WAAY,aACZ4G,WAAY,QAGdiO,mBAAoB,CAClBpU,MAAO,UAIIqH,MCQAgN,GAvBa,SAAC,GAAmB,IAAjBrL,EAAgB,EAAhBA,UACrB9H,EAA4C8H,EAA5C9H,MAAOmF,EAAqC2C,EAArC3C,KAAMiO,EAA+BtL,EAA/BsL,OAAQC,EAAuBvL,EAAvBuL,KAAM/K,EAAiBR,EAAjBQ,aAC7BgL,EAAyB,KAAXF,EAAA,UAAmBA,EAAnB,YAA6BC,GAAc,IAAO,GACtE,OACE,eAAC,QAAD,CAAM3R,MAAOyE,GAAOa,cAAe9I,MAAM,EAAzC,UACE,eAAC,QAAD,CAAMwD,MAAOyE,GAAO6H,sBAApB,UACE,cAAC,GAAD,CACE7G,WAAW,UACXJ,SAAU/G,EACVoH,mBAAoBjB,GAAO4H,mBAE7B,cAAC,GAAD,CACE5G,WAAW,QACXJ,SAAU5B,EACViC,mBAAoBjB,GAAO+M,wBAG/B,cAAC,GAAD,CAAa/L,WAAW,YAAYJ,SAAUuM,IAC9C,cAAC,GAAD,CAAanM,WAAW,gBAAgBJ,SAAUuB,QCtBlDnC,GAASC,cAAWC,OAAO,CAC/BU,SAAU,CACRhJ,SAAU,OAEZiJ,cAAe,CACbnB,cAAe,SACfxH,WAAY,aACZoI,aAAc,SAIHN,MCUAoN,GAjBe,SAAC,GAAmB,IAE5ChF,EAF2BC,EAAgB,EAAhBA,UACzBC,EAAuC,IAArBD,EAAUX,OAQlC,OANIY,IACFF,EAAgBC,EAAU5N,KAAI,SAAC3C,GAAD,OAC5B,cAAC,GAAD,CAAwC6J,UAAW7J,GAAzBA,EAAI,UAKhC,eAAC,QAAD,CAAMyD,MAAOyE,GAAOa,cAApB,UACE,cAAC,GAAD,CAAmB7J,KAAK,yBACvBsR,EAAkBF,EAAgB,cAAC,QAAD,CAAM7M,MAAOyE,GAAOY,SAApB,qBChBnCZ,GAASC,cAAWC,OAAO,CAC/BmN,KAAM,CACJ5N,cAAe,QAEjB6N,YAAa,CACXtI,kBAAmB,QAErBuI,iBAAkB,CAChB7N,cAAe,MACf/I,eAAgB,SAChB2J,aAAc,OAEhBkN,YAAa,CACXpN,aAAc,oBACdxI,SAAU,OAEZiV,wBAAyB,CACvBpN,cAAe,MACfW,aAAc,oBACdE,aAAc,SAIHN,MC4DAyN,GAvEa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBC,EAAuB,SAACxK,EAAKyK,GACjC,OAAIzK,EAAIyK,GACCzK,EAAIyK,GACC,IAEVC,EAAsB,SAAC1K,EAAKyK,EAAYE,GAC5C,GAAI3K,EAAIyK,GACN,OAAOzK,EAAIyK,GAAYE,IAGrBC,EAA4B,CAChCvF,8BAA8B,2BACzBmF,EAAqBD,EAAU,6BAC/BC,EAAqBD,EAAU,+BAEpCjF,WAAYiF,EAAQ,WAAiBA,EAAQ,WAAiB,IAE1DM,EAAuBN,EAAQ,eAAqBA,EAAQ,eAAqB,GACjFO,EAAcP,EAAQ,OACD,cAAvBA,EAAQ,OACN,aACA,aACF,GACEQ,EAAqBP,EAAqBD,EAAU,iBACpDS,EAAmBR,EAAqBD,EAAU,eAClDU,EAAiCT,EAAqBD,EAAU,iBAChEW,EAAkBR,EAAoBH,EAAU,iBAAkB,YAClEY,EAAmBT,EAAoBH,EAAU,iBAAkB,aACnEa,EAAwBV,EAC5BH,EACA,iBACA,yBAEIc,EAAkBX,EAAoBH,EAAU,iBAAkB,mBAElE1O,EAAO0O,EAAWA,EAAS1O,KAAO,GAExC,OACE,cAAC,YAAD,CACEoI,MAAK,+BAA0BiH,EAA1B,YAA6CC,EAA7C,YAAiEtP,GACtEyP,OAAO,UACPC,QAAQ,6BACRC,WAAW,MAJb,SAME,eAAC,QAAD,CAAMxX,KAAK,KAAKoE,MAAOyE,GAAOqN,KAAMtV,MAAI,EAAxC,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,QAAD,CAAMwD,MAAOyE,GAAOsN,YAApB,UACE,cAAC,QAAD,CAAM/R,MAAOyE,GAAOuN,iBAApB,SACE,cAAC,QAAD,CAAMhS,MAAOyE,GAAOwN,YAApB,uCAEF,cAAC,GAAD,CAAoBpG,MAAM,SAASpQ,KAAMiX,IACzC,cAAC,GAAD,CAAoB7G,MAAM,eAAepQ,KAAMgI,IAC9C0O,EAAQ,eACP,cAAC,GAAD,CAAkBhI,mBAAoBgI,EAAQ,iBAC5C,KAEJ,cAAC,GAAD,CAAoBtG,MAAM,iCAA8BpQ,KAAMuX,IAC9D,cAAC,GAAD,CAAoBnH,MAAM,wBAAqBpQ,KAAMwX,IACrD,cAAC,GAAD,CAA+B7M,UAAWoM,IAC1C,cAAC,GAAD,CAAwBpM,UAAWuM,IACnC,cAAC,GAAD,CAAsBvM,UAAWwM,IACjC,cAAC,GAAD,CAAuB9F,UAAW2F,IAClC,cAAC,GAAD,CAAkBrM,UAAWyM,a,gBC1EjCQ,GAAiB,SAAC,EAAwB7X,GAAS,IAA/B8X,EAA8B,EAA9BA,SAAa5X,EAAiB,kBACtD,EAAkCyE,mBAAS,MAA3C,oBAAOhF,EAAP,KAAkBoY,EAAlB,KAiBA,OAfAC,qBAAU,WACRD,EAAaE,SAASC,cAAc,UACnC,IAEHF,qBAAU,WACR,GAAIrY,EAAW,CACbK,EAAImY,QAAUC,OAAOnU,KAAK,GAAI,GAAI,8BAClCjE,EAAImY,QAAQF,SAASI,KAAKC,YAAY3Y,GACtCK,EAAImY,QAAQF,SAAS5H,MAAQ,6BAC7BrQ,EAAImY,QAAQI,eAAiB,kBAAMT,GAAS,IAC5C,IAAMU,EAAYxY,EAAImY,QACtB,OAAO,kBAAMK,EAAUC,YAExB,CAAC9Y,EAAWK,EAAK8X,IAEbnY,GAAa+Y,uBAAaxY,EAAM+B,SAAUtC,IAEpCU,OAAMC,WAAWuX,ICjB1Bc,GAAW,SAAC,EAAuD3Y,GAAxD,IAAG4Y,EAAH,EAAGA,KAAMC,EAAT,EAASA,uBAAwBC,EAAjC,EAAiCA,oBAAjC,OACf,qCACE,cAAC,mBAAD,CAAiBb,SAAU,cAAC,GAAD,CAAqBtB,SAAUiC,IAA1D,SACG,YAAuB,IAApBG,EAAmB,EAAnBA,IAAmB,EAAdC,UACiBhZ,EAAIiZ,cAAcd,QAAUY,MAGvDD,GACC,cAAC,GAAD,CAAgB9Y,IAAKA,EAAIkZ,aAAcpB,SAAUe,EAAjD,SACE,cAAC,aAAD,CACErU,MAAO,CACLjF,OAAQ,OACRqC,MAAO,QAHX,SAME,cAAC,GAAD,CAAqB+U,SAAUiC,YAM1BvY,OAAM8Y,KAAK9Y,IAAMC,WAAWqY,K,kDC6B5BlT,GAvDE,SAAC2T,EAAOC,EAAiBC,EAAaC,GACrD,MAAoC5U,mBAASyU,GAAgB,MAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAoC9U,oBAAS,GAA7C,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoChV,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KAEMC,EAAmBC,uBAAY,WACnCF,EAAc,IACdF,GAAc,KACb,IAQGK,EAAqBD,uBACzB,SAACE,EAAqBC,GAEhBD,GADgC,OAAfC,GAEnBP,GAAc,GACdE,EAAc,qBACTC,MAET,CAACA,IAGGK,EAAqBJ,uBACzB,SAACK,GAAD,OAAeX,EAAcW,GAAwB,QACrD,IAGIC,EAAoBN,uBAAY,SAACO,GACjCA,GACFb,EAAc,QAEf,IASH,OAPAzB,qBAAU,kBAAMgC,EAAmBX,EAAiBG,KAAa,CAC/DH,EACAG,EACAQ,IAEFhC,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IACnDnC,qBAAU,kBAAMqC,EAAkBf,KAAc,CAACA,EAAae,IACvD,CACL,CACET,aACAF,aACAF,cAvCmB,SAACe,GACtBd,EAAcc,GACdhB,EAAcgB,GACdT,OCbEtb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8b,MAAO,CACLzQ,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAEnCqb,UAAW,CACT1S,WAAY,OACZpH,YAAa,OACb+Z,UAAW,OAEb/a,UAAW,CACT,UAAW,CACT,0BAA2B,CACzBoI,WAAY,OACZpH,YAAa,OACb+Z,UAAW,OAEb,kBAAmB,CACjBA,UAAW,aAMJlc,M,gFCqDAmc,GApEU,SAAC,GAQnB,IAPLC,EAOI,EAPJA,KACAxB,EAMI,EANJA,MACAC,EAKI,EALJA,gBACAxZ,EAII,EAJJA,UACAyZ,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACGrZ,EACC,kBACET,EAAUjB,KAChB,EAAqCiH,GAAS2T,EAAOC,EAAiBC,EAAaC,GAAnF,oBAAOsB,EAAP,KAAmBC,EAAnB,KACQlB,EAAuCiB,EAAvCjB,WAAYF,EAA2BmB,EAA3BnB,WAAYF,EAAeqB,EAAfrB,WAE1BuB,EAAgB,GAChBC,EAAe,CACnB5Z,QAAS,SACT6Z,SAAU,IACVC,mBAAoB,mBACpBC,eAAgB,2CAChBC,eAAgB,2CAChBC,QAAS,IAAIC,KAAK,OAAQ,KAAM,MAChCC,QAAS,IAAID,KAAK,OAAQ,KAAM,OA4ClC,MAzCa,SAATV,EACFG,EAAcS,KACZ,eAACC,GAAA,EAAD,CAAajB,MAAOd,EAApB,UACE,cAAC,KAAD,yBACE7Z,UAAWkC,YAAKlC,EAAWJ,EAAQE,UAAW+Z,GAAcja,EAAQ+a,QAChEQ,GAFN,IAGE5B,MAAOI,EACPkC,SAAUZ,GACN5a,IAEL0Z,GAAc,cAAC+B,GAAA,EAAD,CAAgB9b,UAAWJ,EAAQgb,UAAnC,SAA+Cb,MAR5B,aAWpB,SAATgB,EACTG,EAAcS,KACZ,eAACC,GAAA,EAAD,CAAajB,MAAOd,EAApB,UACE,cAAC,KAAD,yBACE7Z,UAAWkC,YAAKlC,EAAWJ,EAAQE,UAAW+Z,GAAcja,EAAQ+a,QAChEQ,GAFN,IAGE5B,MAAOI,EACPkC,SAAUZ,GACN5a,IAEL0Z,GAAc,cAAC+B,GAAA,EAAD,CAAgB9b,UAAWJ,EAAQgb,UAAnC,SAA+Cb,MAR5B,aAYtCmB,EAAcS,KACZ,eAACC,GAAA,EAAD,CAAajB,MAAOd,EAApB,UACE,cAAC,KAAD,yBACE7Z,UAAWkC,YAAKlC,EAAWJ,EAAQE,UAAW+Z,GAAcja,EAAQ+a,QAChEQ,GAFN,IAGE5B,MAAOI,EACPkC,SAAUZ,GACN5a,IAEL0Z,GAAc,cAAC+B,GAAA,EAAD,CAAgB9b,UAAWJ,EAAQgb,UAAnC,SAA+Cb,MAR5B,iBAajC,mCAAGmB,KC3ENa,GAAcC,wBAAc,iB,iDC4CnBpW,GA5CE,SAAC2T,EAAOC,EAAiBC,EAAaC,GACrD,MAAoC5U,mBAASyU,GAAgB,IAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAoC9U,qBAApC,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoChV,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KAEMiC,EAAc,kBAAMnC,GAAc,IAQlCK,EAAqBD,uBAAY,SAACE,EAAqBC,GACvDD,GAAsC,KAAfC,GACzBP,GAAc,GACdE,EAAc,qBACTiC,MACN,IAEGzB,EAAoBN,uBAAY,SAACO,GACjCA,GACFb,EAAc,MAEf,IAUH,OARAzB,qBAAU,kBAAMgC,EAAmBX,EAAiBG,KAAa,CAC/DH,EACAG,EACAQ,IAEFhC,qBAAU,kBAAMyB,EAAcL,GAAgB,MAAK,CAACA,IACpDpB,qBAAU,kBAAMqC,EAAkBf,KAAc,CAACA,EAAae,IAEvD,CACL,CACET,aACAF,aACAF,cA/BmB,SAACxU,GACtByU,EAAczU,EAAM+W,OAAO3C,OAC3BG,EAAcvU,EAAM+W,OAAO3C,OAC3B0C,OCVEtd,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsd,sBAAuB,CACrB1a,aAAc,MACdsB,YAAa,OACb,UAAW,CACT,wBAAyB,CAAEF,QAAS,QACpC,uBAAwB,CACtB+F,WAAY,MACZC,cAAe,SAIrB8R,MAAO,CACLzQ,OAAQ,YACRxI,YAAa7C,EAAMQ,QAAQuB,MAAMrB,KACjCwI,QAAS,OAEXqU,UAAW,CACT,UAAW,CACT,8BAA+B,CAC7BC,UAAW,OACXC,WAAY,YAIlBC,mBAAmB,2BACd1d,EAAMgC,iBAAiB,CAAEC,YAAa,GAAI4I,aAAc,GAAI3G,YAAa,MAD5D,IAEhBjB,WAAY,IACZC,MAAO,gBAETya,wBAAyB,CACvB9S,aAAc,OAEhBkR,UAAW,CACT1S,WAAY,OACZpH,YAAa,OACb+Z,UAAW,WAIAlc,MCwDA8d,GArFW,SAAC,GAUpB,IATLC,EASI,EATJA,cACAC,EAQI,EARJA,aACAjD,EAOI,EAPJA,cACAH,EAMI,EANJA,MACAqD,EAKI,EALJA,SACAC,EAII,EAJJA,mBACArD,EAGI,EAHJA,gBACAsD,EAEI,EAFJA,KACArD,EACI,EADJA,YAEM7Z,EAAUjB,KAEhB,EAAqCiH,GAAS2T,EAAOC,EAAiBC,EAAaC,GAAnF,oBAAOsB,EAAP,KAAmBC,EAAnB,KAEQlB,EAAuCiB,EAAvCjB,WAAYF,EAA2BmB,EAA3BnB,WAAYF,EAAeqB,EAAfrB,WAE5BoD,EAAkB,GAClBC,EAAU,EACVC,EAAW,GACf,GAAIN,EAAc,CAChB,IADgB,EACVO,EAAkBR,EAAc7Y,KAAI,SAAC3C,GACzC,IAAM0U,EAAe1U,EAAI,MACnBic,EAAejc,EAAI,MACzB,OACE,cAACkc,GAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,IAET/D,MAAO3D,EACP3S,MAAOka,EACPP,SAAUA,EACV5c,UAAWkC,YAAKtC,EAAQwc,UAAWS,IAJ9BjH,MAPK,eAeCsH,GAfD,IAehB,2BAAkC,CAAC,IAA1Bhc,EAAyB,QAChC+b,EAAStB,KAAKza,GACU,IAApB+b,EAASnM,QAAgBoM,EAAgBpM,SAAWkM,IACtDD,EAAgBpB,KACd,cAAC9b,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWkC,YACTtC,EAAQ2c,mBACR1C,GAAcja,EAAQ4c,yBAN1B,SAUGS,GAVH,4BAQ4BD,KAK9BC,EAAW,IAEbD,KAlCc,+BAsClB,OACE,eAACpB,GAAA,EAAD,CAAa2B,UAAU,WAAW5C,MAAOd,EAAzC,UACE,cAAC2D,GAAA,EAAD,CAAWD,UAAU,SAArB,SAA+B,KAC/B,cAACE,GAAA,EAAD,CAAYlE,MAAOI,EAAYkC,SAAUZ,EAAgB6B,KAAMA,EAA/D,SACE,eAACjd,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQuc,sBAAuBtC,GAAcja,EAAQ+a,OAHvE,UAKGgC,GAAgBI,GACfJ,GACAD,EAAc7Y,KAAI,SAAC3C,GAAD,OAChB,cAACkc,GAAA,EAAD,CACEC,QAAS,cAACC,GAAA,EAAD,IAET/D,MAAOrY,EAAKqY,MACZtW,MAAO/B,EAAK+B,MACZ2Z,SAAUA,EACV5c,UAAWkC,YAAKtC,EAAQwc,UAAWS,IAJ9B3b,EAAKqY,eASnBM,GAAc,cAACiC,GAAA,EAAD,CAAgB9b,UAAWJ,EAAQgb,UAAnC,SAA+Cb,QC5F9Dpb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6e,WAAY7e,EAAMgC,iBAAiB,CAAEgI,cAAe,SAGvClK,M,4DCkBAgf,GAlBI,SAAC,GAAqE,IAAnEnN,EAAkE,EAAlEA,MAAOpO,EAA2D,EAA3DA,SAAUpC,EAAiD,EAAjDA,UAAW4d,EAAsC,EAAtCA,sBAA0Bvd,EAAY,kBAChFT,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,yBACEuB,GAAI,GACJF,MAAI,EACJpB,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWA,GACPK,GAPN,cASE,cAACJ,EAAA,EAAD,CAAYD,UAAWkC,YAAKtC,EAAQ8d,WAAYE,GAAhD,SAAyEpN,IACxEpO,OCjBDzD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCud,UAAWvd,EAAMgC,iBAAiB,CAChCkB,MAAO,MAET3B,KAAM,CACJ8H,WAAY,aAIDvJ,MC8BAkf,GAjCgB,SAAC,GAWzB,IAVLrN,EAUI,EAVJA,MACAkM,EASI,EATJA,cACAnD,EAQI,EARJA,MACAG,EAOI,EAPJA,cACAoE,EAMI,EANJA,gBACA9d,EAKI,EALJA,UACA+d,EAII,EAJJA,eACAC,EAGI,EAHJA,qBACAlB,EAEI,EAFJA,KACAtD,EACI,EADJA,gBAEM5Z,EAAUjB,KAChB,OACE,cAAC,GAAD,CAAY6R,MAAOA,EAAOxQ,UAAWA,EAArC,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACqB,KAAK,SAArB,UACE,cAAC,GAAD,CACEub,cAAeA,EACfG,mBAAoB3a,YAAKtC,EAAQwc,UAAW2B,GAC5CxE,MAAOA,EACPG,cAAeA,EACfoD,KAAMA,EACNtD,gBAAiBA,IAElBsE,GACC,cAAC7d,EAAA,EAAD,CAAYsB,QAAQ,QAAQvB,UAAWkC,YAAKtC,EAAQQ,KAAM4d,GAA1D,SACGF,UChCPnf,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCof,WAAW,aACTlc,MAAO,OACP3C,WAAYP,EAAMQ,QAAQgJ,QAAQ6V,KAClCtc,YAAa,QACbC,YAAa,YACbH,YAAa7C,EAAMQ,QAAQsC,UAAUpC,MAClCV,EAAMgC,iBAAiB,CAAE+H,WAAY,SAI7BjK,M,wBCCAwf,GATK,SAAC,GAAmC,IAAjC/d,EAAgC,EAAhCA,KAAMJ,EAA0B,EAA1BA,UAAcK,EAAY,kBAC/CT,EAAUjB,KAChB,OACE,cAACsB,EAAA,EAAD,yBAAYsB,QAAQ,KAAKvB,UAAWkC,YAAKtC,EAAQqe,WAAYje,IAAgBK,GAA7E,aACGD,M,4BCDQge,GANC,SAAC,GAAD,IAAGhc,EAAH,EAAGA,SAAUpC,EAAb,EAAaA,UAAcK,EAA3B,yBACd,cAACR,EAAA,EAAD,yBAAMC,WAAS,EAACC,eAAe,SAASuB,WAAW,aAAatB,UAAWA,GAAeK,GAA1F,aACG+B,MCFCzD,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,mBACDD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BiH,aAAc,MACd3G,eAAgB,SAChB2J,aAAc,SAJd,cAMD7K,EAAMW,YAAYC,GAAG,MAAQ,CAC5BiH,aAAc,OACd3G,eAAgB,aAChB2J,aAAc,QATd,cAWD7K,EAAMW,YAAYC,GAAG,MAAQ,CAC5BiH,aAAc,OACd3G,eAAgB,aAChB2J,aAAc,QAdd,OAmBS/K,M,4BCRA0f,GATW,SAAC,GAAuC,IAArCjc,EAAoC,EAApCA,SAAUpC,EAA0B,EAA1BA,UAAcK,EAAY,kBACzDT,EAAUjB,KAChB,OACE,cAACkB,EAAA,EAAD,yBAAMqB,MAAI,EAACE,GAAI,GAAIkd,GAAI,EAAGte,UAAWkC,YAAKtC,EAAQd,KAAMkB,IAAgBK,GAAxE,aACG+B,MCPDzD,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,mBACDD,EAAMW,YAAYC,GAAG,MAAQ,CAAEsD,YAAa,MAAOhD,eAAgB,WADlE,cAEDlB,EAAMW,YAAYC,GAAG,MAAQ,CAAEsD,YAAa,OAAQhD,eAAgB,aAFnE,cAGDlB,EAAMW,YAAYC,GAAG,MAAQ,CAAEsD,YAAa,OAAQhD,eAAgB,aAHnE,OAOSpB,M,4BCIA0f,GATW,SAAC,GAAuC,IAArCjc,EAAoC,EAApCA,SAAUpC,EAA0B,EAA1BA,UAAcK,EAAY,kBACzDT,EAAUjB,KAChB,OACE,cAACkB,EAAA,EAAD,yBAAMqB,MAAI,EAACE,GAAI,GAAIkd,GAAI,EAAGte,UAAWkC,YAAKtC,EAAQd,KAAMkB,IAAgBK,GAAxE,aACG+B,M,UCwDQwD,GA/DE,SAAC4T,EAAiBD,EAAOG,EAAe6E,EAAqB9E,GAC5E,MAAoC3U,mBAASyU,GAAgB,IAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAoC9U,qBAApC,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoChV,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KAEMC,EAAmBC,uBAAY,WACnCF,EAAc,IACdF,GAAc,KACb,IAYGQ,EAAqBJ,uBAAY,SAACK,GAAD,OAAeX,EAAcW,KAAY,IAE1EC,EAAoBN,uBAAY,SAACO,GACjCA,GACFb,EAAc,MAEf,IAEGO,EAAqBD,uBACzB,SAACE,EAAqBC,GAChBD,GAAsC,KAAfC,GACzBP,GAAc,GACdE,EAAc,qBACTC,MAET,CAACA,IAiBH,OAdA9B,qBAAU,WACJoG,GACFA,EAAoB5E,KAErB,CAACA,EAAY4E,IAEhBpG,qBAAU,kBAAMgC,EAAmBX,EAAiBG,KAAa,CAC/DH,EACAG,EACAQ,IAEFhC,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IACnDnC,qBAAU,kBAAMqC,EAAkBf,KAAc,CAACA,EAAae,IAEvD,CACL,CACET,aACAF,aACAF,cA9CmB,SAACxU,GACtByU,EAAczU,EAAM+W,OAAO3C,OAC3BG,EAAcvU,EAAM+W,OAAO3C,OAC3BU,KAG8B,SAAC9U,GAC/ByU,EAAczU,EAAM+W,OAAO3C,MAAMiF,WCjB/B7f,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,KAAK,yBACHgD,WAAY,IACZ2c,UAAW,aACXC,SAAU,OACV7Q,WAAYhP,EAAM8f,WAAW9Q,WAC7B+Q,WAAY,MACZ/c,YAAa,MACbJ,aAAc,OACX5C,EAAMgC,iBAAiB,CACxB+H,WAAY,EACZC,cAAe,GACf9F,YAAa,GACb2D,aAAc,MAZd,uBAcD7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAfV,cAiBDnC,EAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAlBV,cAoBDnC,EAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SArBV,cAuBF,UAAW,CACTa,YAAa,MACbH,YAAa7C,EAAMQ,QAAQsC,UAAUpC,OAzBrC,IA4BJob,MAAO,CACLzQ,OAAQ,YACRxI,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAEnCsf,YAAa,CACX9c,MAAO,QAET6Y,UAAW,CACT1S,WAAY,OACZpH,YAAa,OACb+Z,UAAW,WAIAlc,M,kHCEAmgB,GAvCiB,SAAC,GAU1B,IATLpW,EASI,EATJA,YACA1E,EAQI,EARJA,GACAhE,EAOI,EAPJA,UACAwZ,EAMI,EANJA,gBACAD,EAKI,EALJA,MACAG,EAII,EAJJA,cACA6E,EAGI,EAHJA,oBACA9E,EAEI,EAFJA,YACGpZ,EACC,kBACET,EAAUjB,KAChB,EAA8DiH,GAC5D4T,EACAD,EACAG,EACA6E,EACA9E,GALF,oBAAOuB,EAAP,KAAmBC,EAAnB,KAAmC8D,EAAnC,KAOQhF,EAAuCiB,EAAvCjB,WAAYF,EAA2BmB,EAA3BnB,WAAYF,EAAeqB,EAAfrB,WAEhC,OACE,eAACiC,GAAA,EAAD,CAAajB,MAAOd,EAAY7Z,UAAWkC,YAAKlC,EAAWJ,EAAQif,aAAnE,UACE,cAACG,GAAA,EAAD,aACEtW,YAAaA,EACb1E,GAAIA,EACJhE,UAAWkC,YAAKtC,EAAQd,KAAM+a,GAAcja,EAAQ+a,OACpDsE,QAAS,EACTC,KAAK,KACL3F,MAAOI,EACPkC,SAAUZ,EACVkE,OAAQJ,GACJ1e,IAELwZ,GAAc,cAACiC,GAAA,EAAD,CAAgB9b,UAAWJ,EAAQgb,UAAnC,SAA+Cb,Q,6CClCrDqF,GALgB,SAAC,GAAD,IAAG5O,EAAH,EAAGA,MAAOxQ,EAAV,EAAUA,UAAWqf,EAArB,EAAqBA,kBAAsBhf,EAA3C,yBAC7B,cAAC,GAAD,CAAYmQ,MAAOA,EAAOxQ,UAAWA,EAArC,SACE,cAAC,GAAD,aAAyBA,UAAWqf,GAAuBhf,O,UC4EhDif,GA7EC,WACd,MAA4CC,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBAIhBC,EAAoB,SAAC5C,GAAD,OAAU,SAACvD,GAAD,OAClCkG,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,IAEhBC,cAAc,2BACTD,EAAS,eADD,kBAEV7C,EAAOvD,WAqDd,MAAO,CA5DmBiG,EAAlBI,cA8DN,CACEC,4BApDgCC,aAAqBJ,EAAkB,gBAAiB,IAAK,CAC/FK,UAAU,IAoDRC,uCAlD2CF,aAC7CJ,EAAkB,2BAClB,IACA,CACEK,UAAU,IA+CVE,8BA5CkCH,aACpCJ,EAAkB,kBAClB,IACA,CACEK,UAAU,IAyCVG,yCAtC6CJ,aAC/CJ,EAAkB,6BAClB,IACA,CACEK,UAAU,IAmCVI,kCAhCsCL,aACxCJ,EAAkB,sBAClB,IACA,CACEK,UAAU,IA6BVK,0BA1B8BN,aAAqBJ,EAAkB,cAAe,IAAK,CAC3FK,UAAU,IA0BRM,kCAvBsCP,aACxCJ,EAAkB,sBAClB,IACA,CACEK,UAAU,IAoBVO,iCAjBqCR,aACvCJ,EAAkB,qBAClB,IACA,CACEK,UAAU,OC9DVphB,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvC0hB,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD8W,WAAW,2BACN3hB,EAAMgC,iBAAiB,CAAEgI,cAAe,MADnC,IAER4X,UAAW,uCAEbC,sBAAsB,2BACjB7hB,EAAMgC,iBAAiB,CAAEgI,cAAe,MADxB,IAEnB4X,UAAW,uCAEbE,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,OAUKpD,MCRTiiB,GAAgB,SAAC,GAAoC,IAAlC5gB,EAAiC,EAAjCA,UAAWwZ,EAAsB,EAAtBA,gBAC5B5Z,EAAUjB,KAEhB,EAYI2gB,KAZJ,oBACEE,EADF,YAGIK,EAHJ,EAGIA,4BACAG,EAJJ,EAIIA,uCACAC,EALJ,EAKIA,8BACAC,EANJ,EAMIA,yCACAC,EAPJ,EAOIA,kCACAC,EARJ,EAQIA,0BACAC,EATJ,EASIA,kCACAC,EAVJ,EAUIA,iCAKFzU,EAQE2T,EARF3T,aACAC,EAOE0T,EAPF1T,wBACAC,EAMEyT,EANFzT,eACAC,EAKEwT,EALFxT,0BACAC,EAIEuT,EAJFvT,mBACAC,EAGEsT,EAHFtT,WACAC,EAEEqT,EAFFrT,mBACAC,EACEoT,EADFpT,kBAGF,OACE,eAACvM,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAAatB,UAAWA,EAAtE,UACE,cAAC,GAAD,CACEI,KAAK,oCACLJ,UAAWJ,EAAQ2gB,gBACnBhf,QAAQ,UAEV,eAAC1B,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXvB,eAAe,aACfC,UAAWJ,EAAQ2gB,gBALrB,UAOE,cAAC1gB,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ4gB,YAAjE,SACE,cAAC,GAAD,CACE9D,cAAe,CACb,CAAEnD,MAAO,SAAUtW,MAAO,UAC1B,CAAEsW,MAAO,UAAWtW,MAAO,aAC3B,CAAEsW,MAAO,UAAWtW,MAAO,WAC3B,CAAEsW,MAAO,SAAUtW,MAAO,WAC1B,CAAEsW,MAAO,WAAYtW,MAAO,YAC5B,CAAEsW,MAAO,eAAgBtW,MAAO,iBAElC0Z,cAAY,EACZG,KAAK,eACLpD,cAAemG,EACftG,MAAO1N,EACP2N,gBAAiBA,EAAe,2BAGpC,cAAC,GAAD,CACEhJ,MAAM,iBACN9H,YAAY,sBACZ6Q,MAAOzN,EACP4N,cAAesG,EACfX,kBAAmBzf,EAAQ+gB,cAG/B,cAAC,GAAD,CACEvgB,KAAK,+BACLJ,UAAWJ,EAAQ2gB,gBACnBhf,QAAQ,UAEV,eAAC1B,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWJ,EAAQ2gB,gBAJrB,UAME,cAAC1gB,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ4gB,YAAjE,SACE,cAAC,GAAD,CACE9D,cAAe,CACb,CAAEnD,MAAO,oBAAqBtW,MAAO,qBACrC,CAAEsW,MAAO,eAAgBtW,MAAO,iBAChC,CAAEsW,MAAO,YAAatW,MAAO,aAC7B,CAAEsW,MAAO,iBAAkBtW,MAAO,yBAClC,CAAEsW,MAAO,WAAYtW,MAAO,eAC5B,CAAEsW,MAAO,WAAYtW,MAAO,cAE9B6Z,KAAK,iBACLpD,cAAeuG,EACf1G,MAAOxN,EACP4Q,cAAY,EACZnD,gBAAiBA,EAAe,6BAGpC,cAAC,GAAD,CACEhJ,MAAM,iBACN9H,YAAY,sBACZ6Q,MAAOvN,EACP0N,cAAewG,EACfb,kBAAmBzf,EAAQ+gB,cAG/B,cAAC,GAAD,CAAavgB,KAAK,UAAUJ,UAAWJ,EAAQ2gB,gBAAiBhf,QAAQ,UACxE,eAAC,GAAD,CAASvB,UAAWJ,EAAQ2gB,gBAA5B,UACE,cAAC,GAAD,CAAmBnf,GAAI,EAAGpB,UAAWJ,EAAQihB,cAA7C,SACE,cAAC,GAAD,CACErQ,MAAM,uBACNkM,cAAe,CACb,CAAEnD,MAAO,MAAOtW,MAAO,SACvB,CAAEsW,MAAO,KAAMtW,MAAO,OAExB6Z,KAAK,qBACLpD,cAAeyG,EACf5G,MAAOtN,MAGX,cAAC6U,GAAD,CAAoB1f,GAAI,EAAxB,SACE,cAAC,GAAD,CACEoP,MAAM,oBACNkM,cAAe,CACb,CAAEnD,MAAO,MAAOtW,MAAO,SACvB,CAAEsW,MAAO,KAAMtW,MAAO,OAExB6Z,KAAK,aACLpD,cAAe0G,EACf7G,MAAOrN,SAKb,cAACrM,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ8gB,uBAHnD,SAKE,cAAC,GAAD,CACElQ,MAAM,kBACN9H,YAAY,uBACZ6Q,MAAOpN,EACPuN,cAAe2G,EACfhB,kBAAmBzf,EAAQ+gB,aAG/B,cAAC,GAAD,CACEnQ,MAAM,iBACN9H,YAAY,sBACZ6Q,MAAOnN,EACPsN,cAAe4G,EACfjB,kBAAmBzf,EAAQ+gB,eAMpBngB,OAAM8Y,KAAKsH,IC1BXhb,GA7IE,SAAC2T,EAAOpZ,EAAKqZ,EAAiBC,EAAasH,EAAWC,EAAStH,GAC9E,MAAoC5U,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KACA,EAAoClV,qBAApC,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoDhV,oBAAS,GAA7D,oBAAOmc,EAAP,KAA2BC,EAA3B,KACA,EAAoCpc,mBAASyU,GAAgB,IAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KAEMuH,EAAoBjH,uBAAY,SAACkH,GAAD,QAAWA,IAAsB,IACjEC,EAAmBF,EAAkBJ,GAErCO,EAAgBpH,uBAAY,SAACqH,EAAMC,GAAP,OAAmBA,IAAYA,EAAQlJ,QAAUiJ,KAAO,IAEpFtH,EAAmBC,uBACvB,SAACsH,GACCxH,EAAc,MACdF,GAAc,GACdwH,GAAc,EAAOE,GACrBN,GAAsB,KAExB,CAACI,IAGGG,EAAsBvH,uBAC1B,SAACG,EAAYqH,GACX,IAAMC,EAAc,SAACjH,EAAKkH,GAAN,OAAwBlH,EAAImH,MAAMD,IAUtD,OATqB,SAACE,GAAD,QAAcA,EAS5BC,CAJKJ,EAAYtH,EAHD8G,EAAkBO,GAGLA,EAJb,mFAUzB,CAACP,IAGGa,EAAwB9H,uBAC5B,SAACwH,EAAaF,GACZ,IAAMS,EAAiBd,EAAkBO,GACzCJ,GAAc,EAAME,GACpB1H,GAAc,GACdoH,GAAsB,GAEpBlH,EADEiI,EACY,sBAGZ,4FAIN,CAACd,EAAmBG,IAGhBY,EAA+BhI,uBACnC,SAACiI,EAAeX,GACd1H,GAAc,GACdE,EAAc,gDAAD,OAAiDmI,EAAjD,mBACbb,GAAc,EAAME,GACpBN,GAAsB,KAExB,CAACI,IAuBGrG,EApBmB,SAAC,GAAD,IAAGmH,EAAH,EAAGA,0BAA2BV,EAA9B,EAA8BA,YAAaS,EAA3C,EAA2CA,cAAeX,EAA1D,EAA0DA,QAA1D,OAAwE,SAC/Frc,GAGA,GADqBsc,EAAoBtc,EAAM+W,OAAO3C,MAAOmI,GAGtD,GAAIU,EAA2B,CACPjd,EAAM+W,OAAO3C,MAAMzI,OAASqR,EAEvDD,EAA6BC,EAAeX,GAE5CvH,EAAiBuH,QAGnBvH,EAAiBuH,QATjBQ,EAAsBN,EAAaF,GAWrC5H,EAAczU,EAAM+W,OAAO3C,OAC3BG,EAAcvU,EAAM+W,OAAO3C,QAGN8I,CAAiB,CACtCD,0BAA2Bf,EAC3BK,YAAaV,EACbmB,cAAepB,EACfS,QAASrhB,IAGLga,EAAqBD,uBACzB,YAAmE,IAAhEE,EAA+D,EAA/DA,oBAAqBkI,EAA0C,EAA1CA,wBACc,KAD4B,EAAjBjI,YAM3BD,GAHlBN,GAAc,GACdE,EAAc,oBAIJsI,GACVrI,MAGJ,CAACA,IAGGK,EAAqBJ,uBACzB,SAACK,GAAD,OAAeX,EAAcW,GAAwB,MACrD,IAGIC,EAAoBN,uBAAY,SAACO,GACjCA,GACFb,EAAc,MAEf,IAcH,OAZAzB,qBACE,kBACEgC,EAAmB,CACjBC,oBAAqBZ,EACrB8I,wBAAyBrB,EACzB5G,WAAYV,MAEhB,CAACQ,EAAoBX,EAAiByH,EAAoBtH,IAE5DxB,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IACnDnC,qBAAU,kBAAMqC,EAAkBf,KAAc,CAACA,EAAae,IAEvD,CACL,CACET,aACAF,aACAF,cAEFsB,I,mFCtIEsH,GAAY,SAAC,EAEjBpiB,GACI,IAFF4gB,EAEC,EAFDA,UAAWvH,EAEV,EAFUA,gBAAiBD,EAE3B,EAF2BA,MAAOG,EAElC,EAFkCA,cAAesH,EAEjD,EAFiDA,QAASvH,EAE1D,EAF0DA,YAAgBpZ,EAE1E,kBACH,EAAqCuF,GACnC2T,EACApZ,EACAqZ,EACAC,EACAsH,EACAC,EACAtH,GAPF,oBAAOsB,EAAP,KAAmBC,EAAnB,KAUQlB,EAAuCiB,EAAvCjB,WAAYF,EAA2BmB,EAA3BnB,WAAYF,EAAeqB,EAAfrB,WAEhC,OACE,cAAC,GAAD,aACEoB,KAAK,OACLJ,MAAOd,EACPE,WAAYA,EACZR,MAAOI,EACPkC,SAAUZ,GACN5a,KAKKG,OAAMC,WAAW8hB,I,4CC5B1BC,GAAc,SAAC,EAAkDriB,GAAnD,IAAGsiB,EAAH,EAAGA,WAAY/Z,EAAf,EAAeA,YAAa1I,EAA5B,EAA4BA,UAAcK,EAA1C,yBAClB,cAAC,GAAD,CAAYmQ,MAAOiS,EAAYziB,UAAWA,EAA1C,SACE,cAAC,GAAD,aAAW0I,YAAaA,EAAavI,IAAKA,GAASE,OAIxCG,OAAMC,WAAW+hB,ICT1B7jB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6jB,oBAAqB7jB,EAAMgC,iBAAiB,CAAE6I,aAAc,KAC5DiZ,aAAc,CACZ9Z,cAAe,WAIJlK,MCqDAikB,GAvDe,SAAC,GAA2B,IAAzB5iB,EAAwB,EAAxBA,UAAW6iB,EAAa,EAAbA,OAClC9T,EAA+C8T,EAA/C9T,SAAUC,EAAqC6T,EAArC7T,UAAWC,EAA0B4T,EAA1B5T,SAAUC,EAAgB2T,EAAhB3T,OAAQC,EAAQ0T,EAAR1T,IACzCvP,EAAUjB,KAChB,OACE,qCACE,cAAC,GAAD,CACEqB,UAAWkC,YAAKtC,EAAQ8iB,oBAAqB1iB,GAC7CI,KAAK,sBACLmB,QAAQ,UAEV,cAAC,GAAD,CACEiP,MAAK,mBAAc,QACnBnP,UAAU,MACVtB,eAAe,aACfuB,WAAW,UAJb,SAME,cAACrB,EAAA,EAAD,UAAa8O,MAEf,cAAC,GAAD,CACEyB,MAAK,iBAAY,QACjBnP,UAAU,MACVtB,eAAe,aACfuB,WAAW,UAJb,SAME,cAACrB,EAAA,EAAD,UAAa+O,MAEf,cAAC,GAAD,CACEwB,MAAK,mBAAc,QACnBnP,UAAU,MACVtB,eAAe,aACfuB,WAAW,UAJb,SAME,cAACrB,EAAA,EAAD,UAAagP,MAEf,cAAC,GAAD,CACEuB,MAAK,eAAU,QACfnP,UAAU,MACVtB,eAAe,aACfuB,WAAW,UAJb,SAME,cAACrB,EAAA,EAAD,UAAwB,SAAXiP,EAAoB,YAAc,eAEjD,cAAC,GAAD,CACEsB,MAAK,eAAU,QACfnP,UAAU,MACVtB,eAAe,aACfuB,WAAW,UACXsc,sBAAuBhe,EAAQ+iB,aALjC,SAOE,cAAC1iB,EAAA,EAAD,UAAakP,UCnBNmQ,GAjCC,WACd,MAA4CC,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBAEhBC,EAAoB,SAAC5C,GAAD,OAAU,SAACvD,GAAD,OAClCkG,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,kBAEf,iBAFe,YAAC,eAGZA,EAAS,gBAHE,kBAIb7C,EAAOvD,WAgBd,MAAO,CACLiG,EACA,CACEsD,qCAfyChD,aAC3CJ,EAAkB,yBAClB,IACA,CAAEK,UAAU,IAaVgD,+BAVmCjD,aACrCJ,EAAkB,mBAClB,IACA,CAAEK,UAAU,OCvBVphB,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCmkB,uBAAwB,CACtBzb,UAAW,cAEbgZ,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD+G,cAAY,mBACT5R,EAAMW,YAAYC,GAAG,MAAQ,CAC5BoJ,cAAe,MACf4X,UAAW,uCAHH,cAKT5hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BoJ,cAAe,QACf4X,UAAW,UAPH,OAYC9hB,MCPTskB,GAAkB,SAAC,EAAgC9iB,GAAS,IAAvCH,EAAsC,EAAtCA,UAAWwZ,EAA2B,EAA3BA,gBAC5B0J,EAAuE/iB,EAAvE+iB,oCAAqCC,EAAkChjB,EAAlCgjB,8BACvCvjB,EAAUjB,KAEhB,EAGI2gB,KAHJ,oBACEE,EADF,YAEIsD,EAFJ,EAEIA,qCAAsCC,EAF1C,EAE0CA,+BAGlCK,EAAmC5D,EAAnC4D,eAAgBC,EAAmB7D,EAAnB6D,eACxB,OACE,eAACxjB,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAaA,UAAWJ,EAAQ2gB,gBAAiBngB,KAAK,8BACtD,eAAC,GAAD,WACE,cAAC,GAAD,CAAmBJ,UAAWJ,EAAQ6Q,aAAtC,SACE,cAAC,GAAD,CAAuBoS,OAAQQ,MAEjC,eAACvC,GAAD,CAAoB9gB,UAAWJ,EAAQojB,uBAAvC,UACE,cAAC,GAAD,CACEP,WAAW,iCACX/Z,YAAY,gCACZ1I,UAAWJ,EAAQ2gB,gBACnBQ,UAAW,GACXxH,MAAO6J,EAAc,sBACrB1J,cAAeoJ,EACftJ,gBAAiBA,EAAe,gCAChCrZ,IAAK+iB,IAEP,cAAC,GAAD,CACET,WAAW,wBACX/Z,YAAY,uBACZqY,UAAW,GACXxH,MAAO6J,EAAc,gBACrB1J,cAAeqJ,EACfvJ,gBAAiBA,EAAe,0BAChCrZ,IAAKgjB,cAQF3iB,OAAM8Y,KAAK9Y,IAAMC,WAAWwiB,KCrDrCtkB,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCud,UAAWvd,EAAMgC,iBAAiB,CAChCkB,MAAO,MAETuhB,mBAAoBzkB,EAAMgC,iBAAiB,CACzCkB,MAAO,MAETwhB,WAAY,CACVhc,UAAW,cAEbsZ,cAAe,CACbnX,aAAc,OAEhB6W,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD8W,WAAW,2BACN3hB,EAAMgC,iBAAiB,CAAE6I,aAAc,MADlC,IAER+W,UAAW,uCAEbE,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,OAUKpD,MC8IA6kB,GA7JQ,SAAC,GAAoC,IAAlCxjB,EAAiC,EAAjCA,UAAWwZ,EAAsB,EAAtBA,gBACnC,EAA4C+F,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBACdgE,EAAgBjE,EAAhBiE,YAGNzY,EAQEyY,EARFzY,aACAC,EAOEwY,EAPFxY,UACAC,EAMEuY,EANFvY,oBACAC,EAKEsY,EALFtY,oBACAC,EAIEqY,EAJFrY,aACAC,EAGEoY,EAHFpY,MACAC,EAEEmY,EAFFnY,wBACAC,EACEkY,EADFlY,aAGI3L,EAAUjB,KAEV+kB,EAAc,SAACC,GACnBlE,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,IAEhB8D,YAAY,2BACP9D,EAAS,aACTgE,SAKHC,EAA8B9D,cAClC,SAACvG,GACCmK,EAAY,CACVnY,aAAcgO,MAGlB,IACA,CAAEwG,UAAU,IAGRL,EAAoB,SAAC5C,GAAD,OAAU,SAACvD,GAAD,OAAWmK,EAAY,eAAG5G,EAAOvD,MAErE,OACE,eAAC1Z,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAAatB,UAAWA,EAAtE,UACE,cAAC,GAAD,CACEI,KAAK,0BACLJ,UAAWJ,EAAQ2gB,gBACnBhf,QAAQ,UAEV,eAAC,GAAD,CAASvB,UAAWJ,EAAQ2gB,gBAA5B,UACE,cAAC,GAAD,CAAmBnf,GAAI,EAAGpB,UAAWJ,EAAQihB,cAA7C,SACE,cAAC,GAAD,CACErQ,MAAM,kBACNkM,cAAe,CACb,CAAEnD,MAAO,QAAStW,MAAO,SACzB,CAAEsW,MAAO,QAAStW,MAAO,UAE3BsW,MAAOvO,EACP0O,cAAegG,EAAkB,gBACjClG,gBAAiBA,EAAe,2BAGpC,cAACsH,GAAD,CAAoB1f,GAAI,EAAxB,SACE,cAAC,GAAD,CAAYoP,MAAM,aAAaxQ,UAAWJ,EAAQ2jB,WAAlD,SACE,cAAC1jB,EAAA,EAAD,CAAMC,WAAS,EAACqB,KAAK,SAArB,SACE,cAAC,GAAD,CACEub,cAAe,CACb,CAAEnD,MAAO,IAAKtW,MAAO,KACrB,CAAEsW,MAAO,KAAMtW,MAAO,MACtB,CAAEsW,MAAO,MAAOtW,MAAO,OACvB,CAAEsW,MAAO,KAAMtW,MAAO,OAExB4Z,mBAAoBjd,EAAQ0jB,mBAC5B/J,MAAOtO,EACPyO,cAAegG,EAAkB,aACjClG,gBAAiBA,EAAe,+BAM1C,eAAC,GAAD,CAASxZ,UAAWJ,EAAQ2gB,gBAA5B,UACE,cAAC,GAAD,CAAmBnf,GAAI,EAAGpB,UAAWJ,EAAQihB,cAA7C,SACE,cAAC,GAAD,CACErQ,MAAM,4BACNkM,cAAe,CACb,CAAEnD,MAAO,QAAStW,MAAO,SACzB,CAAEsW,MAAO,QAAStW,MAAO,UAE3BsW,MAAOrO,EACPwO,cAAegG,EAAkB,uBACjClG,gBAAiBA,EAAe,kCAGpC,cAACsH,GAAD,CAAoB1f,GAAI,EAAxB,SACE,cAAC,GAAD,CACEoP,MAAM,6BACNkM,cAAe,CACb,CAAEnD,MAAO,QAAStW,MAAO,SACzB,CAAEsW,MAAO,QAAStW,MAAO,UAE3BjD,UAAWJ,EAAQ2jB,WACnBhK,MAAOpO,EACPuO,cAAegG,EAAkB,uBACjClG,gBAAiBA,EAAe,qCAItC,eAAC,GAAD,CAASxZ,UAAWJ,EAAQ2gB,gBAA5B,UACE,cAAC,GAAD,CAAmBnf,GAAI,EAAGpB,UAAWJ,EAAQihB,cAA7C,SACE,cAAC,GAAD,CACErQ,MAAM,wBACNkM,cAAe,CACb,CAAEnD,MAAO,YAAUtW,MAAO,aAC1B,CAAEsW,MAAO,YAAUtW,MAAO,cAE5BsW,MAAOnO,EACPsO,cAAegG,EAAkB,gBACjClG,gBAAiBA,EAAe,2BAGpC,cAACsH,GAAD,CAAoB1f,GAAI,EAAxB,SACE,cAAC,GAAD,CACEoP,MAAM,aACNkM,cAAe,CACb,CAAEnD,MAAO,aAActW,MAAO,cAC9B,CAAEsW,MAAO,WAAYtW,MAAO,aAE9B8a,eAAgBne,EAAQwc,UACxBpc,UAAWJ,EAAQ2jB,WACnBhK,MAAOlO,EACPqO,cAAegG,EAAkB,SACjClG,gBAAiBA,EAAe,uBAItC,cAAC3Z,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAatB,UAAWJ,EAAQ4gB,WAA3D,SACE,cAAC,GAAD,CACEhQ,MAAM,wCACNkM,cAAe,CACb,CAAEnD,MAAO,MAAOtW,MAAO,SACvB,CAAEsW,MAAO,KAAMtW,MAAO,OAExBsW,MAAOjO,EACPoO,cAAegG,EAAkB,2BACjC1f,UAAWJ,EAAQ2gB,gBACnB/G,gBAAiBA,EAAe,sCAGpC,cAAC,GAAD,CACEhJ,MAAM,iBACN9H,YAAY,sBACZ6Q,MAAOhO,EACPmO,cAAekK,EACfvE,kBAAmBzf,EAAQ+gB,eCpK7BhiB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAK,2BACAD,EAAMgC,iBAAiB,CAAEkH,QAAS,MADnC,IAEFmC,OAAQ,YACRxI,YAAa7C,EAAMQ,QAAQsC,UAAUpC,KACrCkC,aAAc,MACdM,MAAO,SAET8hB,gBAAgB,2BAAMhlB,EAAMgC,iBAAiB,CAAE+H,WAAY,MAA5C,IAAmD7G,MAAO,oBAG5DpD,MCMAmlB,GAdO,SAAC,GAA6B,IAA3B1hB,EAA0B,EAA1BA,SAAUpC,EAAgB,EAAhBA,UAC3BJ,EAAUjB,KAChB,OACE,cAACkB,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQd,KAAMkB,GAJhC,SAMGoC,K,UCKQwD,GAjBE,SAAC2T,EAAOG,GACvB,MAAoC5U,mBAASyU,GAAgB,GAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KAMMU,EAAqBJ,uBACzB,SAACK,GAAD,OAAeX,EAAcW,GAAwB,QACrD,IAKF,OAFApC,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IAE5C,CAACX,EAXe,SAACxU,EAAOmD,GAC7BsR,EAActR,GACdoR,EAAcpR,M,6BCGHyb,GANO,SAAC,GAAwC,IAAtCxK,EAAqC,EAArCA,MAAOG,EAA8B,EAA9BA,cAAkBrZ,EAAY,kBAC5D,EAAqCuF,GAAS2T,EAAOG,GAArD,oBAAOC,EAAP,KAAmBsB,EAAnB,KAEA,OAAO,cAAC+I,GAAA,EAAD,aAAQzK,MAAOI,EAAYkC,SAAUZ,GAAoB5a,KC0JnDuF,GA/JE,SAACqe,EAAY1K,EAAOpZ,EAAKqZ,EAAiBC,EAAaC,GACtE,MAAoC5U,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KACA,EAAoClV,qBAApC,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoDhV,oBAAS,GAA7D,oBAAOmc,EAAP,KAA2BC,EAA3B,KACA,EAAoCpc,mBAASyU,GAAgB,IAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KAEMuH,EAAoBjH,uBACxB,SAACgK,EAASC,GAAV,SAA6BD,IAAWA,EAAQC,MAChD,IAEIC,EAAuBjD,EAAkB8C,EAAY,iBAErDxC,EAAsBvH,uBAAY,SAACG,EAAYgK,GACnD,IAAM1C,EAAc,SAACjH,EAAKkH,GAAN,OAAwBlH,EAAImH,MAAMD,IAUtD,OATqB,SAACE,GAAD,QAAcA,EAS5BC,CAJKJ,EAAYtH,EADpBgK,EAHuB,2BACA,eAQ1B,IAEGC,EAA6BpK,uBACjC,SAACG,EAAYkK,GACX,IAAgC7J,EAAKhY,EAErC,QADwBye,EAAkBoD,EAAc,SADxB7J,EAEgBL,EAFX3X,EAEuB6hB,EAAa7hB,IAF5B8hB,WAAW9J,GAAOhY,KAIjE,CAACye,IAGGG,EAAgBpH,uBAAY,SAACqH,EAAMC,GAAP,OAAmBA,IAAYA,EAAQlJ,QAAUiJ,KAAO,IAEpFtH,EAAmBC,uBACvB,SAACsH,GACCxH,EAAc,MACdF,GAAc,GACdwH,GAAc,EAAOE,GACrBN,GAAsB,KAExB,CAACI,IAGGU,EAAwB9H,uBAC5B,SAACsH,GACC1H,GAAc,GACdE,EAAc,oBACdsH,GAAc,EAAME,GACpBN,GAAsB,KAExB,CAACI,IAGGmD,EAAyBvK,uBAC7B,SAACwK,EAAUlD,GACT1H,GAAc,GACdE,EAAc,mBAAD,OAAiB0K,IAC9BpD,GAAc,EAAME,GACpBN,GAAsB,KAExB,CAACI,IAwCGrG,EArCmB,SAAC,GAAD,IAAGoJ,EAAH,EAAGA,8BAA+BH,EAAlC,EAAkCA,QAAS1C,EAA3C,EAA2CA,QAA3C,OAAyD,SAACrc,GACjF,IAEIwf,EAFEC,EAAenD,EAAoBtc,EAAM+W,OAAO3C,MAAO8K,GACvDQ,EAAiBP,EAA2Bnf,EAAM+W,OAAO3C,MAAO2K,GAEtE,GAAKU,EAGE,GAAIC,EACTJ,EAAuBP,EAAQxhB,IAAK8e,GACpCmD,EAAgBxf,EAAM+W,OAAO3C,WACxB,GAAI8K,EAA+B,CACxC,IAAMS,EAAgB3f,EAAM+W,OAAO3C,MAAMwL,MAAM,KACzCC,EAA0BF,EAAchU,OAAS,EACjDmU,EAA0C,IAAzBH,EAAchU,OACrC,GAAIkU,EAAyB,CAC3B,IAAME,EAAuBJ,EAAc,GAAGK,MAAM,EAAGjB,EAAQkB,eACzDC,EAAcP,EAAc,GAC5BQ,EAA8C,KAAzBJ,EAC3BP,EAAa,UAAMU,EAAN,YAAqBH,GAC9BI,IACFX,EAAgBxf,EAAM+W,OAAO3C,YAEtB0L,IACTN,EAAgBxf,EAAM+W,OAAO3C,OAEyB,IAA/BgM,SAAST,EAAc,KAA4C,IAA/BS,SAAST,EAAc,KAElF7K,EAAiBuH,QAGnBmD,EAAgBxf,EAAM+W,OAAO3C,MAC7BU,EAAiBuH,QA1BjBQ,EAAsBR,GACtBmD,EAAgBxf,EAAM+W,OAAO3C,MA2B/BK,EAAc+K,GACdjL,EAAciL,IAGOtC,CAAiB,CACtCgC,8BAA+BD,EAC/BF,QAASD,EACTzC,QAASrhB,IAGLga,EAAqBD,uBACzB,YAAmE,IAAhEE,EAA+D,EAA/DA,oBAAqBkI,EAA0C,EAA1CA,wBAAyBjI,EAAiB,EAAjBA,WACzCmL,EAA8B,KAAfnL,EACfoL,EAAgD,IAA3BjB,WAAWnK,IAKjCmL,GAAgBC,IAAuBrL,GAH1CN,GAAc,GACdE,EAAc,oBAIJsI,GACVrI,MAGJ,CAACA,IAGGK,EAAqBJ,uBAAY,SAACK,GAAD,OAAeX,EAAcW,KAAY,IAE1EC,EAAoBN,uBAAY,SAACO,GACjCA,GACFb,EAAc,MAEf,IAeH,OAbAzB,qBACE,kBACEgC,EAAmB,CACjBC,oBAAqBZ,EACrB8I,wBAAyBrB,EACzB5G,WAAYV,MAEhB,CAACH,EAAiByH,EAAoBtH,EAAYQ,IAGpDhC,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IACnDnC,qBAAU,kBAAMqC,EAAkBf,KAAc,CAACA,EAAae,IAEvD,CACL,CACET,aACAF,aACAF,cAEFsB,EACArB,I,0ECxJE8L,GAAc,SAAC,EAEnBvlB,GACI,IAFF8jB,EAEC,EAFDA,WAAYzK,EAEX,EAFWA,gBAAiBD,EAE5B,EAF4BA,MAAOG,EAEnC,EAFmCA,cAAeD,EAElD,EAFkDA,YAAgBpZ,EAElE,kBACH,EAAqCuF,GACnCqe,EACA1K,EACApZ,EACAqZ,EACAC,EACAC,GANF,oBAAOsB,EAAP,KAAmBC,EAAnB,KAQQlB,EAAuCiB,EAAvCjB,WAAYF,EAA2BmB,EAA3BnB,WAAYF,EAAeqB,EAAfrB,WAEhC,OACE,cAAC,GAAD,aACEsK,WAAYA,EACZtJ,MAAOd,EACPE,WAAYA,EACZR,MAAOI,EACPkC,SAAUZ,GACN5a,KAKKG,OAAMC,WAAWilB,IClBjB/mB,GAXGC,YAAW,CAC3B2kB,WAAY,CACVhc,UAAW,cAEboe,gBAAiB,CACfjf,aAAc,OAEhBkf,eAAgB,CAAE7jB,MAAO,cAAe6G,WAAY,OACpDid,SAAU,CAAEjd,WAAY,S,sDCDpBkd,GAAsB,SAAC,EAA2D3lB,GAAS,IAAlEqQ,EAAiE,EAAjEA,MAAO8F,EAA0D,EAA1DA,KAAMyP,EAAoD,EAApDA,oBAAqB/lB,EAA+B,EAA/BA,UAAcK,EAAiB,kBACxFT,EAAUjB,KAEhB,OACE,cAAC,GAAD,CAAY6R,MAAOA,EAAOxQ,UAAWkC,YAAKtC,EAAQ2jB,WAAYvjB,GAA9D,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACqB,KAAK,SAASnB,UAAWJ,EAAQgmB,eAAgBtkB,WAAW,aAA5E,UACE,cAAC,GAAD,aACEtB,UAAWkC,YAAK6jB,EAAqBnmB,EAAQ+lB,iBAC7Cjd,YAAa4N,EACbnW,IAAKA,GACDE,IAEN,cAACJ,EAAA,EAAD,CAAYsB,QAAQ,QAAQvB,UAAWJ,EAAQimB,SAA/C,SACGvP,UAMI9V,OAAMC,WAAWqlB,IClBjBnnB,GARGC,YAAW,CAC3BE,KAAM,CACJmI,SAAU,IACViB,WAAY,MACZpH,YAAa,SCGFklB,GALS,SAAC,GAA6B,IAA3B5jB,EAA0B,EAA1BA,SAAUpC,EAAgB,EAAhBA,UAC7BJ,EAAUjB,KAChB,OAAO,qBAAKqB,UAAWkC,YAAKtC,EAAQd,KAAMkB,GAAnC,SAAgDoC,K,UCgC1CwD,GAnCE,SAAC4Z,EAAcyG,EAAYvM,EAAeF,GACzD,MAA0B1U,oBAAS,GAAnC,oBAAO6V,EAAP,KAAcuL,EAAd,KACA,eAAyB1G,EAAzB,GAAO2G,EAAP,KAAeC,EAAf,KAEMC,EAAoBvG,gCAAqBpG,EAAcuM,EAAW,IAAK,IAAK,CAChFlG,UAAU,IAENuG,EAAoBxG,gCAAqBpG,EAAcuM,EAAW,IAAK,IAAK,CAChFlG,UAAU,IAGPwG,EAAcrM,uBAAY,SAACE,GAE5B8L,IADE9L,KAKH,IAIH,OAFAjC,qBAAU,kBAAMoO,EAAY/M,KAAkB,CAACA,EAAiB+M,IAEzD,CACL,CACEJ,SACAC,SACAzL,SAGF,CACE0L,oBACAC,uBCCS3nB,GAhCGC,aAAW,SAACC,GAAD,MAAY,CACvC2nB,WAAY,CAAE5d,WAAY,OAC1B6d,eAAgB5nB,EAAMgC,iBAAiB,CAAEkB,MAAO,MAChD6Y,UAAW,CACTja,MAAO9B,EAAMQ,QAAQuB,MAAMrB,KAC3B8c,UAAW,OACXnU,WAAY,OACZpH,YAAa,OACb+Z,UAAW,OAEbgE,YAAa,CACX9c,MAAO,QAET2kB,eAAgB,CACd3kB,MAAO,cACP2E,aAAc,MACdwD,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAEnCO,UAAW,CACT6mB,OAAQ,OAEVC,oBAAqB,CACnB1e,WAAY,OAEd2e,gBAAiB,CACf/lB,YAAa,MACboH,WAAY,WCnBV4e,GAAmB,SAAC,EAaxB3mB,GACI,IAZFqQ,EAYC,EAZDA,MACAyT,EAWC,EAXDA,WACAgC,EAUC,EAVDA,WACAc,EASC,EATDA,aACAC,EAQC,EARDA,mBACAC,EAOC,EAPDA,SACAvN,EAMC,EANDA,cACAF,EAKC,EALDA,gBACAsE,EAIC,EAJDA,gBACA9d,EAGC,EAHDA,UAIIJ,EAAUjB,KAChB,EAA8EiH,GAC5EqhB,EACAhB,EACAvM,EACAF,GAJF,2BAAS2M,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,OAAQzL,EAAzB,EAAyBA,MAAzB,OAAoC0L,EAApC,EAAoCA,kBAAmBC,EAAvD,EAAuDA,kBAOvD,eAAqBnmB,EAArB,GAAO+mB,EAAP,KAAaC,EAAb,KAEA,OACE,cAAC,GAAD,CAAY3W,MAAOA,EAAOxQ,UAAWA,EAArC,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,eAACzB,EAAA,EAAD,CACEC,WAAS,EACTqB,KAAK,SACLG,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQE,UAAW6a,EAAQ/a,EAAQ8mB,eAAiB,MAJtE,UAME,cAAC7mB,EAAA,EAAD,CAAMqB,MAAI,EAAClB,UAAWJ,EAAQ6mB,eAA9B,SACE,cAAC,GAAD,CACE/d,YAAaqe,EAAa,GAC1B9C,WAAYA,EACZ1K,MAAO4M,EACPzM,cAAe2M,EACflmB,IAAK+mB,MAGT,cAAC,GAAD,CAAiBlnB,UAAWkC,YAAKtC,EAAQ4mB,WAAY5mB,EAAQinB,iBAA7D,SACGG,IAEH,cAACnnB,EAAA,EAAD,CAAMqB,MAAI,EAAClB,UAAWJ,EAAQ6mB,eAA9B,SACE,cAAC,GAAD,CACE/d,YAAaqe,EAAa,GAC1B9C,WAAYA,EACZ1K,MAAO6M,EACP1M,cAAe4M,EACfnmB,IAAKgnB,MAGRrJ,GACC,cAAC7d,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ4mB,WAAY5mB,EAAQgnB,qBAF9C,SAIG9I,OAINnD,GACC,cAAC1a,EAAA,EAAD,CAAYsB,QAAQ,UAAUvB,UAAWJ,EAAQgb,UAAjD,+CASKpa,OAAMC,WAAWqmB,I,oBCpEjBlhB,GAfE,SAAC2T,EAAOG,GACvB,MAAoC5U,mBAASyU,GAAgB,IAA7D,oBAAOI,EAAP,KAAmBC,EAAnB,KAOMU,EAAqBJ,uBAAY,SAACK,GAAD,OAAeX,EAAcW,KAAY,IAIhF,OAFApC,qBAAU,kBAAMmC,EAAmBf,KAAQ,CAACA,EAAOe,IAE5C,CAACX,EATe,SAACxU,GACtByU,EAAczU,EAAM+W,OAAO3C,OAC3BG,EAAcvU,EAAM+W,OAAO3C,UCgBhB5a,GArBGC,aAAW,SAACC,GAAD,MAAY,CACvCggB,YAAa,CACX7W,SAAU,IACV,UAAW,CACT,mBAAoB,CAClBa,cAAe,QACfD,WAAY,QACZ7F,YAAa,SAEf,8BAA+B,CAC7B9D,KAAM,UAIZ0b,MAAO,CACLzQ,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,U,wFCuBtB6nB,GAjCO,SAAC,GAQhB,IAPL5hB,EAOI,EAPJA,aACAkD,EAMI,EANJA,YACA1I,EAKI,EALJA,UACAwZ,EAII,EAJJA,gBACAD,EAGI,EAHJA,MACAG,EAEI,EAFJA,cACGrZ,EACC,kBACET,EAAUjB,KAChB,EAAqCiH,GAAS2T,EAAOG,GAArD,oBAAOC,EAAP,KAAmBsB,EAAnB,KAEA,OACE,eAACW,GAAA,EAAD,CAAa5b,UAAWkC,YAAKtC,EAAQif,YAAa7e,GAAY2a,MAAOnB,EAArE,UACE,cAAC6N,GAAA,EAAD,CAAYrjB,GAAG,cAAf,SAA8B0E,IAC9B,cAAC4e,GAAA,EAAD,yBACEC,QAAQ,cACRC,UAAW,CAAEjjB,mBAAmB,GAChCvE,UAAWwZ,GAAmB5Z,EAAQ+a,MACtCpB,MAAOI,EACPkC,SAAUZ,GACN5a,GANN,aAQGmF,EAAa3B,KAAI,SAAC3C,GAAD,OAChB,cAACkC,EAAA,EAAD,CAAUmW,MAAOrY,EAAKqY,MAAtB,SACGrY,EAAK+B,OAD0B/B,EAAKqY,iBCdlC3T,GAjBE,SAAC4Z,EAAchG,GAC9B,MAA0B1U,oBAAS,GAAnC,oBAAO6V,EAAP,KAAcuL,EAAd,KACA,eAAyB1G,EAAzB,GAAO2G,EAAP,KAAeC,EAAf,KAEKG,EAAcrM,uBAAY,SAACE,GAE5B8L,IADE9L,KAKH,IAIH,OAFAjC,qBAAU,kBAAMoO,EAAY/M,KAAkB,CAACA,EAAiB+M,IAEzD,CAACJ,EAAQC,EAAQzL,ICUXhc,GAxBGC,aAAW,SAACC,GAAD,MAAY,CACvC4oB,gBAAiB,CACf3mB,YAAa,QAEf8Z,UAAW,CACTja,MAAO9B,EAAMQ,QAAQuB,MAAMrB,KAC3B8c,UAAW,OACXnU,WAAY,OACZpH,YAAa,OACb+Z,UAAW,OAEb6L,eAAgB,CACd3kB,MAAO,cACPgG,QAAS,MACT4e,OAAQ,MACRzc,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAEnCO,UAAW,CACT6mB,OAAQ,WCmCGe,GAhDW,SAAC,GAQpB,IAPLlX,EAOI,EAPJA,MACAyV,EAMI,EANJA,WACAc,EAKI,EALJA,aACAE,EAII,EAJJA,SACAzhB,EAGI,EAHJA,aACAkU,EAEI,EAFJA,cACAF,EACI,EADJA,gBAEM5Z,EAAUjB,KAChB,EAAgCiH,GAASqhB,EAAUzN,GAAnD,oBAAO2M,EAAP,KAAeC,EAAf,KAAuBzL,EAAvB,KAEA,OACE,eAAC,GAAD,CAAYnK,MAAOA,EAAnB,UACE,cAAC3Q,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAA7C,SACE,eAACtB,EAAA,EAAD,CACEC,WAAS,EACTqB,KAAK,SACLG,WAAW,aACXqmB,QAAS,EACT3nB,UAAWkC,YAAKtC,EAAQE,UAAW6a,EAAQ/a,EAAQ8mB,eAAiB,MALtE,UAOE,cAAC,GAAD,CACE5J,KAAMmJ,EAAW,GACjBvd,YAAaqe,EAAa,GAC1BvhB,aAAcA,EAAa,GAC3BxF,UAAWJ,EAAQ6nB,gBACnBlO,MAAO4M,EACPzM,cAAeA,EAAcuM,EAAW,MAE1C,cAAC,GAAD,CACEnJ,KAAMmJ,EAAW,GACjBvd,YAAaqe,EAAa,GAC1BvhB,aAAcA,EAAa,GAC3B+T,MAAO6M,EACP1M,cAAeA,EAAcuM,EAAW,WAI7CtL,GACC,cAAC1a,EAAA,EAAD,CAAYsB,QAAQ,UAAUvB,UAAWJ,EAAQgb,UAAjD,6CCoOO0E,GAhRC,SAACnf,EAAKynB,GACpB,IA0E+BC,EAAWC,EAAWC,EAAaC,EA1ElE,EAA4CzI,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBAElBwI,EAA4BC,mBAC5BC,EAA4BD,mBAExBE,EAAkC5I,EAAlC4I,cAEAlZ,EAFkCsQ,EAAnB6D,eAEfnU,OAEAW,EAAqDuY,EAArDvY,OAAQnQ,EAA6C0oB,EAA7C1oB,OAAQoQ,EAAqCsY,EAArCtY,SAAUC,EAA2BqY,EAA3BrY,QAASC,EAAkBoY,EAAlBpY,IAAKC,EAAamY,EAAbnY,KAAMC,EAAOkY,EAAPlY,GAE9CmY,EAAoEloB,EAApEkoB,qBAAsBC,EAA8CnoB,EAA9CmoB,qBAAsBC,EAAwBpoB,EAAxBooB,oBAE9CC,EAAoBC,mBACxB,iBAAO,CACLC,kBAAkB,EAClBC,kBAAkB,KAEpB,IAGF,EAAsC7jB,mBAAS+K,GAA/C,oBAAO+Y,EAAP,KAAoBC,EAApB,KACA,EAAsC/jB,mBAASpF,GAA/C,oBAAOopB,EAAP,KAAoBC,EAApB,KACA,EAA0CjkB,mBAASgL,GAAnD,oBAAOkZ,EAAP,KAAsBC,EAAtB,KACA,EAAoCnkB,mBAAS0jB,GAA7C,oBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAAwCrkB,mBAASiL,GAAjD,oBAAOqZ,EAAP,KAAqBC,EAArB,KACA,EAAgCvkB,mBAASkL,GAAzC,oBAAOsZ,EAAP,KAAiBC,EAAjB,KACA,EAAkCzkB,mBAASmL,GAA3C,oBAAOuZ,EAAP,KAAkBC,GAAlB,KACA,GAA8B3kB,mBAASoL,GAAvC,sBAAOwZ,GAAP,MAAgBC,GAAhB,MACA,GAAwC7kB,oBAAS,GAAjD,sBAAO8kB,GAAP,MAAqBC,GAArB,MAEMC,GAAmB5P,uBAAY,WACf,KAAhB0O,GAAqC,GAAfA,GACxBO,GAAc,SAACxJ,GAAD,mBAAC,eACVA,GADS,IAEZ+I,kBAAkB,OAGF,KAAhBI,GAAqC,GAAfA,GACxBK,GAAc,SAACxJ,GAAD,mBAAC,eACVA,GADS,IAEZgJ,kBAAkB,SAGrB,CAACC,EAAaE,IAEXiB,GAAsB,SAACjN,GAAD,OAC1BqM,GAAc,SAACxJ,GAAD,mBAAC,eACVA,GADS,kBAEX7C,GAAO,QAGNkN,GAAmB9P,uBAAY,SAAC+P,GACpC,IAAMC,EAAeD,EAAOE,WAEtBC,EAAUF,EAAaG,QAAQ,KADX,EAE1B,OAAOC,OAAOJ,EAAa/E,MAAM,EAAGiF,MACnC,IAEG1G,GAAc,SAAC6G,GAAD,OAClB9K,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,IAEhByI,cAAc,2BACTzI,EAAS,eACT4K,SAqCHC,IA3ByB3C,EA2BgBe,EA3BLd,EA2BkBgB,EA3BPf,EA2BoBiB,EA3BPhB,EA2BsB9Y,EA3BR,WAC9E,GACgB,KAAd2Y,GACa,GAAbA,GACCI,EAA0B3P,SACb,KAAdwP,GACa,GAAbA,GACCK,EAA0B7P,QAiBtBwR,SAhBL,CAAC,IAAD,EACMW,EAAUT,GAZK,SAAChC,EAAWF,GAAZ,OACR,SAAdE,EAAuB,GAAK,MAAQ,KAAQF,EAAY,OAWtB4C,CAAiB1C,EAAWF,IACvD6C,EAAaX,GAhBE,SAACnC,EAAWC,GAAZ,OAA0BD,EAAY+C,KAAKC,IAAI/C,EAAY,IAAK,GAgBjDgD,CAAiBjD,EAAWC,IAC1DiD,EAAUf,GAhBE,SAACgB,EAAQnD,GAAT,OAAuBmD,EAAS,KAAQnD,EAAYmD,GAgBrCC,CAAcR,EAAS5C,IAClDqD,EAAQlB,GAhBE,SAACgB,EAAQjD,GAAT,OAAyBiD,EAASjD,EAgBnBoD,CAAYV,EAAS1C,IACpDrE,IAAW,mBACR,UAAYiH,GADJ,cAER,MAAQF,GAFA,cAGR,OAASM,GAHD,cAIR,KAAOG,GAJC,IAMX3B,EAAYkB,GACZpB,EAAgBsB,GAChBlB,GAAasB,GACbpB,GAAWuB,GACX/B,EAAcX,MAMZ9I,GAAoB,SAAC5C,EAAM7E,GAAP,OAAoB,SAACsB,GAC7CtB,GAAWA,EAASsB,GACpBmK,GAAY,eACT5G,EAAOvD,MAoBN6R,GAAwBtL,cAhBD,SAACvG,GAC5BsP,EAAetP,GACfmK,GAAY,CACV7T,OAAQ0J,IAEVwQ,GAAoB,YAWmD,IAAK,CAAEhK,UAAU,IAEpFsL,GAA0BvL,aAC9BJ,GAAkB,WAAYuJ,GAC9B,IACA,CACElJ,UAAU,IAIRuL,GAAwBxL,cAlBD,SAACvG,GAC5BwP,EAAexP,GACfmK,GAAY,CACVhkB,OAAQ6Z,IAEVwQ,GAAoB,YAamD,IAAK,CAAEhK,UAAU,IAEpFwL,GAAuBzL,aAC3BJ,GAAkB,QAASuJ,GAC3B,IACA,CACElJ,UAAU,IAIRyL,GAAqC1L,aACzCJ,GAAkB,sBAAuBuJ,GACzC,IACA,CACElJ,UAAU,IAIR0L,GAAuC3L,aAC3CJ,GAAkB,wBAAyBuJ,GAC3C,IACA,CACElJ,UAAU,IAIR2L,GAAuB5L,aAC3BJ,GAAkB,QAASuJ,GAC3B,IACA,CACElJ,UAAU,IAIR4L,GAA2B7L,aAC/BJ,GAAkB,YAAauJ,GAC/B,IACA,CACElJ,UAAU,IAIR6L,GAA0B9L,aAC9BJ,GAAkB,WAAYuJ,GAC9B,IACA,CACElJ,UAAU,IAIR6D,GAA8B9D,aAClCJ,GAAkB,eAAgBuJ,GAClC,IACA,CACElJ,UAAU,IAIR8L,GAA2B3R,uBAAY,SAACkH,GAE1CyI,KADEzI,KAKH,IAEG0K,GAAY5R,uBAAY,SAAC6R,EAAYC,GACzCD,EAAWzT,QAAU0T,EAAS1T,UAC7B,IAEG2T,GAAyB/R,uBAC7B,SAAC2N,EAAWC,EAAWkD,EAAQkB,EAAaC,GAC1C,IAAMC,EAAiBpC,GAAiBnC,EAAY+C,KAAKC,IAAI/C,EAAY,IAAK,IACxEuE,EAAYrC,GAAiBgB,EAASkB,GAC5CC,EAAY7T,QAAU8T,EAAiBC,IAEzC,CAACrC,KA4BH,OAzBA7R,qBAAU,kBAAM0T,GAAyBjE,KAAoB,CAC3DA,EACAiE,KAEF1T,qBAAU,WACR2T,GAAUzD,EAAsBJ,GAChC6D,GAAUxD,EAAsBH,MAElChQ,qBAAU,WACR8T,GAAuBrD,EAAaE,EAAaQ,EAAUN,EAAeT,KACzE,CACDK,EACAE,EACAQ,EACAN,EACAT,EACA0D,KAGF9T,qBAAU,WACR0Q,EAAehZ,GACfkZ,EAAerpB,GACfupB,EAAiBnZ,KAChB,CAACD,EAAQnQ,EAAQoQ,IAEb,CACL,CACE8Y,cACAE,cACAE,gBACAE,aACAE,eACAE,WACAE,YACAE,WACAE,gBACAxB,iBAEF,CAAEH,4BAA2BE,6BAC7B,CACEzI,qBACA8K,oBACAY,yBACAC,2BACAC,yBACAC,wBACAC,sCACAC,wCACAC,wBACAC,4BACAC,2BACAhI,kCCjMSjlB,GA7EGC,aAAW,SAACC,GAAD,cAAY,CACvCytB,WAAYztB,EAAMgC,iBAAiB,CAAEmH,SAAU,MAC/Cub,WAAY,CACVhc,UAAW,cAEboe,gBAAiB,CACfjf,aAAc,OAEhBma,cAAe,CACbnX,aAAc,OAEhB0S,UAAWvd,EAAMgC,iBAAiB,CAChCkB,MAAO,MAETwe,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD8W,WAAW,2BACN3hB,EAAMgC,iBAAiB,CAAE6I,aAAc,MADlC,IAER+W,UAAW,uCAEb8L,uBAAuB,2BAClB1tB,EAAMgC,iBAAiB,CACxB6I,aAAc,GACdmR,UAAW,MAHO,IAKpB4F,UAAW,qCACX1e,MAAO,OACPrC,OAAQ,QAEV8sB,WAAY,CAAEzqB,MAAO,eACrB0qB,SAAO,mBACJ5tB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACPmG,WAAY,SAHT,cAKJrJ,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QANJ,GASP2qB,wBAAyB7tB,EAAMgC,iBAAiB,CAAE6I,aAAc,GAAId,WAAY,IAChF+jB,yBAA0B9tB,EAAMgC,iBAAiB,CAAE+H,WAAY,IAC/DgkB,aAAc,CAAEvQ,UAAW,QAC3BwQ,SAAU,CACR9qB,MAAO,cACP2E,aAAc,MACd3D,YAAa,OAEf+pB,kBAAmB,CACjBhsB,YAAa,OACbgB,WAAY,KAEdirB,sBAAuBluB,EAAMgC,iBAAiB,CAAEkB,MAAO,KACvDirB,uBAAwBnuB,EAAMgC,iBAAiB,CAAEkB,MAAO,KACxDkrB,YAAapuB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACpDiX,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,GAQR6lB,kBAAkB,aAChB7lB,MAAO,OACPmI,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAC9BV,EAAMgC,iBAAiB,CAAEkH,QAAS,MAEvC6S,UAAW,CACTja,MAAO9B,EAAMQ,QAAQuB,MAAMrB,KAC3B8c,UAAW,OACXvb,YAAa,OACboH,WAAY,OACZ2S,UAAW,WCvDTqS,GAA2B,SAAC,EAAmD/sB,GAAS,IAA1DH,EAAyD,EAAzDA,UAAWwZ,EAA8C,EAA9CA,gBAAiBoO,EAA6B,EAA7BA,kBACxDhoB,EAAUjB,KAChB,EA4BI2gB,GAAQnf,EAAKynB,GA5BjB,2BAEIgB,EAFJ,EAEIA,YACAE,EAHJ,EAGIA,YACAE,EAJJ,EAIIA,cACAE,EALJ,EAKIA,WACAE,EANJ,EAMIA,aACAE,EAPJ,EAOIA,SACAE,EARJ,EAQIA,UACAE,EATJ,EASIA,QACAE,EAVJ,EAUIA,aACAxB,EAXJ,EAWIA,cAXJ,OAaIH,EAbJ,EAaIA,0BAA2BE,EAb/B,EAa+BA,0BAb/B,OAeIzI,EAfJ,EAeIA,kBACA8K,EAhBJ,EAgBIA,iBACAY,EAjBJ,EAiBIA,sBACAC,EAlBJ,EAkBIA,wBACAC,EAnBJ,EAmBIA,sBACAC,EApBJ,EAoBIA,qBACAC,EArBJ,EAqBIA,mCACAC,EAtBJ,EAsBIA,qCACAC,EAvBJ,EAuBIA,qBACAC,EAxBJ,EAwBIA,yBACAC,EAzBJ,EAyBIA,wBACAhI,EA1BJ,EA0BIA,4BAKFuJ,EAGE3T,EAHF2T,iCACAC,EAEE5T,EAFF4T,uBACAC,EACE7T,EADF6T,oBAGM3E,EAAuCQ,EAAvCR,iBAAkBC,EAAqBO,EAArBP,iBAExBtZ,EAWE+Y,EAXF/Y,oBACAC,EAUE8Y,EAVF9Y,sBACAC,EASE6Y,EATF7Y,MACAC,EAQE4Y,EARF5Y,kBACAC,EAOE2Y,EAPF3Y,iBACAC,EAME0Y,EANF1Y,MACAC,EAKEyY,EALFzY,SACAC,EAIEwY,EAJFxY,UACArE,EAGE6c,EAHF7c,aACA4E,GAEEiY,EAFFjY,UACAC,GACEgY,EADFhY,SAGMkd,GAA0CntB,EAA1CmtB,iBAAkBC,GAAwBptB,EAAxBotB,oBAE1B,OACE,eAAC1tB,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAaA,UAAWJ,EAAQ2gB,gBAAiBngB,KAAK,uBAAiBmB,QAAQ,UAC/E,eAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAW4pB,EAAehqB,EAAQgoB,kBAAoB,KAAtE,UACE,eAAC,GAAD,CAAS5nB,UAAWJ,EAAQ2gB,gBAA5B,UACE,cAAC,GAAD,CAAmBnf,GAAI,EAAGpB,UAAWJ,EAAQihB,cAA7C,SACE,cAAC,GAAD,CACErQ,MAAM,QACNyT,WAAY,CACVmB,cAAe,EACf1iB,IAAK,KAEP6W,MAAOqP,EACPlP,cAAe0R,EACf9U,KAAK,KACLyP,oBAAqBnmB,EAAQ0sB,WAC7B9S,gBACEkP,GAAoByE,EAAgC,iBAEtDhtB,IAAK8nB,MAGT,cAACnH,GAAD,CAAoB1f,GAAI,EAAxB,SACE,cAAC,GAAD,CACEoP,MAAM,UACNyT,WAAY,CACVvhB,IAAK,KAEP6W,MAAOuP,EACPpP,cAAe4R,EACfhV,KAAK,KACLyP,oBAAqBnmB,EAAQ0sB,WAC7B9S,gBACEmP,GAAoBwE,EAAgC,iBAEtDhtB,IAAKgoB,SAIX,cAAC,GAAD,CAAmB7J,GAAI,GAAIte,UAAWkC,YAAKtC,EAAQihB,cAAejhB,EAAQ2gB,iBAA1E,SACE,cAAC,GAAD,CAAY/P,MAAM,aAAlB,SACE,cAAC,GAAD,CACEgd,MAAO,CACL,CAAEjU,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,WACnB,CAAEsW,MAAO,EAAGtW,MAAO,YAErBwqB,KAAM,EACNC,kBAAkB,MAClBnU,MAAOyP,EACPtP,cAAe2R,EACfsC,IAAK,EACLjrB,IAAK,EACL1C,UAAWJ,EAAQ6sB,cAIzB,cAAC5sB,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAY4pB,EAAoC,KAArBhqB,EAAQ4gB,WAAnD,SACE,eAAC,GAAD,CAAexgB,UAAY4pB,EAAyC,KAA1BhqB,EAAQ2gB,gBAAlD,UACE,eAAC1gB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAA3B,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACE,GAAI,EAAGC,UAAU,SAASC,WAAW,aAA1D,UACE,eAACzB,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXH,KAAK,SACLnB,UAAWJ,EAAQ6Q,aAJrB,UAME,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBltB,EAAQmtB,uBAFrD,SAIE,cAAC,GAAD,CACExrB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,WAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAF5D,mBAIMxD,GAA8B,KAJpC,eAOF,eAACvpB,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXH,KAAK,SACLnB,UAAWJ,EAAQ6Q,aAJrB,UAME,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBltB,EAAQmtB,uBAFrD,SAIE,cAAC,GAAD,CACExrB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,WAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAF5D,mBAIMpD,GAAwB,KAJ9B,eAQJ,eAAC3pB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACE,GAAI,EAAGE,WAAW,aAAvC,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAA7C,UACE,cAACtB,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBltB,EAAQotB,wBAFrD,SAIE,cAAC,GAAD,CACEzrB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,UAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAF5D,mBAIMtD,GAAsB,KAJ5B,YAOF,eAACzpB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAA7C,UACE,cAACtB,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBltB,EAAQotB,wBAFrD,SAIE,cAAC,GAAD,CACEzrB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,UAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAF5D,mBAIMlD,GAAoB,KAJ1B,kBASN,cAAC7pB,EAAA,EAAD,CAAMG,UAAWJ,EAAQ2sB,yBACzB,eAAC1sB,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,cAAC,GAAD,CACEC,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,4BAEP,cAACH,EAAA,EAAD,CAAYsB,QAAQ,UAAUvB,UAAWJ,EAAQqtB,YAAatsB,MAAM,gBAApE,iCAGA,eAACV,EAAA,EAAD,CACEsB,QAAQ,UACRqsB,MAAM,OACN5tB,UAAWJ,EAAQqtB,YACnBtsB,MAAM,gBAJR,yBAMc,uBANd,qCAOE,uBAPF,0CAUA,cAACV,EAAA,EAAD,CAAYsB,QAAQ,UAAUvB,UAAWJ,EAAQqtB,YAAatsB,MAAM,gBAApE,6DAGA,cAACV,EAAA,EAAD,CAAYsB,QAAQ,UAAUZ,MAAM,gBAApC,oCAIF,cAACd,EAAA,EAAD,CAAMG,UAAWJ,EAAQ2sB,yBACzB,cAAC1sB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACE,cAAC,EAAD,CAAeK,KAAK,WAAW8C,QAASsnB,cAK/CZ,GACC,cAAC3pB,EAAA,EAAD,CACEsB,QAAQ,UACRvB,UAAWkC,YAAKtC,EAAQgb,UAAWgP,GAAgBhqB,EAAQ2gB,iBAF7D,wTAUF,eAAC,GAAD,CAASvgB,UAAWJ,EAAQ2gB,gBAAiBjf,WAAW,aAAxD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CACE2kB,WAAY,CAAC,mBAAoB,qBACjCxW,kBAAgB,EAChBe,MAAM,uBACNuW,aAAc,CAAC,QAAS,UACxB8G,OAAK,EACL5J,WAAY,CACVvhB,IAAK,KAEPskB,mBAAmB,IACnBlJ,gBAAgB,OAChBpE,cAAegG,EACfuH,SAAU,CAACxX,EAAkBD,GAC7BgK,gBAAiB4T,EACjBjtB,IAAKmtB,OAGT,cAACxM,GAAD,UACE,cAAC,GAAD,CACEtQ,MAAM,SACNyT,WAAY,CACVvhB,IAAK,KAEP6W,MAAO7J,EACPgK,cAAe6R,EACfjV,KAAK,MACLyP,oBAAqBnmB,EAAQ0sB,WAC7B9S,gBAAiB2T,EAAgC,gBACjDhtB,IAAKotB,UAIX,eAAC,GAAD,CAASvtB,UAAWJ,EAAQ2gB,gBAAiBjf,WAAW,aAAxD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CACEkP,MAAM,kBACNyV,WAAY,CAAC,YAAa,YAC1Bc,aAAc,CAAC,QAAS,UACxBE,SAAU,CAAC9W,GAAWC,IACtB5K,aAAc,CACZ,CACE,CAAE+T,MAAO,IAAKtW,MAAO,KACrB,CAAEsW,MAAO,IAAKtW,MAAO,KACrB,CAAEsW,MAAO,IAAKtW,MAAO,KACrB,CAAEsW,MAAO,KAAMtW,MAAO,OAExB,CACE,CAAEsW,MAAO,SAAUtW,MAAO,UAC1B,CAAEsW,MAAO,SAAUtW,MAAO,YAG9ByW,cAAegG,EACflG,gBAAiB6T,MAGrB,cAACvM,GAAD,UACE,cAAC,GAAD,CACEtQ,MAAM,4BACN9H,YAAY,kBACZgR,cAAe8R,EACfjS,MAAOlK,EACPmK,gBAAiB2T,EAAgC,qCAIvD,eAAC,GAAD,CACE7rB,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ4gB,YAFnD,UAIE,cAAC,GAAD,UACE,cAAC,GAAD,CACEhQ,MAAM,4BACN9H,YAAY,kBACZgR,cAAe+R,EACflS,MAAOjK,EACPkK,gBAAiB2T,EAAgC,oCAGrD,cAACrM,GAAD,CAAoB9gB,UAAWJ,EAAQ2gB,gBAAvC,SACE,cAAC,GAAD,CACE/P,MAAM,qBACN9H,YAAY,sBACZgR,cAAegS,EACfnS,MAAOhK,EACPiK,gBAAiB2T,EAAgC,uBAIvD,eAACttB,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ4gB,YAJnD,UAME,cAAC,GAAD,CAAYhQ,MAAM,kBAAkBxQ,UAAWJ,EAAQ2gB,gBAAvD,SACE,cAAC,GAAD,CACEiN,MAAO,CACL,CAAEjU,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,GAAItW,MAAO,OAEtB6qB,aAAc,EACdL,KAAM,EACNC,kBAAkB,MAClBnU,MAAO3J,EACP8J,cAAeiS,EACfgC,IAAK,EACLjrB,IAAK,GACL1C,UAAWJ,EAAQ6sB,YAGvB,cAAC,GAAD,CAAYjc,MAAM,OAAOxQ,UAAWJ,EAAQ2gB,gBAA5C,SACE,cAAC,GAAD,CACEiN,MAAO,CACL,CAAEjU,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,MACnB,CAAEsW,MAAO,EAAGtW,MAAO,OACnB,CAAEsW,MAAO,EAAGtW,MAAO,MACnB,CAAEsW,MAAO,EAAGtW,MAAO,KACnB,CAAEsW,MAAO,EAAGtW,MAAO,OAErB6qB,aAAc,EACdL,KAAM,EACNC,kBAAkB,MAClBnU,MAAO5J,EACP+J,cAAekS,EACf+B,IAAK,EACLjrB,IAAK,EACL1C,UAAWJ,EAAQ6sB,eAIzB,cAAC,GAAD,CACEjc,MAAM,iBACN9H,YAAY,sBACZgR,cAAekK,EACfrK,MAAOhO,EACP8T,kBAAmBzf,EAAQ+gB,eAMpBngB,OAAMC,WAAWysB,I,UCjajBvuB,GANGC,YAAW,CAC3BE,KAAM,CACJiD,MAAO,iBCcIgsB,GAXO,SAAC,GAA8C,IAA5C/pB,EAA2C,EAA3CA,GAAIhE,EAAuC,EAAvCA,UAAWguB,EAA4B,EAA5BA,MAAO/S,EAAqB,EAArBA,eACvCrb,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,SAAStB,UAAWkC,YAAKtC,EAAQd,KAAMkB,GAAlE,UACE,cAACC,EAAA,EAAD,iBACA,cAACguB,GAAA,EAAD,CAAQC,QAASF,EAAOnS,SAAUZ,EAAgBjX,GAAIA,IACtD,cAAC/D,EAAA,EAAD,wBCaStB,GAxBGC,aAAW,SAACC,GAAD,MAAY,CACvCsvB,kBAAmB,CACjBC,WAAY,SACZC,QAAS,IACTC,WAAY,wBAEdC,0BAA2B,CACzBH,WAAY,UACZC,QAAS,KAEXG,oBAAoB,2BACf3vB,EAAMgC,iBAAiB,CACxB6F,aAAc,GACd3D,YAAa,GACb6F,WAAY,EACZC,cAAe,KALA,IAOjBzJ,WAAYP,EAAMQ,QAAQgJ,QAAQ9I,KAClCqC,YAAa,QACbC,YAAa,YACbH,YAAa7C,EAAMQ,QAAQsC,UAAUpC,WC0B1BkvB,GAxCa,SAAC,GAOtB,IANLC,EAMI,EANJA,WACAtsB,EAKI,EALJA,SACAusB,EAII,EAJJA,YACAC,EAGI,EAHJA,aACA5uB,EAEI,EAFJA,UACA6uB,EACI,EADJA,wBAEMjvB,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACG,UAAU,SAASD,GAAI,GAAIE,WAAW,aAAatB,UAAWA,EAAnF,UACE,eAACH,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,gBACfuB,WAAW,SACXH,KAAK,SACLnB,UAAWJ,EAAQ4uB,oBALrB,UAOE,cAACvuB,EAAA,EAAD,UAAayuB,IACb,cAAC,GAAD,CAAeV,MAAOW,EAAa1T,eAAgB2T,OAEpDD,EACC,cAAC9uB,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXJ,MAAI,EACJE,GAAI,GACJpB,UAAWkC,YACTtC,EAAQuuB,kBACRQ,GAAe/uB,EAAQ2uB,0BACvBM,GARJ,SAWGzsB,IAED,SCpBKzD,GArBGC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAK,2BACAD,EAAMgC,iBAAiB,CACxBkH,QAAS,MAFT,IAIFhG,MAAO,QACPN,aAAc,MACdI,YAAa,MACbH,YAAa7C,EAAMQ,QAAQsC,UAAUpC,KACrCqC,YAAa,QACbxC,WAAYP,EAAMQ,QAAQyvB,eAAe5Q,KACzCnf,SAAU,WACVmK,IAAK,MACLjK,KAAM,MACN8vB,UAAW,0BAEbC,iBAAkBnwB,EAAMgC,iBAAiB,CACvC6I,aAAc,S,sDCZZulB,GAA+B,SAAC,EAEpC9uB,GACI,IAFFC,EAEC,EAFDA,KAAM8uB,EAEL,EAFKA,mBAAoBC,EAEzB,EAFyBA,mBAAuB9uB,EAEhD,kBACGT,EAAUjB,KAChB,OACE,eAACkB,EAAA,EAAD,yBACEC,WAAS,EACTC,eAAe,SACfqvB,aAAa,aACbpvB,UAAWJ,EAAQd,KACnBqB,IAAKA,GACDE,GANN,cAQE,cAACJ,EAAA,EAAD,CAAYD,UAAWJ,EAAQovB,iBAA/B,SAAkD5uB,IAClD,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,eAA/B,UACE,cAAC,EAAD,CAAeK,KAAM,UAAW8C,QAASgsB,IACzC,cAAC,EAAD,CAAe9uB,KAAM,WAAY8C,QAASisB,YAKnC3uB,OAAMC,WAAWwuB,I,oBCRjBrpB,GAnBE,SAAC8T,EAAe8F,EAAc6P,EAAevS,GAC5D,MAA0BhY,mBAAS0a,IAA8B,GAAjE,oBAAOjG,EAAP,KAAc+V,EAAd,KAWMhV,EAAqBJ,uBAAY,SAACK,GAAD,OAAe+U,EAAS/U,KAAY,IAI3E,OAFApC,qBAAU,kBAAMmC,EAAmBkF,KAAe,CAACA,EAAclF,IAE1D,CAACf,EAbe,SAACpU,GACtBmqB,EAASnqB,EAAM+W,OAAOgS,SACtBxU,EAAcvU,GACdkqB,GAAc,SAAC1P,GAAD,mBAAC,eACVA,GADS,kBAEX7C,EAAO3X,EAAM+W,OAAOgS,gBCEZvvB,GAVGC,YAAW,CAC3B2wB,UAAW,CACT,+BAAgC,CAC9BlT,UAAW,OACXC,WAAY,SACZkT,SAAU,SACVC,aAAc,eCmBLC,GArBM,SAAC,GAOf,IANLlQ,EAMI,EANJA,aACA6P,EAKI,EALJA,cACA3V,EAII,EAJJA,cACAiW,EAGI,EAHJA,QACA7S,EAEI,EAFJA,KACA8S,EACI,EADJA,cAEMhwB,EAAUjB,KAChB,EAAgCkxB,GAAYnW,EAAe8F,EAAc6P,EAAevS,GAAxF,oBAAOvD,EAAP,KAAc0B,EAAd,KACA,OACE,cAACmC,GAAA,EAAD,CACEC,QAAS,cAACyS,GAAA,EAAD,CAAU5B,QAAS3U,EAAOsC,SAAUZ,EAAgB6B,KAAMA,IACnE7Z,MAAO2sB,EACP5vB,UAAWJ,EAAQ2vB,UACnBI,QAASA,EACT7S,KAAMA,KCRGiT,GAZY,SAACC,GAC1B,MAAgDlrB,qBAAhD,oBAAOmrB,EAAP,KAAyBC,EAAzB,KAQA,OANA/X,qBAAU,WACJ6X,GACFA,EAAqBC,KAEtB,CAACD,EAAsBC,IAEnB,CAACC,ICmFKvxB,GA5FGC,aAAW,SAACC,GAAD,oBAAY,CACvCsxB,iBAAiB,2BACZtxB,EAAMgC,iBAAiB,CAAEC,YAAa,GAAI4I,aAAc,GAAI3G,YAAa,MAD9D,IAEdjB,WAAY,MAEdsuB,oBAAqB,CACnBruB,MAAO,eAETsuB,gBAAiB,CACfC,eAAgB,eAElBC,eAAgB,CACdC,gBAAiB,QACjB7J,OAAQ,MACR,8BAA+B,CAC7B7lB,YAAa,MACb4F,aAAc,OACd3E,MAAO,SAIX0uB,kCAAgC,mBAC7B5xB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BixB,UAAW,WAFiB,cAI7B7xB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BixB,UAAW,UALiB,GAShCC,iCAA+B,mBAC5B9xB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP,8BAA+B,CAC7B0c,UAAW,gBAJc,cAO5B5f,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,cACP,8BAA+B,CAC7B0c,UAAW,WAVc,GAe/BmS,mCAAiC,mBAC9B/xB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BixB,UAAW,WAFkB,cAI9B7xB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BixB,UAAW,UALkB,GASjCG,kCAAgC,mBAC7BhyB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP,8BAA+B,CAC7B0c,UAAW,gBAJe,cAO7B5f,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UARqB,cAU7BlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,cACP,8BAA+B,CAC7B0c,UAAW,WAbe,GAkBhCqS,kCAAmC,CACjCJ,UAAW,UAGbK,kCAAgC,mBAC7BlyB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP,8BAA+B,CAC7B0c,UAAW,gBAJe,cAO7B5f,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UARqB,cAU7BlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QAXqB,O,6ICqBnBivB,GAxFgB,SAAC,GAWzB,IAAD,EAVJC,EAUI,EAVJA,WACAlX,EASI,EATJA,WACAmX,EAQI,EARJA,cACAC,EAOI,EAPJA,gBACAzX,EAMI,EANJA,cACA0X,EAKI,EALJA,cACApxB,EAII,EAJJA,UACAqxB,EAGI,EAHJA,OACArB,EAEI,EAFJA,qBACG3vB,EACC,kBACET,EAAUjB,KAChB,EAA8BoxB,GAAmBC,GAA1CE,EAAP,qBACMoB,EAAmBJ,EAAcpgB,OACjCygB,EAAkBF,GAAUC,GAAoB,EAChDE,EAAgBH,GAAUC,EAAmB,GAAKA,EAAmB,GACrEG,EAAiBJ,GAAUC,EAAmB,IAAMA,EAAmB,GACvEI,EAAiBL,GAAUC,EAAmB,GAEhDK,EAAuB,GACvB3U,EAAU,EACVC,EAAW,GAET2U,EAAmBV,EAAcrtB,KAAI,SAAC3C,GAC1C,IAAM2wB,EAAa3wB,EAAI,KACjBic,EAAejc,EAAI,MACzB,OACE,cAAC,GAAD,CACEse,aAAc2R,EAAgBU,GAC9BnY,cAAeA,EACf2V,cAAea,EACfN,cAAezS,EACfL,KAAM+U,EAENlC,QAASyB,GADJS,MAvBP,eA4BaD,GA5Bb,IA4BJ,2BAAmC,CAAC,IAA3B1wB,EAA0B,QACjC+b,EAAStB,KAAKza,GACU,IAApB+b,EAASnM,QAAgB8gB,EAAiB9gB,SAAWkM,IACvD2U,EAAqBhW,KACnB,cAAC9b,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVC,WAAW,aACXtB,UAAWkC,YACTtC,EAAQuwB,iBACRkB,EAASzxB,EAAQ2wB,eAAiB3wB,EAAQwwB,oBAC1CmB,GAAmB3xB,EAAQwwB,oBAC3BoB,GAAiB5xB,EAAQ+wB,gCACzBc,GAAkB7xB,EAAQixB,iCAC1Ba,GAAkB9xB,EAAQmxB,kCAV9B,SAcG9T,GAdH,0BAY0BD,KAK5BC,EAAW,IAEbD,KAnDE,8BAsDJ,OACE,eAACpB,GAAA,EAAD,yBAAa2B,UAAU,WAAWvd,UAAWA,GAAeK,GAA5D,cACG4wB,GAAc,cAACzT,GAAA,EAAD,CAAWD,UAAU,SAArB,SAA+B0T,IAC9C,cAACa,GAAA,EAAD,UACE,cAACjyB,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXH,KAAMkwB,EAAS,SAAW,OAC1BrxB,UAAWkC,YACTmvB,GAAUzxB,EAAQywB,gBAClBmB,GAAiB5xB,EAAQ6wB,iCACzBgB,GAAkB7xB,EAAQgxB,kCAC1Bc,GAAkB9xB,EAAQkxB,mCAR9B,SAWGa,MAGL,cAAC7V,GAAA,EAAD,UAAiB/B,S,sCCtFRgY,GANM,SAAC,GAAD,IAAG3vB,EAAH,EAAGA,SAAU4vB,EAAb,EAAaA,UAAc3xB,EAA3B,yBACnB,cAAC4xB,GAAA,EAAD,yBAAO7tB,KAAM4tB,GAAe3xB,GAA5B,aACG+B,M,2BCKU8vB,GANW,SAAC,GAAD,IAAGlyB,EAAH,EAAGA,UAAcK,EAAjB,yBACxB,cAACR,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASuB,WAAW,SAAStB,UAAWA,EAAvE,SACE,cAACmyB,GAAA,EAAD,eAAgB9xB,OCgCL+xB,GAnCW,SAACC,EAAa/lB,GACtC,IAa+BulB,EAb/B,EAAkC/sB,oBAAS,GAA3C,oBAAOwtB,EAAP,KAAkBC,EAAlB,KAEQ9S,EAAiD4S,EAAjD5S,kBAAmB+S,EAA8BH,EAA9BG,0BACrBC,EAA6B,SAAC9S,EAAW+S,GAC7C,IAAMzL,EAAQ,eAAQtH,GAEtB,cADOsH,EAASyL,GACTzL,GAkBT,MAAO,CACLqL,EACA,CACEK,0BAlB8B,WAChCJ,GAAa,IAkBXrD,oBAf2B2C,EAKkBvlB,EALH,WAC5CmT,GAAkB,SAACE,GAAD,OAAe8S,EAA2B9S,EAAWkS,MACvEW,GAA0B,SAAC7S,GAAD,OAAe8S,EAA2B9S,EAAWkS,MAC/EU,GAAa,KAaXpD,mBATuB,WACzBoD,GAAa,OCuBF5zB,GA7CGC,aAAW,SAACC,GAAD,cAAY,CACvCguB,SAAU,CACR9qB,MAAO,cACP2E,aAAc,MACd3D,YAAa,OAEf+pB,kBAAmB,CACjB/qB,MAAO,cACPD,WAAY,IACZiB,YAAa,OAEf0N,aAAa,2BACR5R,EAAMgC,iBAAiB,CAAE6I,aAAc,MADhC,IAEV+W,UAAW,uCAEbmM,aAAc,CAAEvQ,UAAW,QAC3BqQ,wBAAyB7tB,EAAMgC,iBAAiB,CAAE6I,aAAc,GAAId,WAAY,IAChF+jB,yBAAyB,2BACpB9tB,EAAMgC,iBAAiB,CAAE+H,WAAY,KADlB,IAEtBV,WAAY,SAEdqY,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxDkpB,SAAU,CACRC,WAAY,MACZC,aAAc,aACdC,QAAS,QAEX1c,QAAM,mBACHxX,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFL,cAIHlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SALL,GAQNwJ,cAAY,mBACT1M,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UAFC,cAITlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UALC,OCxBRixB,GAAiB,SAAC,GAAwD,IAAtDhzB,EAAqD,EAArDA,UAAWizB,EAA0C,EAA1CA,uBAAwBZ,EAAkB,EAAlBA,YACnDvV,EAA8DmW,EAA9DnW,KAAM7Z,EAAwDgwB,EAAxDhwB,MAAOoT,EAAiD4c,EAAjD5c,OAAQjO,EAAyC6qB,EAAzC7qB,KAAMmD,EAAmC0nB,EAAnC1nB,aAAc+K,EAAqB2c,EAArB3c,KAAM4c,EAAeD,EAAfC,WACvD,EAGId,GAAkBC,EAAavV,GAHnC,oBACEwV,EADF,YAEIK,EAFJ,EAEIA,0BAA2BzD,EAF/B,EAE+BA,mBAAoBC,EAFnD,EAEmDA,mBAG7CvvB,EAAUjB,KAEhB,OACE,eAAC,GAAD,CAAeqB,UAAWA,EAA1B,UACE,cAAC,GAAD,CAAcgyB,UAAWM,EAAzB,SACE,cAAC,GAAD,CACElyB,KAAI,iCAA4B6C,EAA5B,gFACJisB,mBAAoBA,EACpBC,mBAAoBA,MAGxB,cAACtvB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,SAAStB,UAAWJ,EAAQ2gB,gBAAvD,SACE,cAAC,GAAD,CACEhf,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQgtB,cAC1CxsB,KAAI,mBAAc6C,OAGtB,eAACpD,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,SAA9C,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YACTtC,EAAQktB,kBACS,KAAjBvhB,EAAsB3L,EAAQyW,OAASzW,EAAQ2L,cAJnD,SAOE,cAAC,GAAD,CACEhK,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,iBAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YACTtC,EAAQ+sB,yBACR/sB,EAAQgtB,aACRhtB,EAAQgzB,UALZ,mBAQMvc,EARN,iBAQyB5R,IAAT6R,EAAqBA,EAAO,SAG9C,eAACzW,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YACTtC,EAAQktB,kBACS,KAAjBvhB,EAAsB3L,EAAQyW,OAASzW,EAAQ2L,cAJnD,SAOE,cAAC,GAAD,CACEhK,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,aAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAF5D,SAIGxkB,OAGa,KAAjBmD,EACC,eAAC1L,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YACTtC,EAAQktB,kBACS,KAAjBvhB,EAAsB3L,EAAQyW,OAASzW,EAAQ2L,cAJnD,SAOE,cAAC,GAAD,CACEhK,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,qBAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YACTtC,EAAQ+sB,yBACR/sB,EAAQgtB,aACRhtB,EAAQgzB,UALZ,SAQGrnB,OAGH,UACY9G,IAAfyuB,GAAkD,IAAtBA,EAAWpiB,OACtC,eAACjR,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YACTtC,EAAQktB,kBACS,KAAjBvhB,EAAsB3L,EAAQyW,OAASzW,EAAQ2L,cAJnD,SAOE,cAAC,GAAD,CACEhK,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,gBAGT,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,SACG4xB,EAAWrvB,KAAI,SAAC3C,GAAD,OACd,cAACjB,EAAA,EAAD,CAEEsB,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQ+sB,yBAA0B/sB,EAAQgtB,cAH5D,SAKG1rB,GAJIA,WASX,QAEN,cAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACE,cAAC,EAAD,CAAeK,KAAK,WAAW8C,QAASyvB,UAMjCnyB,OAAM8Y,KAAK0Z,ICtIXr0B,GAZGC,aAAW,SAACC,GAAD,MAAY,CACvCs0B,aAAct0B,EAAMgC,iBAAiB,CAAEga,UAAW,KAClD0F,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD0pB,eAAgB,CACd,UAAW,CACT,oBAAqB,CACnB1pB,aAAc,aCAhB2pB,GAAuB,SAAC,GAAoD,IAAlDrzB,EAAiD,EAAjDA,UAAWszB,EAAsC,EAAtCA,mBAAoBjB,EAAkB,EAAlBA,YACvDzyB,EAAUjB,KACV40B,EAAsBD,EAAmBzvB,KAAI,SAAC3C,GAClD,IAAQ+B,EAAU/B,EAAV+B,MACR,OACE,cAAC,GAAD,CAEEjD,UAAWJ,EAAQ2gB,gBACnB0S,uBAAwB/xB,EACxBmxB,YAAaA,GAHRpvB,MAQX,OACE,qCACE,cAAC,GAAD,CAEE1B,QAAQ,QACRvB,UAAWkC,YAAKlC,EAAWJ,EAAQ2gB,iBACnCngB,KAAK,yBAHD,oBAKN,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASrB,UAAWJ,EAAQwzB,eAAtD,SACGG,QAMM/yB,OAAM8Y,KAAK+Z,IC0GX/T,GA5IC,SAAC+S,GACf,IAsFyBmB,EAAWC,EAtF9BC,EAAejL,mBACnB,iBAAO,CACLkL,UAAW,GACXC,UAAW,GACX9V,gBAAiB,GACjB+V,iBAAkB,MAEpB,IAGF,EAAkC/uB,mBAAS4uB,GAA3C,oBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAA0B,CAC9BC,mBAAmB,EACnBC,mBAAmB,EACnBC,yBAAyB,GAGnBC,EAA+D/B,EAA/D+B,0BAA2BC,EAAoChC,EAApCgC,gCAC3BV,EAA4DG,EAA5DH,UAAWC,EAAiDE,EAAjDF,UAAWC,EAAsCC,EAAtCD,iBAAkB/V,EAAoBgW,EAApBhW,gBAEhD,EAAsChZ,oBAAS,GAA/C,oBAAO2U,EAAP,KAAoB6a,EAApB,KACA,EAAoCxvB,mBAASkvB,GAA7C,oBAAOO,EAAP,KAAmBC,EAAnB,KAEIC,EAA0BvM,mBAC1BwM,EAAgCxM,mBA0B9BxI,EAAoB,SAAC5C,GAAD,OAAU,SAACvD,GAAD,OAClCwa,GAAa,SAACpU,GAAD,mBAAC,eACTA,GADQ,kBAEV7C,EAAOvD,SAGNob,EAA2B7U,aAAqBJ,EAAkB,aAAc,IAAK,CACzFK,UAAU,IAGN6U,EAAiC9U,aACrCJ,EAAkB,mBAClB,IACA,CACEK,UAAU,IAGR8U,EAAkC/U,aACtCJ,EAAkB,oBAClB,IACA,CACEK,UAAU,IAIR+U,EAAkBpV,EAAkB,aAEpCqV,EACU,KAAdpB,IACCc,EAAwBnc,SACX,KAAdsb,IACe,cAAdA,GACuB,KAApB9V,IAA2B4W,EAA8Bpc,SAyBzD0c,GAtBmBxB,EAsBWuB,EAtBAtB,EAsBa,CAC/CnnB,IAAKqnB,EACL5Y,KAAM6Y,EACNtd,KAAMwH,EACNmX,YAAapB,GA1BoC,WACjD,IAAQvnB,EAAiCmnB,EAAjCnnB,IAAKyO,EAA4B0Y,EAA5B1Y,KAAMzE,EAAsBmd,EAAtBnd,KAAM2e,EAAgBxB,EAAhBwB,YAErBzB,GACFY,GAA0B,SAACzU,GAAD,mBAAC,eACtBA,GADqB,kBAEvBrT,EAAM,CACLwQ,KAAMxQ,EACNrJ,MAAOqJ,EACPyO,OACAzE,OACA2e,oBAGJZ,GAAgC,SAAC1U,GAAD,mBAAC,eAC5BA,GAD2B,kBAE7BrT,GAAM,OA1EXgoB,GAAe,GACfE,EAAcR,GACdD,EAAaL,IAGM,SAACD,GACpB,IAAQnnB,EAAoBmnB,EAApBnnB,IAAKyO,EAAe0Y,EAAf1Y,KAAMzE,EAASmd,EAATnd,KACb4e,EAAkB,SAACC,GAAD,OACtBX,GAAc,SAAC7U,GAAD,mBAAC,eACVA,GADS,4BAERwV,EAFQ,aAEa,QAEjB,KAAR7oB,GACF4oB,EAAgB,aAEL,KAATna,GACFma,EAAgB,aAEL,cAATna,GAAiC,KAATzE,GAC1B4e,EAAgB,mBA0DXE,CAAa3B,KAgBtB,OANAtb,qBAAU,WACJsB,GACF6a,GAAe,KAEhB,CAAC7a,IAEG,CACL,CACE8a,aACA9a,cACAgb,0BACAC,gCACAd,aAEF,CACEe,2BACAC,iCACAC,kCACAG,cACAF,qBCnGSn2B,GArCGC,aAAW,SAACC,GAAD,cAAY,CACvC0hB,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD2rB,OAAQ,CACN9tB,UAAW,YAEbglB,uBAAuB,2BAClB1tB,EAAMgC,iBAAiB,CAAE6I,aAAc,MADtB,IAEpB+W,UAAW,qCACX1e,MAAO,OACPrC,OAAQ,MACRmb,UAAW,SAEbya,sBAAuB,CACrB/tB,UAAW,cAEbguB,WAAS,GACP7uB,aAAc,OADP,cAEN7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UAHF,cAKNlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UANF,cAQNlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UATF,GAYT4e,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,OCdJyzB,GAAe,SAAC,GAAgC,IAA9Bx1B,EAA6B,EAA7BA,UAAWqyB,EAAkB,EAAlBA,YACjC,EASI/S,GAAQ+S,GATZ,2BACIkC,EADJ,EACIA,WAAY9a,EADhB,EACgBA,YAAagb,EAD7B,EAC6BA,wBAAyBC,EADtD,EACsDA,8BAA+Bd,EADrF,EACqFA,UADrF,OAGIe,EAHJ,EAGIA,yBACAC,EAJJ,EAIIA,+BACAC,EALJ,EAKIA,gCACAG,EANJ,EAMIA,YACAF,EAPJ,EAOIA,gBAIIb,EAAkEM,EAAlEN,kBAAmBC,EAA+CK,EAA/CL,kBAAmBC,EAA4BI,EAA5BJ,wBAExCv0B,EAAUjB,KAEhB,OACE,qCACE,cAAC,GAAD,CAAa4C,QAAQ,QAAQvB,UAAWJ,EAAQ2gB,gBAAiBngB,KAAK,kBACtE,eAAC,GAAD,CAAeJ,UAAWA,EAA1B,UACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,cAACzB,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACE,GAAI,GAAIkd,GAAI,EAAjC,SACE,cAAC,GAAD,CACEmE,WAAW,UACX/Z,YAAY,+CACZqY,UAAW,GACX/gB,UAAWJ,EAAQ2gB,gBACnB9G,YAAaA,EACbC,cAAeib,EACfnb,gBAAiBya,EACjB9zB,IAAKs0B,MAGT,cAAC,GAAD,CACEjkB,MAAM,QACNxQ,UAAWkC,YAAKtC,EAAQ01B,sBAAuB11B,EAAQ2gB,iBAFzD,SAIE,cAAC,GAAD,CACE7D,cAAe,CACb,CAAEnD,MAAO,UAAWtW,MAAO,WAC3B,CAAEsW,MAAO,YAAatW,MAAO,eAC7B,CAAEsW,MAAO,QAAStW,MAAO,WAE3ByW,cAAeob,EACftb,gBAAiB0a,EACjBza,YAAaA,MAGjB,cAAC,GAAD,CACEgJ,WAAW,oBACX/Z,YAAY,gCACZqY,UAAW,GACX/gB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ21B,WACjD7b,cAAekb,EACfhY,SAAwB,cAAdgX,EACVpa,gBAAiB2a,EACjBnT,QAAS,gFACT7gB,IAAKu0B,EACLjb,YAAaA,IAEf,cAAC,GAAD,CACEjJ,MAAM,kBACN9H,YAAY,8CACZ1I,UAAWJ,EAAQ2gB,gBACnB7G,cAAemb,EACfxV,kBAAmBzf,EAAQ+gB,SAC3BlH,YAAaA,OAGjB,cAAC5Z,EAAA,EAAD,CAAMG,UAAWJ,EAAQ2sB,yBACzB,cAAC1sB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAavB,eAAe,WAAvD,SACE,cAAC,EAAD,CAAeC,UAAWJ,EAAQy1B,OAAQj1B,KAAK,kBAAkB8C,QAAS8xB,aAOrEx0B,OAAM8Y,KAAKkc,I,0CCtBX5vB,GArEE,SAAC6vB,EAASt1B,EAAKuZ,GAC9B,IAyC0Bgc,EAAalU,EAzCvC,EAAmC1c,qBAAnC,oBAAO6wB,EAAP,KAAqBC,EAArB,KACA,EAAoC9wB,qBAApC,oBAAO+U,EAAP,KAAmBC,EAAnB,KACA,EAAoChV,qBAApC,oBAAOiV,EAAP,KAAmBC,EAAnB,KAEMsH,EAAgB,SAACC,EAAMC,GAAP,OAAmBA,IAAYA,EAAQlJ,QAAUiJ,IAQjEsU,EAA2B,SAACxb,EAAY/N,GAC5C,IAAMwpB,EAAWzb,EAAW/N,GAAX,KAAwByY,MAAM,KAAK,GAGpD,GADgB,SAAb+Q,GAAoC,QAAbA,GAAmC,QAAbA,QAAoCrxB,IAAbqxB,EAErE,OAAO,GAGLC,EAA6B,SAAC1b,EAAY/N,EAAKopB,GAInD,GAHiBrb,EAAW/N,GAAX,KACoB,IAAdopB,EAGrB,OAAO,GAwCX,MAAO,CAAC,CAAEC,eAAc5b,aAAYF,eAxBV6b,EAsBcD,EAtBDjU,EAsBUrhB,EAtBE,SAACgF,GAClD,IACI6wB,EACAC,EAFEC,EAAoB/wB,EAAM+W,OAAOia,MAGvC,IAAK,IAAM7pB,KAAO4pB,EACG5L,OAAO8L,UAAU9L,OAAOhe,MAEzC0pB,EAAoBH,EAAyBK,EAAmB5pB,GAChE2pB,EAAkBF,EAA2BG,EAAmB5pB,EAAKopB,IAGrEM,EAvB0B,SAACxU,GAC/B1H,GAAc,GACdE,EAAc,qEACdsH,GAAc,EAAME,GAqBlB6U,CAAwB7U,GACfyU,EAnBqB,SAACzU,EAASkU,GAC1C5b,GAAc,GACdE,EAAc,+CAAD,OAA0C0b,EAA1C,OACbpU,GAAc,EAAME,GAiBlB8U,CAA0B9U,EAASkU,GAjDd,SAAClU,GACxBxH,EAAc,MACdF,GAAc,GACdwH,GAAc,EAAOE,GAgDnBvH,CAAiBuH,GAEnB9H,EAAcvU,EAAM+W,OAAOia,OAC3BP,EAAWzwB,EAAM+W,OAAOia,WCpDbx3B,GATGC,YAAW,CAC3BE,KAAM,CACJy3B,UAAW,OACX,uCAAwC,CACtC3tB,WAAY,U,2CCCZ4tB,GAAY,SAAC,EAAiDr2B,GAAS,IAAxDH,EAAuD,EAAvDA,UAAWy1B,EAA4C,EAA5CA,QAAS/b,EAAmC,EAAnCA,cAAkBrZ,EAAiB,kBACpET,EAAUjB,KAChB,EAAqCiH,GAAS6vB,EAASt1B,EAAKuZ,GAA5D,oBAAOsB,EAAP,KAAmBC,EAAnB,KACQ0a,EAAyC3a,EAAzC2a,aAAc5b,EAA2BiB,EAA3BjB,WAAYF,EAAemB,EAAfnB,WAClC,OACE,cAAC,GAAD,aACE7Z,UAAWkC,YAAKtC,EAAQd,KAAMkB,GAC9B+a,KAAK,OACLkJ,WAAY,CACVwS,OAAQ,mCACRC,UAAU,GAEZ7a,SAAUZ,EACVN,MAAOd,EACPsc,MAAOR,EACP5b,WAAYA,GAER1Z,KAKKG,OAAMC,WAAW+1B,IChBjB73B,GAXGC,aAAW,SAACC,GAAD,MAAY,CACvC8b,MAAO,CACLlZ,aAAc,MACdyI,OAAQ,YACRxI,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAEnCT,KAAM,CACJiD,MAAO,mB,sCCaI40B,GAfS,SAAC,GAAgD,IAA9ClU,EAA6C,EAA7CA,WAAYziB,EAAiC,EAAjCA,UAAW2a,EAAsB,EAAtBA,MAAUta,EAAY,kBAChET,EAAUjB,KAChB,OACE,cAAC,GAAD,CAAY6R,MAAOiS,EAAYziB,UAAWA,EAA1C,SACE,cAACH,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXtB,UAAWkC,YAAKtC,EAAQd,KAAM6b,GAAS/a,EAAQ+a,OAHjD,SAKE,cAAC,GAAD,aAAkBI,KAAK,QAAW1a,S,kBC6U3Bif,GAxVC,SAACsX,EAAWvE,EAAawE,GACvC,IAAMC,EAAqB,CACzBC,gBAAgB,EAChBC,oBAAoB,GAEhBC,EAAoB,CACxBC,MAAM,EACNC,QAAQ,EACRve,OAAO,EACPxY,KAAM,IAGA0c,EAAsB8Z,EAAtB9Z,KAAMtM,EAAgBomB,EAAhBpmB,MAAOuK,EAAS6b,EAAT7b,KACrB6b,EAAS,KAET,IA6J0BnD,EAuBAxwB,EAYKm0B,EAAevF,EAzLxCwF,EAPe,SAAC9qB,GAEpB,GAAkB,cADAA,EAAIwO,KAEpB,OAAOxO,EAAI+J,KAIGghB,CAAaV,GAG7BnX,EAQE4S,EARF5S,kBACA2U,EAOE/B,EAPF+B,0BACAC,EAMEhC,EANFgC,gCACAkD,EAKElF,EALFkF,0BACAC,EAIEnF,EAJFmF,oBACAC,EAGEpF,EAHFoF,cACAC,EAEErF,EAFFqF,kCACAlF,EACEH,EADFG,0BAGQmF,EAINd,EAJFxgB,OACYuhB,EAGVf,EAHFgB,WACcC,EAEZjB,EAFFtrB,aACYwsB,EACVlB,EADF3D,WAGF,EAAoCpuB,mBAASmyB,GAA7C,oBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA4BnzB,mBAAS6yB,GAArC,oBAAOthB,EAAP,KAAe6hB,EAAf,KACA,EAAoCpzB,mBACP,gBAA3B8yB,EAA4C,KAAOA,GADrD,oBAAOC,EAAP,KAAmBM,EAAnB,KAGA,EAAwCrzB,mBAASgzB,GAAjD,oBAAOvsB,EAAP,KAAqB6sB,EAArB,KACA,EAAoCtzB,mBAASizB,GAA7C,oBAAO7E,EAAP,KAAmBmF,EAAnB,KACA,EAAoCvzB,mBAASgyB,GAA7C,oBAAOvC,EAAP,KAAmBC,EAAnB,KACI8D,EAA0BpQ,mBAC1BqQ,EAA8BrQ,mBAE5BsQ,GAAoBC,aAAQZ,EAAY,IAAIpc,KAAK,OAAQ,KAAM,OAE/Did,GAAqBC,aAASd,EAAY,IAAIpc,KAAK,OAAQ,KAAM,OACjEmd,IACHJ,KACAE,IACc,OAAfb,GACc,gBAAdA,EAEInY,GAAoB,SAACzH,GAAD,OAAc,SAACsB,GAAD,OAAWtB,EAASsB,KAEtDsf,GAAwB/Y,aAAqBJ,GAAkBwY,GAAY,IAAK,CACpFnY,UAAU,IAGN+Y,GAA4BhZ,aAAqBJ,GAAkByY,GAAgB,IAAK,CAC5FpY,UAAU,IAGNgZ,GAA6BjZ,aAAqBJ,GAAkB0Y,GAAkB,IAAK,CAC/FrY,UAAU,IAGNiZ,GAA2B,SAAC1sB,GAChC+nB,GAAgC,SAAC1U,GAAD,mBAAC,eAC5BA,GAD2B,kBAE7BrT,GAAM,OAET2rB,EAAchB,IAGVxE,GAA6B,SAAC9S,GAClC,IAAMsH,EAAQ,eAAQtH,GAEtB,cADOsH,EAASnK,GACTmK,GAGHgS,GAAsB,SAAC3sB,GAC3BorB,GAAkC,SAAC/X,GAAD,OAAe8S,GAA2B9S,MAC5E4X,GAA0B,SAAC5X,GAAD,OAAe8S,GAA2B9S,MACpE6X,GAAoB,SAAC7X,GAAD,OAAeA,EAAY,KAC/C8X,EAAc,IAwBVyB,GAAgBN,GAAqB,UACpCf,EAAWsB,UADyB,YACZtB,EAAWuB,WAAa,EADZ,YACiBvB,EAAWwB,eACnE,KAEEC,GAAmB,SAAC3Z,EAAW8T,GAAgB,IAAD,EAC9C8F,EAAe,GAGjBjtB,EAQEmnB,EARFnnB,IACAktB,EAOE/F,EAPF+F,WACAjjB,EAMEkd,EANFld,YACAkjB,EAKEhG,EALFgG,kBACArxB,EAIEqrB,EAJFrrB,KACAkO,EAGEmd,EAHFnd,KACAojB,EAEEjG,EAFFiG,UACAC,EACElG,EADFkG,cAGI1S,EAAQ,2BACTtH,GADS,gBAEZia,eAAe,GACdttB,GAHW,mBAIT,OAASA,GAJA,sBAKHktB,GALG,uBAMFjjB,GANE,6BAOIkjB,GAPJ,qBAQVrxB,GARU,KAkCd,MAZsB,KAAlBuxB,IACFJ,EAXoB,SAAChtB,GACrB,IAAMstB,EAAY,GAClB,IAAK,IAAIhI,KAActlB,EACF+d,OAAO8L,UAAU9L,OAAOuH,KAEzCgI,EAAUle,KAAKpP,EAAIslB,GAAJ,MAGnB,OAAOgI,EAGQC,CAAcH,IAEb,cAAdD,EACFK,OAAOC,OAAO/S,EAAS3a,GAAM,CAC3BgK,SAEqB,UAAdojB,GACTK,OAAOC,OAAO/S,EAAS3a,GAAM,CAC3B4mB,WAAYqG,IAGTtS,GAmBHgT,IAhBoBxG,EAgBa,CACrC+F,WAAYhpB,EACZipB,kBAAmBluB,EACnBe,IAAKwQ,EACLvG,YAAaF,GApB0B,WACvC,IAAQ/J,EAAoDmnB,EAApDnnB,IAAKktB,EAA+C/F,EAA/C+F,WAAYjjB,EAAmCkd,EAAnCld,YAAakjB,EAAsBhG,EAAtBgG,kBAChCS,EAAmB,yCAAqCV,EAArC,8DACgB,KAAhBjjB,GAA4C,KAAtBkjB,EAE7CxB,GAAc,SAACtY,GAAD,mBAAC,eACVA,GADS,IAEZuX,MAAM,EACNte,OAAO,EACPxY,KAAM85B,OArFwB,SAAC5tB,GACnC0sB,GAAyB1sB,GACzB2sB,KAsFEkB,CAA4B7tB,KAqB1B8tB,IAVoBn3B,EAUYuN,EAVF,WAClC,IAAM6pB,EAAoB,kEAA2Dp3B,EAA3D,kEAC1Bg1B,GAAc,SAACtY,GAAD,mBAAC,eACVA,GADS,IAEZuX,MAAM,EACNC,QAAQ,EACR/2B,KAAMi6B,SAsBJnL,IAhByBkI,EAgBkBY,EAhBHnG,EAgBe/U,EAhBA,WAC3D,IAAMwd,GAAgD,IAA5BlD,EAAa,OACjCmD,GAA6C,IAA3BnD,EAAa,MAEjCkD,GACFlG,GAA0B,SAACzU,GAAD,OAAe8S,GAA2B9S,MACpE0U,GAAgC,SAAC1U,GAAD,OAC9B8S,GAA2B9S,MAE7BsY,EAAchB,IACLsD,GACTvB,GAAyBnH,GAE3BoH,OAmDIjE,GA5CiB,SAACvB,GAAD,OAAgB,WACrC,IAAQnnB,EAAQmnB,EAARnnB,KAoBkD,mBAIQmnB,EALxD+G,mBACoCliB,QAlBF,SAACmiB,GAC3C,IAAQlkB,EAA8EkkB,EAA9ElkB,YAAamkB,EAAiED,EAAjEC,oBAAqBF,EAA4CC,EAA5CD,mBAAoBG,EAAwBF,EAAxBE,oBAM9D,MAJkB,KAAhBpkB,IACCokB,EAAoBriB,SACrBoiB,IACCF,EAAmBliB,QAmBIsiB,CAAoCnH,GAf9B,SAACgH,GACjC,IAAQlkB,EAA0DkkB,EAA1DlkB,YAAamkB,EAA6CD,EAA7CC,oBAAqBC,EAAwBF,EAAxBE,oBAE1C,MADkC,KAAhBpkB,IAAuBokB,EAAoBriB,SAAWoiB,EAe9CG,CAA0BpH,KAIpDhU,GAAkB,SAACE,GAAD,OAAe2Z,GAAiB3Z,EAAW8T,MAC7DjB,GAA0B,SAAC7S,GAAD,OAAe2Z,GAAiB3Z,EAAW8T,MACrEY,GAAgC,SAAC1U,GAAD,mBAAC,eAC5BA,GAD2B,kBAE7BrT,GAAM,OAET2sB,MAtKiB,SAACxF,GACpB,IAAQld,EAAqCkd,EAArCld,YAAamkB,EAAwBjH,EAAxBiH,oBAEfxF,EAAkB,SAAC5oB,GAAD,OACtBkoB,EAAc,2BACTsC,GADQ,4BAEPxqB,EAFO,aAES,MAGJ,KAAhBiK,GAAqC,GAAfA,EACxB2e,EAAgB,UACNwF,GACVxF,EAAgB,cA2JXE,CAAa3B,IAGFqH,CAAe,CACjCtB,WAAYhpB,EACZipB,kBAAmBluB,EACnBnD,KAAM8wB,GACN5iB,KAAM+gB,EACNqC,UAAW3e,EACXzO,IAAKwQ,EACL6c,cAAezG,EACf3c,YAAaF,EACbqkB,oBAAqB9B,GACrB4B,mBAAoBjC,EACpBoC,oBAAqBrC,IAGjByC,GAAkC7gB,uBACtC,gBAAG3D,EAAH,EAAGA,YAAaykB,EAAhB,EAAgBA,gBAAiBvB,EAAjC,EAAiCA,kBAAmBntB,EAApD,EAAoDA,IAAK2uB,EAAzD,EAAyDA,cAAerH,EAAxE,EAAwEA,UAAxE,OAAwF,SACtFjU,GAEA,IAAMub,EAAQ,2BACTvb,GADS,kBAEXrT,EAAM,CACL+J,OAAQE,EACRshB,WAAYmD,EACZzvB,aAAckuB,KAMlB,MAHkB,UAAd7F,GACFmG,OAAOC,OAAOkB,EAAS5uB,GAAM,CAAE4mB,WAAY+H,IAEtCC,KAET,IAGIC,GAA+BjhB,uBAAY,WAS/C,OAAO6gB,GARa,CAClBxkB,YAAaF,EACb2kB,gBAAiBnD,EACjB4B,kBAAmBluB,EACnBe,IAAKwQ,EACLme,cAAe/H,EACfU,UAAW7Y,MAGZ,CAACggB,GAAiC1kB,EAAQwhB,EAAY/a,EAAMoW,EAAYnY,EAAMxP,IAMjF,OAJA4M,qBAAU,WACRuf,GAAkC,SAAC/X,GAAD,OAAewb,KAA+Bxb,QAC/E,CAAC+X,EAAmCyD,KAEhC,CACL5G,EACAle,EACA2hB,EACA9E,EACA2E,EACAtsB,EACA+sB,EACAC,EACA,CACEF,gBACAQ,yBACAC,6BACAC,8BACAkB,iBACAG,gBACAlL,sBACAC,mBAjHuB,kBAAM8I,EAAchB,IAkH3CjC,kBCvSSr2B,GA/CGC,aAAW,SAACC,GAAD,cAAY,CACvCu8B,gBAAgB,2BACXv8B,EAAMgC,iBAAiB,CAAE6I,aAAc,MAD7B,IAEb7G,QAAS,OACT9C,eAAgB,aAChBuB,WAAY,aAEdurB,SAAU,CACRnmB,aAAc,MACd3D,YAAa,MACbhB,MAAO,eAETs5B,WAAY,CACV9zB,UAAW,YAEbgZ,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD4xB,qBAAsBz8B,EAAMgC,iBAAiB,CAAEkB,MAAO,MACtDw5B,aAAW,GACT70B,aAAc,OADL,cAER7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UAHA,cAKRlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UANA,cAQRlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UATA,GAYXwqB,uBAAuB,2BAClB1tB,EAAMgC,iBAAiB,CAAE6I,aAAc,MADtB,IAEpB+W,UAAW,qCACX1e,MAAO,OACPrC,OAAQ,MACRmb,UAAW,SAEb8F,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,GAQR8jB,SAAU,CAAEjd,WAAY,WCxBpB4yB,GAAY,SAAC,GAAqE,IAAnEx7B,EAAkE,EAAlEA,UAAW42B,EAAuD,EAAvDA,UAAWvE,EAA4C,EAA5CA,YAAawE,EAA+B,EAA/BA,yBAChDj3B,EAAUjB,KAChB,EAoBI2gB,GAAQsX,EAAWvE,EAAawE,GApBpC,oBACEtC,EADF,KAEEle,EAFF,KAGE2hB,EAHF,KAIE9E,EAJF,KAKE2E,EALF,KAMEtsB,EANF,KAOE+sB,EAPF,KAQEC,EARF,YAUIF,EAVJ,EAUIA,cACAQ,EAXJ,EAWIA,sBACAC,EAZJ,EAYIA,0BACAC,EAbJ,EAaIA,2BACAkB,EAdJ,EAcIA,cACAG,EAfJ,EAeIA,aACAlL,EAhBJ,EAgBIA,mBACAC,EAjBJ,EAiBIA,mBACA6F,EAlBJ,EAkBIA,YAGI+B,EAAuCxC,EAAvCwC,eAAgBC,EAAuBzC,EAAvByC,mBAChBxmB,EAAUomB,EAAVpmB,MAqDR,OACE,eAAC,GAAD,CAAexQ,UAAWA,EAA1B,UACE,cAAC,GAAD,CAAcgyB,UAAWgG,EAAWd,KAApC,SACE,cAAC,GAAD,CACE92B,KAAM43B,EAAW53B,KACjB8uB,mBAAoBA,EACpBC,mBAAoBA,MAGxB,cAACtvB,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXvB,eAAe,gBACfoB,KAAK,SACLnB,UAAWJ,EAAQ67B,uBALrB,SAOE,eAAC57B,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAAgBuB,WAAW,aAAaH,KAAK,SAA5E,UACE,cAAC,GAAD,CACEI,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ2gB,iBAC1CngB,KAAI,mBAAcoQ,KAEpB,cAAC,GAAD,CAAYjQ,KAAK,SAASsF,UAAW,cAAC,KAAD,IAAe3C,QAAS+2B,OAE/D,cAACp6B,EAAA,EAAD,CAAMC,WAAS,EAAf,SA5EkB,WACxB,IAAM47B,EAAiB,CACrB,cAAC,GAAD,CAEElrB,MAAM,aACN9H,YAAY,kBACZ1I,UAAWJ,EAAQ2gB,gBACnBhH,MAAOlD,EACPqD,cAAemf,EACfrf,gBAAiBud,EACjB1X,kBAAmBzf,EAAQ+gB,UAPvB,WAUFgb,EAAc,GACpB,OAAQ/E,EAAS,MACf,IAAK,YACH+E,EAAYhgB,KACV,cAAC,GAAD,CAEEnL,MAAM,aACNxQ,UAAWJ,EAAQ2gB,gBACnBwF,oBAAqBnmB,EAAQ27B,YAC7BhiB,MAAOlD,EACP3N,YAAY,YACZgR,cAAemf,EACfrf,gBAAiBud,EACjB9S,WAAY,CAAEvhB,IAAK,IAAU0iB,cAAe,GAC5CjlB,IAAKm4B,GATD,oBAYR,MACF,IAAK,UACHqD,EAAYhgB,KAAK+f,GACjB,MACF,IAAK,QACHC,EAAYhgB,KAAK+f,GACjBC,EAAYhgB,KACV,cAAC9b,EAAA,EAAD,CAAMC,WAAS,EAACoB,MAAI,EAACE,GAAI,GAAIkd,GAAI,EAAjC,SACE,cAAC,GAAD,CACEte,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQg8B,YACjDzF,MAAOjD,EACPxZ,cAAe,SAACyc,GAAD,OAAWkC,EAAclC,IACxCV,QAAS,GACTt1B,IAAKo4B,KAN+B,mBAW9C,OAAOoD,EA4BgBE,KACjB,cAAC,GAAD,CACEpZ,WAAW,SACXqZ,OAAO,aACPviB,MAAOse,EACPne,cAAeof,EACf94B,UAAWJ,EAAQ2gB,gBACnB/G,gBAAiBwd,IAEnB,cAAC,GAAD,CACExmB,MAAM,iBACNurB,aAAa,eACbrzB,YAAY,sBACZ1I,UAAWJ,EAAQ2gB,gBACnBhH,MAAOhO,EACPmO,cAAeqf,EACf1Z,kBAAmBzf,EAAQ+gB,WAEC,KAA7BiW,EAAS,aACR,cAAC,GAAD,CAAYpmB,MAAM,kBAAexQ,UAAWJ,EAAQ2gB,gBAApD,SACE,cAACtgB,EAAA,EAAD,CAAYsB,QAAQ,QAAQqsB,MAAM,OAAlC,SACGgJ,EAAS,qBAMpB,cAAC/2B,EAAA,EAAD,CAAMG,UAAWJ,EAAQ2sB,yBACzB,eAAC1sB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,SAASvB,eAAe,gBAAnD,UACE,cAAC,GAAD,CAAYQ,KAAK,SAASsF,UAAW,cAAC,KAAD,IAAuB3C,QAASk3B,IACrE,cAAC,EAAD,CACEp6B,UAAWJ,EAAQy7B,WACnBj7B,KAAK,kBACL8C,QAAS8xB,WAOJx0B,OAAM8Y,KAAKkiB,ICzJXQ,GAXa,SAACzvB,GAC3B,IAAM0vB,EAAM,GACZ,IAAK,IAAI3vB,KAAOC,EACd,GAAY,kBAARD,EAAyB,CAC3B,IAAM4vB,EAAc3vB,EAAID,GACxB2vB,EAAItgB,KAAKugB,GAGb,OAAOD,GCFME,GANE,SAAC5vB,GAChB,IAAI6vB,EAAc7vB,EAElB,cADO6vB,EAAW,cACXA,G,qBCyaM9c,GAtaC,SAACnf,EAAKynB,GAAuB,IAAD,EACpCyU,GAAiB,mBACpB,aAAe,CACdvf,KAAM,aACN7Z,MAAO,cACP8X,KAAM,YACNzE,KAAM,OACN2e,YACE,sLAPiB,cASpB,oBAAsB,CACrBnY,KAAM,oBACN7Z,MAAO,wBACP8X,KAAM,UACNka,YACE,yJAdiB,cAgBpB,YAAc,CACbnY,KAAM,YACN7Z,MAAO,0BACP8X,KAAM,QACNka,YACE,iVArBiB,cAuBpB,aAAe,CACdnY,KAAM,aACN7Z,MAAO,cACP8X,KAAM,YACNzE,KAAM,IACN2e,YACE,+IA7BiB,cA+BpB,kBAAoB,CACnBnY,KAAM,kBACN7Z,MAAO,KACP8X,KAAM,YACNzE,KAAM,MACN2e,YACE,sRArCiB,cAuCpB,OAAS,CACRnY,KAAM,OACN7Z,MAAO,OACP8X,KAAM,YACNzE,KAAM,MACN2e,YAAa,uEA5CM,GAgDjBgC,EAAoBxO,mBACxB,iBAAO,CACLyO,MAAM,EACNoF,kBAAkB,EAClBC,eAAe,EACfn8B,KAAM,MAER,IAGF,EAA4Cmf,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBACd+c,EAAgBhd,EAAhBgd,YAEA5C,EAA4C4C,EAA5C5C,cAAkB6C,EAA1B,YAAoDD,EAApD,IAEA,EAAgD13B,mBAAS23B,GAAzD,oBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAwC73B,mBAAS80B,GAAjD,oBAAOgD,EAAP,KAAqBC,EAArB,KAEA,EAAgD/3B,mBAASu3B,GAAzD,oBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAAkDj4B,qBAAlD,oBAAOk4B,EAAP,KAA0BC,EAA1B,KACA,EAAgEn4B,qBAAhE,oBAAOo4B,EAAP,KAAiCC,EAAjC,KACA,EAAgDr4B,qBAAhD,oBAAOs4B,EAAP,KAAyBC,EAAzB,KACA,EAAgEv4B,mBAAS,IAAzE,oBAAOw4B,EAAP,KAAiCC,EAAjC,KACA,EAAoCz4B,mBAASmyB,GAA7C,oBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAAoCnzB,mBAAS,GAA7C,oBAAO04B,EAAP,KAAmBC,EAAnB,KACA,EAAwB34B,mBAAS,GAAjC,oBAAO2R,EAAP,KAAainB,GAAb,KACA,GAAwC54B,oBAAS,GAAjD,sBAAO8kB,GAAP,MAAqBC,GAArB,MAEM8T,GAAsBzjB,uBAAY,WACtCuF,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,IAEhB6c,YAAa,CACX5C,eAAe,UAGlB,CAACna,IAEEme,GAA0B1jB,uBAC9B,SAAC2jB,GACCpe,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,IAEhB6c,YAAY,eACPqB,EAAKle,EAAS,qBAIvB,CAACF,IAGGqe,GAAgC5jB,uBAAY,SAAC3N,GACjD,IAAM0a,EAAW,GACjB,IAAK,IAAI3a,KAAOC,EACd0a,EAAS3a,IAAO,EAElB,OAAO2a,IACN,IAEG8W,GAAkB,WACtBJ,KACAhB,EAAoB,IACpBU,EAAoB,IACpBE,EAA4B,IAC5BE,EAAc,GACdC,GAAQ,GACRb,GAAgB,SAACld,GAAD,OAAgBA,MAG5B8S,GAA6B,SAACuL,EAAclhB,GAChD,IAAMmK,EAAQ,eAAQ+W,GAEtB,cADO/W,EAASnK,GACTmK,GAGHgX,GAAwB,SAACvL,GAC7BuK,GAAqB,SAACtd,GAAD,mBAAC,eACjBA,GADgB,kBAElB+S,GAAc,OAEjB2K,GAAoB,SAAC1d,GAAD,OAAe8S,GAA2B9S,EAAW+S,MACzE6K,GAA4B,SAAC5d,GAAD,OAAe8S,GAA2B9S,EAAW+S,MACjF+K,GAAc,SAAC9d,GAAD,OAAeA,EAAY,KACzC+d,GAAQ,IA+BJ9O,GA5BkB,SAAC,GAAD,IAAGsP,EAAH,EAAGA,uBAAwBC,EAA3B,EAA2BA,iBAAkBC,EAA7C,EAA6CA,gBAA7C,OAAmE,WACzF,IASMC,EATwB,SAAC9xB,GAC7B,IAAK,IAAID,KAAOC,EAAK,CACnB,IAAM+xB,EAAe/xB,EAAID,GACzB,GAA+B,KAA3BgyB,EAAY,QAAsD,KAAjCA,EAAY,aAC/C,OAAO,EAGX,OAAO,EAEyBC,CAAsBL,GAIxD,IAFsB,IAApBE,IACCC,GAA6BtE,OAAOyE,KAAKL,GAAkBrtB,OAAS,GAC/C,CAGtBmnB,GAAc,SAACtY,GAAD,mBAAC,eACVA,GADS,IAEZuX,MAAM,EACNqF,eAAe,EACfn8B,KALA,oMAQF29B,MAIiBU,CAAgB,CACnCP,uBAAwBZ,EACxBa,iBAAkBzB,EAClB0B,gBAAiBxB,IAcb1N,GAXwB,SAAC,GAAD,IAAGkI,EAAH,EAAGA,cAAe1E,EAAlB,EAAkBA,YAAlB,OAAoC,WAChE,IAAQ6J,EAAoCnF,EAApCmF,cAAeD,EAAqBlF,EAArBkF,kBACD,IAAlBC,GACFwB,KACA9F,EAAchB,KACgB,IAArBqF,IACT2B,GAAsBvL,GACtBuF,EAAchB,KAISyH,CAAsB,CAC/CtH,cAAeY,EACftF,YAAawK,IAmGTyB,GA9FsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,sBAAuBV,EAA1B,EAA0BA,uBAA1B,OAAuD,SAAC/4B,GAClF,IAQMo1B,GAA2C,IAAzBp1B,EAAM+W,OAAOgS,QAC/B2Q,EAAmB15B,EAAM+W,OAAOY,KACtC,EAA2C8hB,EAAsBC,GAAzD57B,EAAR,EAAQA,MAAO8X,EAAf,EAAeA,KAAMka,EAArB,EAAqBA,YAAa3e,EAAlC,EAAkCA,KAE5B+nB,EAZoC,SAACS,GACzC,GAAIA,EAAc,CAChB,IAAQzoB,EAAyByoB,EAAzBzoB,OAAQ9K,EAAiBuzB,EAAjBvzB,aAEhB,MAD+B,KAAX8K,GAAkC,KAAjB9K,GASPwzB,CADDb,EAAuBW,IAGxD1B,EAA4B0B,GAuDxBtE,EACE8D,EACFpG,GAAc,SAACtY,GAAD,OAvDeqf,EAuDwB/7B,EAvDT,SAAC0c,GAC/C,IAAMsf,EAA+B,yCAAqCD,EAArC,8DACrC,OAAO,2BACFrf,GADL,IAEEuX,MAAM,EACNoF,kBAAkB,EAClBl8B,KAAM6+B,MAiDsDtf,GAvDhC,IAACqf,KAwDxBf,GAAsBY,IAE7B5B,GAAqB,SAACtd,GAAD,OAhDe2e,EAiDLO,EAjDsB,SAAClf,GAAD,mBAAC,eACnDA,GADkD,kBAEpD2e,EAAen5B,EAAM+W,OAAOgS,YA+CoBvO,GAjDd,IAAC2e,KAmDpCjB,GAAoB,SAAC1d,GAAD,OA9CM,SAAC,GAAD,IAC1Bqf,EAD0B,EAC1BA,WACAV,EAF0B,EAE1BA,aACA1K,EAH0B,EAG1BA,UACAC,EAJ0B,EAI1BA,iBACA/V,EAL0B,EAK1BA,gBAL0B,OAMtB,SAAC6B,GACL,IAAMuf,EAAoB,CACxBpiB,KAAMwhB,EACN9tB,MAAOwuB,EACPjkB,KAAM6Y,EACNqB,YAAapB,GASf,MAPkB,cAAdD,GACFmG,OAAOC,OAAOkF,EAAmB,CAAE5oB,KAAMwH,IAE7B,2BACT6B,GADS,kBAEX2e,EAAeY,KA6BhBC,CAAoB,CAClBH,WAAY/7B,EACZq7B,aAAcO,EACdjL,UAAW7Y,EACX8Y,iBAAkBoB,EAClBnX,gBAAiBxH,GALnB6oB,CAMGxf,MAEL4d,GAA4B,SAAC5d,GAAD,OAhCC2e,EAiCLO,EAjCsB,SAAClf,GAC/C,IAAMyf,EAAqB,CACzB/oB,OAAQ,GACRwhB,WAAY,IAAIpc,KAChBlQ,aAAc,IAShB,MAPa,UAATwP,GACFgf,OAAOC,OAAOoF,EAAoB,CAAElM,WAAY,KAEpC,2BACTvT,GADS,kBAEX2e,EAAec,MAsBwBzf,GAjCd,IAAC2e,KAmC7Bb,GAAc,SAAC9d,GAAD,OAAeA,EAAY,OAIpB0f,CAAoB,CAC3CT,sBAAuB9B,EACvBwC,WAAYlC,EACZc,uBAAwBZ,IAmBpBiC,GAAuB9W,mBAC3B,iBAAO,CACLhJ,kBAAmBme,GACnBxJ,0BAA2B2I,EAC3B1I,gCAAiC4I,EACjC1F,0BAA2B8F,EAC3B7F,oBAAqBiG,EACrBhG,cAAeiG,GACfhG,kCAAmC6F,EACnC/K,0BAA2BmK,KAE7B,CAACiB,KAGG4B,GAAsB/W,mBAC1B,iBAAO,CACL2L,0BAA2B2I,EAC3B1I,gCAAiC4I,KAEnC,IAGIwC,GAA4BhX,mBAChC,iBAAO,CACLhJ,kBAAmBme,GACnBpL,0BAA2BmK,KAE7B,CAACiB,KAGG8B,GAA2BjX,mBAAQ,kBAAMuT,GAAoBU,KAAmB,CACpFA,IAGIiD,GA9C0B,SAACpzB,GAC/B,IAAM0vB,EAAM,GACZ,IAAK,IAAI3vB,KAAOC,EAAK,CACnB,IAAM2vB,EAAc3vB,EAAID,GACxB2vB,EAAItgB,KAAK,CACPmB,KAAMof,EAAYpf,KAClB7Z,MAAOi5B,EAAYj5B,QAGvB,OAAOg5B,EAqCoB2D,CAAwB9C,GAE/C+C,GAA6B3lB,uBAAY,YAA0B,IAAvB4lB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjDC,EAAmC,IAAVF,EAE7BC,EAASznB,UADP0nB,IAKH,IAEGnU,GAA2B3R,uBAAY,SAAC+lB,GAE1CpW,KADEoW,KAKH,IA2CH,OAzCA9nB,qBAAU,WACR0nB,GAA2B,CAAEC,MAAOtC,EAAYuC,SAAU5/B,MACzD,CAACq9B,EAAYr9B,EAAK0/B,KAErB1nB,qBAAU,WACR0T,GAAyBjE,KACxB,CAACA,EAAmBiE,KAEvB1T,qBAAU,WACJ2kB,GACFG,EAAqBa,GAA8BhB,MAEpD,CAACA,EAAkBgB,GAA+Bb,IAErD9kB,qBAAU,WACJyhB,GACFiD,EAAgBjD,KAEjB,CAACA,IAEJzhB,qBAAU,WACJykB,IACFK,EAAqBa,GAA8BhB,IACnDH,EAAoBR,GAASK,IAC7B/c,GAAkB,SAACE,GAAD,mBAAC,eACdA,GADa,kBAEf,cAFe,aAGdia,eAAe,GACZuC,GAASK,YAIjB,CACDI,EACAnd,EACAqd,EACAgB,GACAnB,EACAH,IAGK,CACL,CACEQ,oBACA2C,wBACArC,2BACAF,mBACA3mB,OACAmT,gBACAgT,eACA5E,aACAwF,aACAkC,6BAEF,CACE9Q,gBACAM,sBACAC,mBApOuB,kBAAM8I,EAAchB,IAqO3C0H,oBACAuB,yBAhI6B,SAAC/6B,EAAOoU,GACvCmkB,GAAQnkB,IAgINyiB,uBACAuD,wBACAC,uBACAC,gCClZS9gC,GAnBGC,aAAW,SAACC,GAAD,MAAY,CACvCshC,gBAAiB,CAAEp+B,MAAO,QAC1Bwe,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxDypB,aAAct0B,EAAMgC,iBAAiB,CAAEga,UAAW,KAClD+M,kBAAkB,aAChB1d,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAC9BV,EAAMgC,iBAAiB,CAAEkH,QAAS,GAAI8S,UAAW,MAEtDD,UAAW,CACTja,MAAO9B,EAAMQ,QAAQuB,MAAMrB,KAC3B8c,UAAW,OACXvb,YAAa,OACboH,WAAY,OACZ2S,UAAW,WCATulB,GAAiB,SAAC,EAAkCjgC,GAAS,IAAzCynB,EAAwC,EAAxCA,kBAAmB5nB,EAAqB,EAArBA,UACrCJ,EAAUjB,KAEhB,EAwBI2gB,GAAQnf,EAAKynB,GAxBjB,2BAEIoV,EAFJ,EAEIA,kBACA2C,EAHJ,EAGIA,qBACArC,EAJJ,EAIIA,yBACAF,EALJ,EAKIA,iBACA3mB,EANJ,EAMIA,KACAmT,EAPJ,EAOIA,aACAgT,EARJ,EAQIA,aACA5E,EATJ,EASIA,WACAwF,EAVJ,EAUIA,WACAkC,EAXJ,EAWIA,yBAXJ,OAcI9Q,EAdJ,EAcIA,aACAM,EAfJ,EAeIA,mBACAC,EAhBJ,EAgBIA,mBACAwP,EAjBJ,EAiBIA,iBACAuB,EAlBJ,EAkBIA,yBACAlE,EAnBJ,EAmBIA,oBACAuD,EApBJ,EAoBIA,qBACAC,EArBJ,EAqBIA,oBACAC,EAtBJ,EAsBIA,0BAIEY,EAAsBrE,EAAoBoB,GAE1CkD,EAAkB,GACxB,GAAmC,IAA/BD,EAAoBvvB,OAAc,CACpC,IAAMyvB,EAAeF,EAAoB,GACjCvjB,EAASyjB,EAATzjB,KACRwjB,EAAgB3kB,KACd,cAAC,GAAD,CAEE3b,UAAWJ,EAAQ2gB,gBACnBqW,UAAW2J,EACXlO,YAAakN,EACb1I,yBAA0ByG,EAAyBxgB,IAJ9CA,SAOJ,GAAIujB,EAAoBvvB,OAAS,EAAG,CACzC,IAAMyvB,EAAeF,EAAoB5pB,EAAO,GACxCqG,EAASyjB,EAATzjB,KACRwjB,EAAgB3kB,KACd,cAAC,GAAD,CAEE3b,UAAWJ,EAAQ2gB,gBACnBqW,UAAW2J,EACXlO,YAAakN,EACb1I,yBAA0ByG,EAAyBxgB,IAJ9CA,IAQX,OACE,eAAC,GAAD,CACE4R,WAAW,YACX1uB,UAAWA,EACX2uB,YAAaiO,EACbhO,aAAcA,EAJhB,UAME,cAAC,GAAD,CAAcoD,UAAWgG,EAAWd,KAApC,SACE,cAAC,GAAD,CACE92B,KAAM43B,EAAW53B,KACjB8uB,mBAAoBA,EACpBC,mBAAoBA,MAGxB,eAACtvB,EAAA,EAAD,CACEC,WAAS,EACTuB,UAAU,SACVrB,UAAW4pB,EAAehqB,EAAQgoB,kBAAoB,KAHxD,UAKE,cAAC,GAAD,CACEsJ,cAAeyO,EACfjmB,cAAeilB,EACfxN,gBAAiB6L,EACjBh9B,UAAWJ,EAAQugC,gBACnB9O,QAAM,IAER,cAAC,GAAD,CACErxB,UAAWw9B,GAAc,EAAI59B,EAAQ2gB,gBAAkB,KACvD8R,YAAamN,IAEdc,EACA9C,EAAa,GACZ,cAAC,GAAD,CACEsC,MAAOtC,EACP/mB,KAAMA,EACN9V,MAAM,UACN6/B,iBAAe,EACfC,gBAAc,EACdlgC,KAAK,QACLsb,SAAUqkB,OAIftW,GACC,cAAC3pB,EAAA,EAAD,CACEsB,QAAQ,UACRvB,UAAWkC,YACTtC,EAAQgb,UACR8kB,EAAyB5uB,OAAS,GAAKlR,EAAQ2gB,iBAJnD,2RAaDmf,EAAyB5uB,QAAU,GAClC,cAAC,GAAD,CACEwiB,mBAAoBoM,EACpB1/B,UAAY4pB,EAAsC,KAAvBhqB,EAAQuzB,aACnCd,YAAaoN,QAORj/B,OAAMC,WAAW2/B,ICvIjBzhC,GALGC,aAAW,SAACC,GAAD,MAAY,CACvC0hB,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxDg3B,sBAAuB7hC,EAAMgC,iBAAiB,CAAE6I,aAAc,SCI1Di3B,GAAmB,SAAC,EAA8CxgC,GAAS,IAArDH,EAAoD,EAApDA,UAAWwZ,EAAyC,EAAzCA,gBAAiBoQ,EAAwB,EAAxBA,aAChDhqB,EAAUjB,KACRiiC,EAAyDpnB,EAAzDonB,uBAAwBC,EAAiCrnB,EAAjCqnB,6BACxBC,EAAyDlX,EAAzDkX,yBAA0BC,EAA+BnX,EAA/BmX,2BAC1BC,EAAmD7gC,EAAnD6gC,gBAAiBC,EAAkC9gC,EAAlC8gC,8BACzB,OACE,eAACphC,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWA,EAA3B,UACE,cAAC,GAAD,CACEA,UAAWJ,EAAQ8gC,sBACnB9Y,kBAAmBkZ,EACnBtnB,gBAAiBonB,EACjBzgC,IAAK6gC,IAEP,cAAC,GAAD,CACEhhC,UAAWJ,EAAQ8gC,sBACnBlnB,gBAAiBqnB,IAEnB,cAAC,GAAD,CACEjZ,kBAAmBmZ,EACnB5gC,IAAK8gC,QAKEzgC,OAAM8Y,KAAK9Y,IAAMC,WAAWkgC,K,oCCwG5BrhB,GArIC,SAACyU,EAAcmN,EAAwBzN,GACrD,IAqCwBD,EArClB2N,EAAqB1Y,mBAAQ,WAEjC,MAAO,CACLmR,cAFqDnG,EAA/CmG,cAGNruB,aAHqDkoB,EAAhCloB,aAIrB61B,WAJF,YAAuD3N,EAAvD,OAMC,CAACA,IAEImG,EAA4CuH,EAA5CvH,cAAeruB,EAA6B41B,EAA7B51B,aAAc61B,EAAeD,EAAfC,WAErC,EAAwCt8B,mBAAS80B,GAAjD,oBAAOgD,EAAP,KAAqBC,EAArB,KACA,EAAoD/3B,oBAAS,GAA7D,oBAAOu8B,EAAP,KAA2BC,EAA3B,KACA,EAAgEx8B,qBAAhE,oBAAOy8B,EAAP,KAAiCC,EAAjC,KACA,EAAoD18B,qBAApD,oBAAO28B,EAAP,KAA2BC,EAA3B,KAEMC,EAAwD,IAAnC5H,OAAOyE,KAAK4C,GAAYtwB,OAC7C8wB,GACa,IAAjBhF,IAA0B6E,GAAsBF,GAc5CM,EAZ2B,SAAC,GAAoC,IAAlCrO,EAAiC,EAAjCA,UAAWsO,EAAsB,EAAtBA,gBACzCC,EAAa,GACjB,GAAIvO,EACF,IAAK,IAAIlnB,KAAOw1B,EACdC,EAAWz1B,IAAO,EAKtB,OAFAy1B,EAAU,eAAoB,EAC9BA,EAAU,aAAmB,GACtBA,EAGaC,CAAyB,CAC7CxO,UAAWmO,EACXG,gBAAiBV,IAWbxS,GARkB4E,EAQYoO,EARE,WAChCpO,EACF8N,GAAsB,GAEtBzE,GAAgB,SAACld,GAAD,OAAgBA,OAM9BF,EAAoBvF,uBACxB,SAAC+nB,GACClO,GAAa,SAACpU,GACZ,IAAMuiB,EAAaviB,EAAS,oBACtBwiB,EAAYD,EAAWhB,GAY7B,OAXgB,2BACXvhB,GADW,kBAEb,sBAFa,2BAGTuiB,GAHS,kBAIXhB,EAJW,2BAKPiB,GALO,kBAMT,iBAAkB,GAChBF,YAOb,CAACf,EAAwBnN,IAGrBnQ,EAA8B9D,cAClC,SAACvG,GACCkG,EAAkB,eAAG,eAAiBlG,MAExC,IACA,CAAEwG,UAAU,IA4Cd,OAXA5H,qBAAU,WACJyhB,GACFiD,EAAgBjD,KAEjB,CAACA,IACJzhB,qBAAU,WACJykB,GACFnd,EAAkBgU,KAEnB,CAAChU,EAAmBgU,EAAYmJ,IAE5B,CACL,CAAEA,eAAcyE,qBAAoBM,qBAAoBP,aAAY71B,gBACpE,CACEqjB,eACAM,mBAzCuB,WACzBzP,EAAkBoiB,GAClBhF,GAAgB,GAChByE,GAAsB,IAuCpBnS,mBApCuB,WACzBmS,GAAsB,IAoCpB3C,iBA/CqB,SAACx5B,GACxBsa,EAAkB,eAAGta,EAAM+W,OAAOY,KAAO3X,EAAM+W,OAAOgS,WA+CpDkU,6BA3BiC,SAACvf,GACpC,IAAK,IAAMvW,KAAOuW,EAChB,IAAoB,IAAhBA,EAAOvW,GACT,OAAOo1B,GAAsB,GAGjC,OAAOA,GAAsB,IAsB3B9d,8BACAye,sBApC0B,SAAC9oB,GAG3BioB,KAFiC,KAAVjoB,QC/Ed5a,GAfGC,aAAW,SAACC,GAAD,YAAY,CACvC8hB,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,OACP2H,aAAc,SAHV,cAKL7K,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP2H,aAAc,SAPV,GAUR44B,UAAWzjC,EAAMgC,iBAAiB,CAAEga,UAAW,KAC/CslB,gBAAiB,CAAEp+B,MAAO,YCsDbwgC,GA1DwB,SAAC,GASjC,IARL7T,EAQI,EARJA,WACAwC,EAOI,EAPJA,cACA6C,EAMI,EANJA,aACAmN,EAKI,EALJA,uBACAzN,EAII,EAJJA,WACA+O,EAGI,EAHJA,oBACAC,EAEI,EAFJA,kBACAziC,EACI,EADJA,UAEMJ,EAAUjB,KAChB,EAWI2gB,GAAQyU,EAAcmN,EAAwBzN,GAXlD,2BACImJ,EADJ,EACIA,aAAcyE,EADlB,EACkBA,mBAAoBM,EADtC,EACsCA,mBAAoBP,EAD1D,EAC0DA,WAAY71B,EADtE,EACsEA,aADtE,OAGIqjB,EAHJ,EAGIA,aACAM,EAJJ,EAIIA,mBACAC,EALJ,EAKIA,mBACAwP,EANJ,EAMIA,iBACAyD,EAPJ,EAOIA,6BACAxe,EARJ,EAQIA,4BACAye,EATJ,EASIA,sBAIJ,OACE,eAAC,GAAD,CACE3T,WAAU,UAAKA,EAAL,KACV1uB,UAAWA,EACX2uB,YAAaiO,EACbhO,aAAcA,EAJhB,UAME,cAAC,GAAD,CAAcoD,UAAWqP,EAAzB,SACE,cAAC,GAAD,CACEjhC,KAAI,yCAAoCsuB,EAApC,8DACJQ,mBAAoBA,EACpBC,mBAAoBA,MAGvBwS,EACC,cAAC,GAAD,CACEzQ,cAAeA,EACfxX,cAAeilB,EACfxN,gBAAiBiQ,EACjBphC,UAAWJ,EAAQugC,gBACnBnQ,qBAAsBoS,IAEtB,KACJ,cAAC,GAAD,CACE15B,YAAa85B,EACbxiC,UAAWkC,YAAKtC,EAAQ+gB,SAAU8hB,GAClClpB,MAAOhO,EACPmO,cAAekK,EACfrF,oBAAqB8jB,QCxBdK,GApCG,SAAC,GAAkC,IAepBC,EAfZtQ,EAA+B,EAA/BA,YAAauQ,EAAkB,EAAlBA,YAChC,EAAkC99B,oBAAS,GAA3C,oBAAOwtB,EAAP,KAAkBC,EAAlB,KAEQsQ,EAAwCxQ,EAAxCwQ,eAAgBC,EAAwBzQ,EAAxByQ,oBAElBrQ,EAA6B,SAAC9S,EAAW7C,GAC7C,IAAMmK,EAAQ,eAAQtH,GAEtB,cADOsH,EAASnK,GACTmK,GAkBT,MAAO,CACLqL,EACA,CACEyQ,mBAlBuB,WACzBxQ,GAAa,IAkBXrD,oBAf2ByT,EAMkBC,EANE,WACjDE,GAAoB,SAACnjB,GAAD,OAAe8S,EAA2B9S,EAAWgjB,MACzEE,GAAe,SAACljB,GAAD,OAAe8S,EAA2B9S,EAAWgjB,MACpEpQ,GAAa,KAaXpD,mBARuB,WACzBoD,GAAa,OCwBF5zB,GAhDGC,aAAW,SAACC,GAAD,cAAY,CACvCguB,SAAU,CACR9qB,MAAO,cACP2E,aAAc,MACd3D,YAAa,OAEf+pB,kBAAmB,CACjB/qB,MAAO,cACPD,WAAY,IACZiB,YAAa,OAEf0N,aAAa,2BACR5R,EAAMgC,iBAAiB,CAAE6I,aAAc,MADhC,IAEV+W,UAAW,uCAEbuiB,4BAA4B,eACvBnkC,EAAMgC,iBAAiB,CAAEgI,cAAe,MAE7C+jB,aAAc,CAAEvQ,UAAW,QAC3BqQ,wBAAyB7tB,EAAMgC,iBAAiB,CAAE6I,aAAc,GAAId,WAAY,IAChF+jB,yBAAyB,2BACpB9tB,EAAMgC,iBAAiB,CAAE+H,WAAY,KADlB,IAEtBV,WAAY,SAEdqY,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxDkpB,SAAU,CACRC,WAAY,MACZC,aAAc,aACdC,QAAS,QAEXkQ,WAAS,mBACNpkC,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFF,cAINlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SALF,GAQTwJ,cAAY,mBACT1M,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UAFC,cAITlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,UALC,OC2FCmhC,GAvHO,SAAC,GAA2C,IAAzCljC,EAAwC,EAAxCA,UAAWqyB,EAA6B,EAA7BA,YAAatnB,EAAgB,EAAhBA,UACzCnL,EAAUjB,KACRyS,EAAmErG,EAAnEqG,KAAMC,EAA6DtG,EAA7DsG,sBAAuBC,EAAsCvG,EAAtCuG,oBAAqB/F,EAAiBR,EAAjBQ,aACpD43B,EACa,KAAjB53B,EAAsB3L,EAAQ2L,aAAe3L,EAAQqjC,UAEvD,EAAoFP,GAAU,CAC5FrQ,cACAuQ,YAAaxxB,IAFf,oBAAOkhB,EAAP,YAAoByQ,EAApB,EAAoBA,mBAAoB7T,EAAxC,EAAwCA,mBAAoBC,EAA5D,EAA4DA,mBAK5D,OACE,eAAC,GAAD,CAAenvB,UAAWA,EAA1B,UACE,cAAC,GAAD,CAAcgyB,UAAWM,EAAzB,SACE,cAAC,GAAD,CACElyB,KAAI,0BAAqBgR,EAArB,gFACJ8d,mBAAoBA,EACpBC,mBAAoBA,MAGxB,cAACtvB,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,SAAStB,UAAWJ,EAAQ2gB,gBAAvD,SACE,cAAC,GAAD,CACEhf,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQgtB,cAC1CxsB,KAAI,yBAAiBgR,OAGzB,eAACvR,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,SAA9C,UAC6B,KAA1B+P,GACC,eAACxR,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBqW,GAF7C,SAIE,cAAC,GAAD,CACE5hC,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,aAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YACTtC,EAAQ+sB,yBACR/sB,EAAQgtB,aACRhtB,EAAQgzB,UALZ,SAQGvhB,OAIkB,KAAxBC,GACC,eAACzR,EAAA,EAAD,CAAMC,WAAS,EAACwB,WAAW,aAAaH,KAAK,SAASnB,UAAWJ,EAAQ6Q,aAAzE,UACE,cAAC5Q,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBqW,GAF7C,SAIE,cAAC,GAAD,CACE5hC,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,aAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YACTtC,EAAQ+sB,yBACR/sB,EAAQgtB,aACRhtB,EAAQgzB,UALZ,SAQGthB,OAIW,KAAjB/F,GACC,eAAC1L,EAAA,EAAD,CACEC,WAAS,EACTwB,WAAW,aACXH,KAAK,SACLnB,UAAWkC,YAAKtC,EAAQ6Q,aAAc7Q,EAAQojC,6BAJhD,UAME,cAACnjC,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQktB,kBAAmBqW,GAF7C,SAIE,cAAC,GAAD,CACE5hC,QAAQ,QACRvB,UAAWkC,YAAKtC,EAAQitB,SAAUjtB,EAAQ8sB,yBAC1CtsB,KAAK,qBAGT,cAACH,EAAA,EAAD,CACEsB,QAAQ,QACRvB,UAAWkC,YACTtC,EAAQ+sB,yBACR/sB,EAAQgtB,aACRhtB,EAAQgzB,UALZ,SAQGrnB,UAKT,cAAC1L,EAAA,EAAD,CACEC,WAAS,EACToB,MAAI,EACJkuB,aAAa,WACbrvB,eAAe,WACfC,UAAWJ,EAAQikB,gBALrB,SAOE,cAAC,EAAD,CAAezjB,KAAK,WAAW8C,QAAS6/B,UC/GjCpkC,GAZGC,aAAW,SAACC,GAAD,MAAY,CACvCs0B,aAAct0B,EAAMgC,iBAAiB,CAAEga,UAAW,KAClD0F,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD0pB,eAAgB,CACd,UAAW,CACT,oBAAqB,CACnB1pB,aAAc,aCAhB05B,GAAiB,SAAC,GAAoD,IAAlDpjC,EAAiD,EAAjDA,UAAWszB,EAAsC,EAAtCA,mBAAoBjB,EAAkB,EAAlBA,YACjDzyB,EAAUjB,KACV0kC,EAAyB/P,EAAmBzvB,KAAI,SAAC3C,GACrD,IAAQkQ,EAASlQ,EAATkQ,KACR,OACE,cAAC,GAAD,CAEEpR,UAAWJ,EAAQ2gB,gBACnBxV,UAAW7J,EACXmxB,YAAaA,GAHRjhB,MAQX,OACE,qCACE,cAAC,GAAD,CAEE7P,QAAQ,QACRvB,UAAWkC,YAAKlC,EAAWJ,EAAQ2gB,iBACnCngB,KAAK,6BAHD,uBAKN,cAACP,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASrB,UAAWJ,EAAQwzB,eAAtD,SACGiQ,QAMM7iC,OAAM8Y,KAAK8pB,I,qBCkVX9jB,GAhXC,SAAC,GAA0D,IAAxDmU,EAAuD,EAAvDA,WAAYM,EAA2C,EAA3CA,aAAcnM,EAA6B,EAA7BA,kBAAmBznB,EAAU,EAAVA,IACxD22B,EAAqB,CACzBwM,mBAAmB,EACnBC,sBAAsB,EACtBC,oBAAoB,EACpBC,sBAAsB,GAGhB7J,EAAsCnG,EAAtCmG,cAAkB8J,EAA1B,YAA8CjQ,EAA9C,IACA,EAAwC3uB,mBAAS80B,GAAjD,oBAAOgD,EAAP,KAAqBC,EAArB,KACA,EAAoD/3B,oBAAS,GAA7D,oBAAOu8B,EAAP,KAA2BC,EAA3B,KACA,EAAkCx8B,mBAAS,IAA3C,oBAAO6+B,EAAP,KAAkBC,EAAlB,KACA,EAAgD9+B,qBAAhD,oBAAO++B,EAAP,KAAyBC,EAAzB,KACA,EAAwCh/B,mBAAS,IAAjD,oBAAOyG,EAAP,KAAqB6sB,EAArB,KACA,EAAoEtzB,mBAAS,MAA7E,oBAAOi/B,EAAP,KAAmCC,EAAnC,KACA,EAAgEl/B,mBAAS,MAAzE,oBAAOm/B,EAAP,KAAiCC,EAAjC,KACA,EAAoCp/B,mBAAS4+B,GAA7C,oBAAO7xB,EAAP,KAAmBsyB,EAAnB,KACA,EAAsCr/B,oBAAS,GAA/C,oBAAO2U,EAAP,KAAoB6a,EAApB,KACA,EAAoCxvB,mBAASgyB,GAA7C,oBAAOvC,EAAP,KAAmBC,EAAnB,KACA,EAAwC1vB,oBAAS,GAAjD,oBAAO8kB,GAAP,KAAqBC,GAArB,KAEIua,GAAwBlc,mBAEtBmc,GAAuB,SAACC,GAC5B,IACMC,EAAmC,WAAVD,EACzBE,EAAyB,WAC7BR,EAA8B,MAC9BE,EAA4B,MAC5BN,EAAa,IACbE,EAAoB,MACpB1L,EAAgB,IAChB5D,EAAcsC,GACdxC,GAAe,IATsB,QAAVgQ,GAY3BE,IACAL,EAAc,IACdtH,GAAgB,SAACld,GAAD,OAAgBA,MAIvB4kB,GACTC,KAIEC,GAAsBhM,aAAQsL,EAA4B,IAAItoB,MAC9DipB,GAAuB/L,aAASoL,EAA4B,IAAItoB,KAAK,OAAQ,KAAM,OAInFkpB,IACHF,KACAC,IAC8B,OAA/BX,GAC8B,gBAA9BA,EAEIa,IARoBnM,aAAQwL,EAA0B,IAAIxoB,KAAK,OAAQ,KAAM,QAUpD,OAA7BwoB,GAC4B,gBAA5BA,EAEIY,GAAkC,KAAdlB,EACpBmB,GAAqBrc,mBAAQ,kBAAMuT,GAAoBnqB,KAAa,CAACA,IACrEkzB,GAA4BD,GAAmBh0B,OAAS,EAExDk0B,GAA4C,QAArBnB,EA6BvBoB,GA5B0B,SAAC,GAAD,IAC9B7zB,EAD8B,EAC9BA,KACA8zB,EAF8B,EAE9BA,sBACAC,EAH8B,EAG9BA,aACAC,EAJ8B,EAI9BA,0BACAC,EAL8B,EAK9BA,WACA5L,EAN8B,EAM9BA,kBAN8B,OAO1B,SAAC9Z,GACL,IAAM2lB,EAAqB,SAAC9R,EAAWprB,GACrC,OAAIorB,EACI,GAAN,OAAUprB,EAAK+wB,UAAf,YAA4B/wB,EAAKgxB,WAAa,EAA9C,YAAmDhxB,EAAKixB,eAEjD,IAGLkM,EAAoBD,EAAmBJ,EAAuBC,GAC9DK,EAAkBF,EAAmBF,EAA2BC,GACtE,OAAO,2BACF1lB,GADL,kBAEGvO,EAFH,aAGIA,OACAC,sBAAuBk0B,EACvBj0B,oBAAqBk0B,GACpB,eAAiB/L,MAKIgM,CAAwB,CAClDr0B,KAAMuyB,EACNuB,sBAAuBP,GACvBQ,aAAcpB,EACdqB,0BAA2BJ,GAC3BK,WAAYpB,EACZxK,kBAAmBluB,IA+Cf2a,GAhCc,SAAC,GAAD,IAClB9U,EADkB,EAClBA,KACAqoB,EAFkB,EAElBA,kBACA0L,EAHkB,EAGlBA,aACAD,EAJkB,EAIlBA,sBACAE,EALkB,EAKlBA,0BACAM,EANkB,EAMlBA,oBANkB,OAOd,WACS,KAATt0B,EACFojB,EAAc,2BACTsC,GADQ,IAEX6O,oBAAoB,KAES,KAAtBlM,GAA6C,OAAjB0L,EACrC3Q,EAAc,2BACTsC,GADQ,IAEX8O,4BAA4B,EAC5BC,4BAA4B,KAEpBX,EAKDE,IAA8BM,GACvClR,EAAc,2BACTsC,GADQ,IAEXgP,0BAA0B,KAP5BtR,EAAc,2BACTsC,GADQ,IAEX8O,4BAA4B,MAUjBG,CAAY,CAC3B30B,KAAMuyB,EACNuB,sBAAuBP,GACvBQ,aAAcpB,EACdqB,0BAA2BJ,GAC3BU,oBAAqBd,GACrBnL,kBAAmBluB,IAiBfqjB,GAdkB,SAAC,GAAD,IACtBoX,EADsB,EACtBA,mBACAC,EAFsB,EAEtBA,kBACAC,EAHsB,EAGtBA,4BAHsB,OAIlB,WAEFD,IAAsBC,GAA+BF,GAErD1E,GAAsB,GAEtB+C,GAAqB,QAIJ5F,CAAgB,CACnCuH,mBAAoBnB,GACpBoB,kBAAmBrJ,EACnBsJ,4BAA6BnB,KAoBzBrlB,GAAoB,SAACzH,GAAD,OAAc,SAACsB,GAAD,OAAWtB,EAASsB,KAEtD4sB,GAAuC,kBAC3C3R,GAAc,SAAC7U,GAAD,mBAAC,eACVA,GADS,IAEZimB,4BAA4B,EAC5BC,4BAA4B,QAG1BO,GAA2BtmB,aAAqBJ,GAAkBkkB,GAAe,IAAK,CAC1F7jB,UAAU,IAGN6D,GAA8B9D,cAClC,SAACvG,GACC4sB,KACAzmB,GAAkB0Y,EAAlB1Y,CAAmCnG,KAErC,IACA,CACEwG,UAAU,IAIRsmB,GAA4CvmB,cAChD,SAACvG,GACC4sB,KACAzmB,GAAkBskB,EAAlBtkB,CAAiDnG,KAEnD,IACA,CACEwG,UAAU,IAIRumB,GAA0CxmB,aAC9CJ,GAAkBwkB,GAClB,IACA,CACEnkB,UAAU,IAqCRwmB,GAjCwB,SAAC,GAAD,IAC5BP,EAD4B,EAC5BA,mBACAQ,EAF4B,EAE5BA,kBACA/M,EAH4B,EAG5BA,kBACAyL,EAJ4B,EAI5BA,sBACAK,EAL4B,EAK5BA,kBACAH,EAN4B,EAM5BA,0BACAM,EAP4B,EAO5BA,oBACAF,EAR4B,EAQ5BA,gBAR4B,OASxB,WACJ,IAAMiB,EAAuBT,IAAuBQ,EAAkBluB,QAChEouB,EAAwD,KAAtBjN,GAA4ByL,EAC9DyB,GAAwBvB,GAC1BM,GACAR,IACCvM,aACC6M,EACA,IAAI/pB,KACF8pB,EAAkBlM,cAClBkM,EAAkBnM,WAClBmM,EAAkBpM,YAKtBsN,GAAwBC,GAAmCC,GAC7DxC,GAAc,SAACxkB,GAAD,OAAeslB,GAAoBtlB,MACjDoU,GAAa,SAACpU,GAAD,OAhKc,SAACA,GAC9B,IAAMuiB,EAAaviB,EAAS,WAQ5B,OAPc,2BACTA,GADS,kBAEX,aAFW,aAGVia,eAAe,GACZqL,GAAoB/C,MA0JG0E,CAAuBjnB,MACnD0kB,GAAqB,WAErBne,MAGuB2gB,CAAsB,CAC/Cb,mBAAoBnB,GACpB2B,kBAAmB5B,GACnBnL,kBAAmBluB,EACnB25B,sBAAuBP,GACvBY,kBAAmBxB,EACnBqB,0BAA2BJ,GAC3BU,oBAAqBd,GACrBY,gBAAiBvB,IAGb6C,GAAuBre,mBAC3B,iBAAO,CACLoa,eAAgB9O,EAChB+O,oBAAqBqB,KAEvB,CAACpQ,IAGGgT,GAA0B7sB,uBAAY,SAAC8rB,EAAoBjG,GAE7DA,EAASznB,UADP0tB,IAKH,IAEGna,GAA2B3R,uBAAY,SAAC+lB,GAE1CpW,KADEoW,KAKH,IAoCH,OAlCA9nB,qBAAU,WACR4uB,GAAwBlC,GAAmB1kC,KAC1C,CAAC0kC,GAAmB1kC,EAAK4mC,KAE5B5uB,qBAAU,kBAAM0T,GAAyBjE,KAAoB,CAC3DA,EACAiE,KAGF1T,qBAAU,WACJsB,GACF6a,GAAe,KAEhB,CAAC7a,IAEJtB,qBAAU,WACJyhB,GACFiD,EAAgBjD,KAEjB,CAACA,IAEJzhB,qBAAU,WACJykB,IACFuH,EAAchI,GAAS1I,IACvBM,GAAa,SAACpU,GAAD,mBAAC,eACTA,GADQ,kBAEV,aAFU,aAGTia,eAAe,GACZuC,GAAS1I,YAIjB,CAACmJ,EAAc7I,EAAcN,IAEzB,CACL,CACEmJ,eACAyE,qBACA9M,aACA3K,gBACAwa,yBACAO,2BACAlrB,cACAkqB,YACAE,mBACAiB,uBAEF,CACElW,gBACAM,mBAjLuB,WACzB6E,GAAa,SAACpU,GAAD,mBAAC,eACTA,GADQ,kBAEV,aAAe,CACdia,eAAe,QAGnB0H,GAAsB,GACtB+C,GAAqB,QA0KnBlV,mBAvKuB,WACzBmS,GAAsB,IAuKpB0F,oBApKwB,SAACztB,GAAD,OAAWuqB,EAAoBvqB,IAqKvD6sB,4BACAxiB,+BACAyiB,6CACAC,2CACAC,sBACAO,2BC7TSnoC,GAnDGC,aAAW,SAACC,GAAD,cAAY,CACvCy8B,qBAAsBz8B,EAAMgC,iBAAiB,CAAEkB,MAAO,MACtDugC,UAAWzjC,EAAMgC,iBAAiB,CAAEga,UAAW,KAC/C0F,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxDypB,aAAct0B,EAAMgC,iBAAiB,CAAEga,UAAW,KAClDosB,sBAAoB,mBACjBpoC,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,QAFG,cAIjBlE,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,SALG,cAOjBlE,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsD,YAAa,SARG,GAWpBuyB,sBAAuB,CACrB/tB,UAAW,cAEbkJ,aAAa,2BACR5R,EAAMgC,iBAAiB,CAAE6I,aAAc,MADhC,IAEV+W,UAAW,uCAEbE,UAAQ,mBACL9hB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,SAFH,cAILlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,QALH,GAQR6lB,kBAAkB,aAChB1d,OAAQ,YACRzI,aAAc,MACdC,YAAa7C,EAAMQ,QAAQuB,MAAMrB,MAC9BV,EAAMgC,iBAAiB,CAAEkH,QAAS,MAEvC6S,UAAW,CACTja,MAAO9B,EAAMQ,QAAQuB,MAAMrB,KAC3B8c,UAAW,OACXvb,YAAa,OACboH,WAAY,OACZ2S,UAAW,OAEbqsB,eAAgB,CACdh/B,WAAY,OACZpH,YAAa,OACb+Z,UAAW,WC5BTssB,GAAa,SAAC,EAA4DhnC,GAAS,IAAnEszB,EAAkE,EAAlEA,WAAYM,EAAsD,EAAtDA,aAAc/zB,EAAwC,EAAxCA,UAAW4nB,EAA6B,EAA7BA,kBACnDhoB,EAAUjB,KAChB,EAyBI2gB,GAAQ,CACVmU,aACAM,eACAnM,oBACAznB,QA7BF,2BAEIy8B,EAFJ,EAEIA,aACAyE,EAHJ,EAGIA,mBACA9M,EAJJ,EAIIA,WACA3K,EALJ,EAKIA,aACAwa,EANJ,EAMIA,sBACAO,EAPJ,EAOIA,wBACAlrB,EARJ,EAQIA,YACAkqB,EATJ,EASIA,UACAE,EAVJ,EAUIA,iBACAiB,EAXJ,EAWIA,mBAXJ,OAcIlW,EAdJ,EAcIA,aACAM,EAfJ,EAeIA,mBACAC,EAhBJ,EAgBIA,mBACA6X,EAjBJ,EAiBIA,oBACAZ,EAlBJ,EAkBIA,yBACAxiB,EAnBJ,EAmBIA,4BACAyiB,EApBJ,EAoBIA,0CACAC,EArBJ,EAqBIA,wCACAC,EAtBJ,EAsBIA,mBACAO,EAvBJ,EAuBIA,qBAUFnB,EAIEpR,EAJFoR,mBACAC,EAGErR,EAHFqR,2BACAE,EAEEvR,EAFFuR,yBACAD,EACEtR,EADFsR,2BAGF,OACE,eAAC,GAAD,CACEnX,WAAW,eACX1uB,UAAWA,EACX2uB,YAAaiO,EACbhO,aAAcA,EAJhB,UAME,cAAC,GAAD,CAAcoD,UAAWqP,EAAzB,SACE,cAAC,GAAD,CACEjhC,KAAI,kLACJ8uB,mBAAoBA,EACpBC,mBAAoBA,MAGxB,eAACtvB,EAAA,EAAD,CACEC,WAAS,EACTE,UAAWkC,YAAKtC,EAAQ0iC,UAAW1Y,GAAgBhqB,EAAQgoB,mBAF7D,UAIE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,CACEnF,WAAW,cACX/Z,YAAY,gCACZqY,UAAW,GACXrH,cAAe0sB,EACf5sB,gBAAiBmsB,EACjBxlC,IAAKikC,EACL3qB,YAAaA,MAGjB,cAACqH,GAAD,UACE,cAAC,GAAD,CACE2B,WAAW,yBACXqZ,OAAO,aACPpiB,cAAe2sB,EACf/qB,eAAe,0CACfsB,SAAwB,KAAd+mB,EACVyD,eAAe,EACfpnC,UAAWJ,EAAQ2gB,gBACnB/G,gBAAiBosB,EACjBnsB,YAAaA,SAInB,eAAC5Z,EAAA,EAAD,CAAMC,WAAS,EAACqB,KAAK,SAASnB,UAAWkC,YAAKtC,EAAQ0iC,UAAW1iC,EAAQ2gB,iBAAzE,UACE,cAAC,GAAD,CAAY/P,MAAM,2BAAwBxQ,UAAWJ,EAAQ01B,sBAA7D,SACE,cAAC,GAAD,CACE5Y,cAAe,CACb,CAAEnD,MAAO,MAAOtW,MAAO,SACvB,CAAEsW,MAAO,KAAMtW,MAAO,OAExByW,cAAestB,EACfpqB,UAAW+nB,EACXprB,MAAOsqB,MAGX,cAAC,GAAD,CACEphB,WAAW,cACXqZ,OAAO,aACPpiB,cAAe4sB,EACfe,aAAa,EACbzqB,SAA+B,OAArBinB,EACV7jC,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQqnC,sBACjDztB,gBAAiBssB,EACjBrsB,YAAaA,OAGjB,cAAC5Z,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWJ,EAAQ6Q,aAAnC,SACE,cAAC,GAAD,CACE/H,YAAY,sBACZ1I,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ+gB,UACjDjH,cAAekK,EACfpK,gBAAiBqsB,EACjBpsB,YAAaA,MAGjB,cAAC5Z,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAAWuB,WAAW,aAArD,SACE,cAAC,EAAD,CAAelB,KAAK,sBAAsB8C,QAASqjC,SAGtD3c,GACC,cAAC3pB,EAAA,EAAD,CACEsB,QAAQ,UACRvB,UAAWkC,YACTtC,EAAQgb,UACRkqB,EAAmBh0B,OAAS,GAAKlR,EAAQ2gB,iBAJ7C,4IAWDukB,EAAmBh0B,QAAU,GAC5B,cAAC,GAAD,CACE9Q,UAAY4pB,EAAsC,KAAvBhqB,EAAQuzB,aACnCG,mBAAoBwR,EACpBzS,YAAayU,QAORtmC,OAAMC,WAAW0mC,IC9JjBxoC,GALGC,aAAW,SAACC,GAAD,MAAY,CACvC0hB,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD49B,qBAAsBzoC,EAAMgC,iBAAiB,CAAEga,UAAW,SCMtD0sB,GAA0B,SAAC,EAAuCpnC,GAAS,IAA9CqnC,EAA6C,EAA7CA,uBAAwBxnC,EAAqB,EAArBA,UACnDJ,EAAUjB,KAChB,EAA4C4gB,qBAAWxD,IAA/CyD,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBAuUdgoB,EAAoCjoB,EAApCioB,oBAAqB51B,EAAe2N,EAAf3N,WACvB61B,EAtU8B,CAClC,CACEhZ,WAAY,8BACZ0S,WAAY,CACV,CACEn+B,MAAO,kBACP6Z,KAAM,wBAER,CACE7Z,MAAO,gBACP6Z,KAAM,uBAER,CACE7Z,MAAO,mBACP6Z,KAAM,0BAER,CACE7Z,MAAO,kBACP6Z,KAAM,0BAER,CACE7Z,MAAO,aACP6Z,KAAM,mBAER,CACE7Z,MAAO,kBACP6Z,KAAM,gCAER,CACE7Z,MAAO,YACP6Z,KAAM,sBAER,CACE7Z,MAAO,0BACP6Z,KAAM,4BAER,CACE7Z,MAAO,YACP6Z,KAAM,qBAER,CACE7Z,MAAO,SACP6Z,KAAM,iBAER,CACE7Z,MAAO,aACP6Z,KAAM,0BAGV6qB,yBAA0B,kBAE5B,CACEjZ,WAAY,2BACZ0S,WAAY,CACV,CACEn+B,MAAO,OACP6Z,KAAM,kBAER,CACE7Z,MAAO,OACP6Z,KAAM,gBAER,CACE7Z,MAAO,aACP6Z,KAAM,mBAER,CACE7Z,MAAO,MACP6Z,KAAM,iBAER,CACE7Z,MAAO,mBACP6Z,KAAM,yBAER,CACE7Z,MAAO,YACP6Z,KAAM,uBAGV6qB,yBAA0B,eAE5B,CACEjZ,WAAY,sBACZ0S,WAAY,CACV,CACEn+B,MAAO,WACP6Z,KAAM,oBAER,CACE7Z,MAAO,4BACP6Z,KAAM,iCAGV6qB,yBAA0B,UAE5B,CACEjZ,WAAY,gCACZ0S,WAAY,CACV,CACEn+B,MAAO,uBACP6Z,KAAM,iCAER,CACE7Z,MAAO,yBACP6Z,KAAM,8BAER,CACE7Z,MAAO,cACP6Z,KAAM,qBAER,CACE7Z,MAAO,qBACP6Z,KAAM,wBAER,CACE7Z,MAAO,YACP6Z,KAAM,qBAER,CACE7Z,MAAO,WACP6Z,KAAM,qBAER,CACE7Z,MAAO,yBACP6Z,KAAM,gCAGV6qB,yBAA0B,oBAE5B,CACEjZ,WAAY,uBACZ0S,WAAY,CACV,CACEn+B,MAAO,0BACP6Z,KAAM,gCAER,CACE7Z,MAAO,qBACP6Z,KAAM,6BAER,CACE7Z,MAAO,cACP6Z,KAAM,oBAER,CACE7Z,MAAO,gBACP6Z,KAAM,wBAER,CACE7Z,MAAO,wBACP6Z,KAAM,0BAGV6qB,yBAA0B,WAE5B,CACEjZ,WAAY,WACZ0S,WAAY,CACV,CACEn+B,MAAO,eACP6Z,KAAM,sBAGV6qB,yBAA0B,aAE5B,CACEjZ,WAAY,mCACZ0S,WAAY,CACV,CACEn+B,MAAO,WACP6Z,KAAM,mBAER,CACE7Z,MAAO,WACP6Z,KAAM,oBAER,CACE7Z,MAAO,iBACP6Z,KAAM,2BAER,CACE7Z,MAAO,gBACP6Z,KAAM,0BAER,CACE7Z,MAAO,gBACP6Z,KAAM,oBAER,CACE7Z,MAAO,kBACP6Z,KAAM,wBAER,CACE7Z,MAAO,oBACP6Z,KAAM,uBAER,CACE7Z,MAAO,cACP6Z,KAAM,wBAER,CACE7Z,MAAO,cACP6Z,KAAM,uBAGV6qB,yBAA0B,sBAE5B,CACEjZ,WAAY,6BACZ0S,WAAY,CACV,CACEn+B,MAAO,MACP6Z,KAAM,eAER,CACE7Z,MAAO,MACP6Z,KAAM,eAER,CACE7Z,MAAO,UACP6Z,KAAM,mBAER,CACE7Z,MAAO,aACP6Z,KAAM,wBAER,CACE7Z,MAAO,UACP6Z,KAAM,oBAER,CACE7Z,MAAO,eACP6Z,KAAM,oBAER,CACE7Z,MAAO,sBACP6Z,KAAM,oCAER,CACE7Z,MAAO,eACP6Z,KAAM,uBAGV6qB,yBAA0B,iBAE5B,CACEjZ,WAAY,iBACZ0S,WAAY,CACV,CACEn+B,MAAO,SACP6Z,KAAM,kBAER,CACE7Z,MAAO,mBACP6Z,KAAM,0BAER,CACE7Z,MAAO,gBACP6Z,KAAM,wBAER,CACE7Z,MAAO,uBACP6Z,KAAM,4BAGV6qB,yBAA0B,iBAE5B,CACEjZ,WAAY,yBACZ0S,WAAY,CACV,CACEn+B,MAAO,MACP6Z,KAAM,eAER,CACE7Z,MAAO,KACP6Z,KAAM,cAER,CACE7Z,MAAO,2BACP6Z,KAAM,qCAGV6qB,yBAA0B,4BAE5B,CACEjZ,WAAY,6BACZ0S,WAAY,CACV,CACEn+B,MAAO,MACP6Z,KAAM,eAER,CACE7Z,MAAO,YACP6Z,KAAM,uBAER,CACE7Z,MAAO,UACP6Z,KAAM,qBAER,CACE7Z,MAAO,YACP6Z,KAAM,qBAER,CACE7Z,MAAO,mBACP6Z,KAAM,2BAGV6qB,yBAA0B,kCAiBkC9jC,KAAI,SAAC3C,GACnE,IAAM0mC,EAAoB1mC,EAAI,WACxB2mC,EAAoB3mC,EAAI,WAExBggC,EAAyBhgC,EAAI,yBAC7BoL,EAAM40B,EACN4G,EAAoBL,EAAoBvG,GAE9C,OACE,cAAC,GAAD,CACExS,WAAYkZ,EACZ1W,cAAe2W,EAEf3G,uBAAwBA,EACxBzN,WAAYqU,EACZ/T,aAActU,EACd+iB,oBAAoB,sBACpBuF,cAAc,yBACd/nC,UAAWJ,EAAQ2gB,iBANdjU,MAWL07B,EApCiC,CACrC,CAAEtZ,WAAY,8BAA4BiZ,yBAA0B,eACpE,CACEjZ,WAAY,8BACZiZ,yBAA0B,qBAE5B,CACEjZ,WAAY,QACZiZ,yBAA0B,WA4BwC9jC,KAAI,SAAC3C,GACzE,IAAM0mC,EAAoB1mC,EAAI,WACxBggC,EAAyBhgC,EAAI,yBAC7BoL,EAAM40B,EACN4G,EAAoBL,EAAoBvG,GAE9C,OACE,cAAC,GAAD,CACExS,WAAYkZ,EAEZ1G,uBAAwBA,EACxBzN,WAAYqU,EACZ/T,aAActU,EACd+iB,oBAAoB,sBACpBuF,cAAc,yBACd/nC,UAAWJ,EAAQ2gB,gBACnBkiB,kBAAmB7iC,EAAQ0nC,sBAPtBh7B,MAYX,OACE,eAAC,GAAD,CAAStM,UAAWA,EAApB,UACE,cAAC,GAAD,CACEA,UAAWJ,EAAQ2gB,gBACnBngB,KAAK,6BACLmB,QAAQ,UAETmmC,EACAM,EACD,cAAC,GAAD,CACEvU,WAAY5hB,EACZkiB,aAActU,EACdmI,kBAAmB4f,EACnBrnC,IAAKA,QAMEK,OAAM8Y,KAAK9Y,IAAMC,WAAW8mC,KCrX5B5oC,GA5BGC,aAAW,SAACC,GAAD,MAAY,CACvCopC,uBAAuB,2BAClBppC,EAAMgC,iBAAiB,CACxBkH,QAAS,MAFS,IAIpBhG,MAAO,QACPN,aAAc,MACdI,YAAa,MACbH,YAAa7C,EAAMQ,QAAQsC,UAAUpC,KACrCqC,YAAa,QACbxC,WAAYP,EAAMQ,QAAQyvB,eAAe5Q,KACzCnf,SAAU,WACVmK,IAAK,MACLjK,KAAM,MACN8vB,UAAW,0BAGbC,iBAAkBnwB,EAAMgC,iBAAiB,CACvC6I,aAAc,KAGhBw+B,QAAS,CACPvnC,MAAO9B,EAAMQ,QAAQ8oC,QAAQ5oC,MAG/B6oC,sBAAuBvpC,EAAMgC,iBAAiB,CAAE6I,aAAc,SC4HjD2+B,GA/Ic,SAAC,GAOvB,IANLC,EAMI,EANJA,kBACAC,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,gBAEM/oC,EAAUjB,KAKViqC,EAAqB,SAAC,GAA6B,IAA3Bj4B,EAA0B,EAA1BA,WAAYk4B,EAAc,EAAdA,QAChCC,EAAgDn4B,EAAhDm4B,uBAAwBC,EAAwBp4B,EAAxBo4B,oBAE9BC,EAIEH,EAJFG,gCACAC,EAGEJ,EAHFI,uBACAC,EAEEL,EAFFK,iBACAC,EACEN,EADFM,mBAIF,OAD2BL,GAA0BC,EAE5CI,EAEHL,EACKE,EACED,EACFE,EAEAC,GAKLE,EAAwCb,EAAxCa,eAAgBC,EAAwBd,EAAxBc,oBAGtBC,EAGEd,EAHFc,YACAC,EAEEf,EAFFe,qCACAC,EACEhB,EADFgB,sBAIAC,EAGEf,EAHFe,2BACAC,EAEEhB,EAFFgB,6CACAC,EACEjB,EADFiB,4CAGMnpB,EAAoCmoB,EAApCnoB,WAAYopB,EAAwBjB,EAAxBiB,oBAGdC,EA3CuB,0EA2CuBpB,EA3CvB,sJAkDvBqB,EAAiBlB,EAAmB,CACxCj4B,WAAY,CACVm4B,uBAAwBS,EACxBR,oBAAqBS,GAEvBX,QAAS,CACPG,gCAAiCU,EACjCT,uBAAwBQ,EACxBP,iBAhB2B,sBAiB3BC,mBAlB4B,0CAsB1BY,EAAgBnB,EAAmB,CACvCj4B,WAAY,CACVm4B,uBAAwBS,EACxBR,oBAAqBS,GAEvBX,QAAS,CACPG,gCAAiCW,EACjCV,uBAzBF,0GA0BEC,iBAvBF,2OAwBEC,mBAAoBU,KAIxB,OACE,cAAC,GAAD,CAAc7X,UAAWsX,EAAzB,SACE,eAACzpC,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,SACfqvB,aAAa,aACbpvB,UAAWJ,EAAQqoC,uBAJrB,UAME,cAAChoC,EAAA,EAAD,CACED,UAAWkC,YACTtC,EAAQovB,iBACRua,GAAwCC,EACpCI,EACAhqC,EAAQsoC,SAEd3mC,QAAQ,KACRqsB,MAAM,OARR,SAUGkc,IAEH,cAAC7pC,EAAA,EAAD,CAAYD,UAAWJ,EAAQovB,iBAAkBpB,MAAM,OAAvD,SACGmc,IAEH,eAAClqC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,aAA/B,UACE,eAACF,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,UAAWkC,YAAKse,EAAY5gB,EAAQwoC,uBAHtC,UAKE,cAAC,EAAD,CAAehoC,KAAK,aAAa8C,QAASolC,EAAkB,gBAC5D,cAAC,EAAD,CACEloC,KAAK,aACLwc,SAAU2sB,GAAwCC,EAClDtmC,QAASolC,EAAkB,kBAG/B,eAACzoC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAAC,EAAD,CACEK,KAAK,WACL8C,QAAS,WACPkmC,GAAe,GACfC,GAAoB,MAGxB,cAAC,EAAD,CACEjpC,KAAK,gBACL8C,QAAS,WACPmmC,GAAoB,kBCvIrB1qC,GAJGC,aAAW,SAACC,GAAD,MAAY,CACvC0hB,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,SCuB3CsgC,GApBW,SAAC,GAAgE,IAA9Dx5B,EAA6D,EAA7DA,MAAOpQ,EAAsD,EAAtDA,KAAMw5B,EAAgD,EAAhDA,cAAe55B,EAAiC,EAAjCA,UAAWiqC,EAAsB,EAAtBA,gBAC5DrqC,EAAUjB,KAEhB,OACE,mCACGi7B,GACC,eAAC/5B,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAAatB,UAAWA,EAAtE,UACE,cAACC,EAAA,EAAD,CACEsB,QAAQ,KACRqsB,MAAM,OACN5tB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB0pB,GAH3C,SAKGz5B,IAEH,cAACvQ,EAAA,EAAD,CAAY2tB,MAAM,OAAlB,SAA0BxtB,UCNrB8pC,GAZgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,sBAAuBnqC,EAA1B,EAA0BA,UAA1B,OAC7BmqC,EAAsBtmC,KAAI,SAAC3C,GAAD,OACxB,cAAC,GAAD,CACEsP,MAAOtP,EAAKsP,MAEZpQ,KAAMc,EAAKd,KACXw5B,cAAe14B,EAAK04B,cACpBqQ,gBAAiB/oC,EAAK+oC,gBACtBjqC,UAAWA,GAJNkB,EAAKsP,WCyDD7R,GA7DGC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,GACFmI,SAAU,IACVlF,MAAO,OAFL,cAGDlD,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP8Y,UAAW,OACXjS,WAAY,OACZ7F,YAAa,OACb2D,aAAc,SARd,cAUD7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP8Y,UAAW,OACXjS,WAAY,OACZ7F,YAAa,OACb2D,aAAc,SAfd,cAiBD7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP8Y,UAAW,OACXjS,WAAY,OACZ7F,YAAa,OACb2D,aAAc,SAtBd,cAwBD7H,EAAMW,YAAYC,GAAG,MAAQ,CAC5BsC,MAAO,MACP8Y,UAAW,OACXjS,WAAY,OACZ7F,YAAa,OACb2D,aAAc,SA7Bd,2BA+BU7H,EAAMQ,QAAQyvB,eAAe5Q,MA/BvC,GAiCJqC,gBAAiB1hB,EAAMgC,iBAAiB,CAAE6I,aAAc,KACxD0gC,sBAAuBvrC,EAAMgC,iBAAiB,CAAE6I,aAAc,KAC9D2gC,YAAaxrC,EAAMgC,iBAAiB,CAAEC,YAAa,KACnD0f,WAAW,2BACN3hB,EAAMgC,iBAAiB,CAAEgI,cAAe,MADnC,IAER4X,UAAW,qCACX1e,MAAO,SAETuoC,mBAAoB,CAClB3pC,MAAO9B,EAAMQ,QAAQuB,MAAMrB,MAE7BqqC,oBAAqB,CACnBjpC,MAAO9B,EAAMQ,QAAQwH,KAAKtH,MAE5BgrC,eAAgB,CACd,UAAW,CACT,8BAA+B,CAC7BxrC,SAAU,WACVmK,IAAK,OACLhK,MAAO,OACPD,KAAM,QACN+B,SAAU,c,8GC6gCHse,GAjkCC,WACd,IAAMkrB,EAA0B,CAC9BnnB,eAAgB,CACdtU,SAAU,cACVC,UAAW,aACXC,SAAU,aACVC,OAAQ,OACRC,IAAK,MAEPiU,eAAgB,CACdzL,sBAAuB,GACvBC,gBAAiB,IAEnB6vB,oBAAqB,CACnBgD,eAAgB,CACd7Q,eAAe,EACfruB,aAAc,GACdyG,sBAAsB,EACtBC,qBAAqB,EACrBC,wBAAwB,EACxBC,wBAAwB,EACxBC,iBAAiB,EACjBC,8BAA8B,EAC9BC,oBAAoB,EACpBC,0BAA0B,EAC1BC,mBAAmB,EACnBC,eAAe,EACfC,uBAAuB,GAEzBg4B,YAAa,CACX9Q,eAAe,EACfruB,aAAc,GACdoH,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,eAAe,EACfC,uBAAuB,EACvBT,oBAAoB,GAEtBq4B,OAAQ,CACN/Q,eAAe,EACfruB,aAAc,GACdyH,kBAAkB,EAClBC,8BAA8B,GAEhC23B,iBAAkB,CAChBhR,eAAe,EACfruB,aAAc,GACd2H,+BAA+B,EAC/BC,4BAA4B,EAC5BC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,EACnBC,mBAAmB,EACnBC,6BAA6B,GAE/Bq3B,QAAS,CACPjR,eAAe,EACfruB,aAAc,GACdkI,8BAA8B,EAC9BC,2BAA2B,EAC3BC,kBAAkB,EAClBC,sBAAsB,EACtBC,uBAAuB,GAEzBi3B,UAAW,CACTlR,eAAe,EACfruB,aAAc,GACduI,mBAAmB,GAErBi3B,mBAAoB,CAClBnR,eAAe,EACfruB,aAAc,GACdwI,iBAAiB,EACjBC,kBAAkB,EAClBC,yBAAyB,EACzBC,wBAAwB,EACxBC,kBAAkB,EAClBC,sBAAsB,EACtBC,qBAAqB,EACrBC,sBAAsB,EACtBC,oBAAoB,GAEtBy2B,cAAe,CACbpR,eAAe,EACfruB,aAAc,GACdiJ,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kCAAkC,EAClCC,oBAAoB,GAEtBk2B,cAAe,CACbrR,eAAe,EACfruB,aAAc,GACdyJ,gBAAgB,EAChBC,wBAAwB,EACxBC,sBAAsB,EACtBC,yBAAyB,GAE3B+1B,yBAA0B,CACxBtR,eAAe,EACfruB,aAAc,GACd6J,aAAa,EACbC,YAAY,EACZC,kCAAkC,GAEpC61B,8BAA+B,CAC7BvR,eAAe,EACfruB,aAAc,GACdgK,aAAa,EACbC,qBAAqB,EACrBC,mBAAmB,EACnBC,mBAAmB,EACnBC,wBAAwB,GAE1By1B,YAAa,CACXxR,eAAe,EACfruB,aAAc,IAEhB8/B,kBAAmB,CACjBzR,eAAe,EACfruB,aAAc,IAEhB+/B,OAAQ,CACN1R,eAAe,EACfruB,aAAc,KAIlBsG,WAAY,CACV+nB,eAAe,GAGjBxR,cAAe,CACb/Y,oBAAqB,GACrBC,sBAAuB,GACvBC,MAAO,GACPC,kBAAmB,GACnBC,iBAAkB,GAClBC,MAAO,GACPC,SAAU,EACVC,UAAW,EACXC,OAAQ,GACRnQ,OAAQ,GACRoQ,SAAU,EACVvE,aAAc,GACdwE,QAAS,GACTC,IAAK,GACLC,KAAM,GACNC,GAAI,GACJC,UAAW,GACXC,SAAU,IAGZqT,YAAa,CACXzY,aAAc,GACdC,UAAW,GACXC,oBAAqB,GACrBC,oBAAqB,GACrBC,aAAc,GACdC,MAAO,GACPC,wBAAyB,GACzBC,aAAc,IAGhBixB,YAAa,CACX5C,eAAe,GAGjBha,cAAe,CACb/T,aAAc,GACdC,wBAAyB,GACzBC,eAAgB,GAChBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,WAAY,GACZC,mBAAoB,GACpBC,kBAAmB,KAKjBxM,EAAUjB,KAEhB,EAAqDmG,mBAAS0lC,GAAvDe,EAAP,qBAGA,EAA8CzmC,mBAAS0lC,GAAvD,oBAAOgB,EAAP,KAAwBC,EAAxB,KAEMC,EAAgBjjB,mBACpB,iBAAO,CACLjJ,aAAc+rB,EACd9rB,kBAAmBgsB,KAErB,CAACF,IAGH,EAAkCzmC,mBAAS,IAAI2W,MAA/C,oBAAOkwB,EAAP,KAAkBC,EAAlB,KAEA,EAAgD9mC,oBAAS,GAAzD,oBAAO+mC,EAAP,KAAyBxC,EAAzB,KAEA,EAAwEvkC,mBAAS,CAC/EgnC,iCAAiC,EACjCC,2BAA2B,IAF7B,oBAAOC,EAAP,KAAqCC,EAArC,KAIA,EAAsEnnC,mBAAS,CAC7EonC,kBAAkB,EAClBC,kBAAkB,IAFpB,oBAAOC,EAAP,KAAoCC,EAApC,KAIA,EAA8DvnC,mBAAS,CACrEwnC,wBAAwB,EACxBC,qBAAqB,EACrBC,+BAA+B,EAC/BC,+BAA+B,EAC/BC,wBAAwB,EACxBC,iBAAiB,EACjBC,mCAAmC,IAPrC,oBAAOC,EAAP,KAAgCC,EAAhC,KASA,EAA8DhoC,mBAAS,CACrEioC,0BAA0B,IAD5B,oBAAOC,EAAP,KAAgCC,EAAhC,KAIA,EAA0DnoC,oBAAS,GAAnE,oBAAOooC,EAAP,KAA8BC,EAA9B,KAEA,EAA4DroC,qBAA5D,oBAAO0iC,EAAP,KAA+B4F,EAA/B,KACA,EAAgEtoC,qBAAhE,oBAAOg8B,EAAP,KAAiCuM,EAAjC,KACA,EAAoEvoC,qBAApE,oBAAOi8B,EAAP,KAAmCuM,EAAnC,KAEA,EAA4DxoC,mBAAS,IAArE,qBAAOgkC,GAAP,MAA+ByE,GAA/B,MAEA,GAA0DzoC,oBAAS,GAAnE,sBAAO0kC,GAAP,MAA8BgE,GAA9B,MACA,GAAwD1oC,oBAAS,GAAjE,sBAAO2oC,GAAP,MAA6BC,GAA7B,MACA,GAAsE5oC,oBAAS,GAA/E,sBAAO6oC,GAAP,MAAoCC,GAApC,MACA,GAAuF9oC,oBACrF,GADF,sBAAOykC,GAAP,MAA6CsE,GAA7C,MAGA,GAAkF/oC,oBAAS,GAA3F,sBAAOgpC,GAAP,MAA0CC,GAA1C,MACA,GAA4EjpC,oBAAS,GAArF,sBAAOkpC,GAAP,MAAuCC,GAAvC,MAEA,GAAsCnpC,oBAAS,GAA/C,sBAAOwkC,GAAP,MAAoBF,GAApB,MAEA,GAAkDtkC,oBAAS,GAA3D,sBAAOopC,GAAP,MAA0BC,GAA1B,MACA,GAAwErpC,oBAAS,GAAjF,sBAAOspC,GAAP,MAAqCC,GAArC,MAGA,GAA4DvpC,mBAAS,IAArE,sBAAOwpC,GAAP,MAA+BC,GAA/B,MAEIC,GAAiCtmB,iBAAO,GACxChF,GAAsCgF,kBAAO,GAC7C/E,GAAgC+E,kBAAO,GACvCG,GAAuBH,kBAAO,GAC9BI,GAAuBJ,kBAAO,GAC9BK,GAAsBL,kBAAO,GAC7BumB,GAAkCvmB,kBAAO,GACzCwmB,GAAiCxmB,kBAAO,GACxCqF,GAAsBrF,kBAAO,GAC7BymB,GAA8BzmB,kBAAO,GACrC0mB,GAA4B1mB,kBAAO,GACnC+Y,GAAgC/Y,kBAAO,GACvC2mB,GAA2B3mB,kBAAO,GAClC4mB,GAA0B5mB,kBAAO,GACjC6mB,GAA0B7mB,kBAAO,GACjC8mB,GAAiC9mB,kBAAO,GACxC+mB,GAAuC/mB,kBAAO,GAC9CgnB,GAAoChnB,kBAAO,GAC3CinB,GAA+BjnB,kBAAO,GACtC7O,GAAe6O,iBAAO,MACtB9O,GAAgB8O,mBAChBknB,GAAoBlnB,mBACpBmnB,GAAcnnB,mBAEZonB,GAAmB7mB,mBACvB,iBAAO,CACLvF,uCACAC,oCAEF,IAGIosB,GAAkB9mB,mBACtB,iBAAO,CACLwY,iCACAD,gBAAiB,CACf3Y,wBACAC,wBACAgF,iBAAkB,CAACmhB,GAAiCC,IACpDnhB,uBACAhF,2BAGJ,IAGIinB,GAA2B/mB,mBAC/B,iBAAO,CACLqY,2BACAC,gCAEF,CAACD,EAA0BC,IAGvB0O,GAAoB,CACxBvsB,GAAoC5K,QACpC6K,GAA8B7K,QAC9B+P,GAAqB/P,QACrBgQ,GAAqBhQ,QACrBm2B,GAAgCn2B,QAChCo2B,GAA+Bp2B,QAC/BiV,GAAoBjV,SAGhBo3B,GAA6BjnB,mBACjC,iBAAO,CACLmY,uBAAwB,CACtBzT,iCAAkCif,EAClChf,uBAAwB0gB,GACxBzgB,oBAAqB2gB,IAEvBnN,6BAA8BgM,KAEhC,CACET,EACAS,EACAiB,GACAE,KAIE2B,GAA0B,SAACC,GAQ/B,MAP0B,UAAMA,EAAYzW,UAAlB,YACxByW,EAAYxW,WAAa,EADD,YAEtBwW,EAAYvW,cAFU,YAEOuW,EAAYC,eAAe,QAAS,CACnEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,MA8LNC,GAAgC,SAACC,GAAD,OAAeA,EAAS53B,QAAU43B,EAAS53B,QAAU,GACrF63B,GAA4B,SAAC,GAM5B,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,iCAkBIJ,EAhBwB,SAAC,GAAiC,IAA/Bn4B,EAA8B,EAA9BA,SAAUw4B,EAAoB,EAApBA,SAAUtwC,EAAU,EAAVA,IACjD8X,GAAS,SAAC0H,GAAD,mBAAC,eACLA,GADI,kBAEN8wB,GAAW,OAEdjD,IAAyB,GACzBrtC,EAAImY,SAAU,EAWdo4B,CAAoB,CAClBz4B,SAAUo4B,EACVI,SAAUH,EACVnwC,IAAKowC,IAXyB,SAAC,GAAiC,IAA/Bt4B,EAA8B,EAA9BA,SAAUw4B,EAAoB,EAApBA,SAAUtwC,EAAU,EAAVA,IACvD8X,GAAS,SAAC0H,GAAD,mBAAC,eACLA,GADI,kBAEN8wB,GAAW,OAEdR,GAA8B9vC,GAS9BwwC,CAA0B,CACxB14B,SAAUo4B,EACVI,SAAUH,EACVnwC,IAAKqwC,KAoVLI,GAjGyB,SAAC,GAAD,IAAG5iB,EAAH,EAAGA,MAAO6iB,EAAV,EAAUA,KAAV,OAAqB,WAClD,IAAQzoB,EAA+B4F,EAA/B5F,cAAeoU,EAAgBxO,EAAhBwO,YAErB+T,EAWEM,EAXFN,uBACAC,EAUEK,EAVFL,iCACAM,EASED,EATFC,uBACAC,EAQEF,EARFE,0BACAC,EAOEH,EAPFG,6BACAC,EAMEJ,EANFI,wBACAC,EAKEL,EALFK,4BACAC,EAIEN,EAJFM,sBACAC,EAGEP,EAHFO,aACAjhC,EAEE0gC,EAFF1gC,UACAkhC,EACER,EADFQ,wBA3W2B,SAACrjB,GAC9B,IAAQ5K,EAA+C4K,EAA/C5K,eAAgBK,EAA+BuK,EAA/BvK,YAAa7D,EAAkBoO,EAAlBpO,cACrC,MAAO,CACL,CACEhK,aAAcwN,EAAc,sBAC5BktB,gBAAiB,kCACjBr4B,SAAUg0B,GAEZ,CACEr2B,aAAcwN,EAAc,gBAC5BktB,gBAAiB,4BACjBr4B,SAAUg0B,GAEZ,CACEr2B,aAAc6N,EAAW,aACzB6sB,gBAAiB,yBACjBr4B,SAAU60B,GAEZ,CACEl3B,aAAc6N,EAAW,UACzB6sB,gBAAiB,sBACjBr4B,SAAU60B,GAEZ,CACEl3B,aAAc6N,EAAW,oBACzB6sB,gBAAiB,gCACjBr4B,SAAU60B,GAGZ,CACEl3B,aAAc6N,EAAW,oBACzB6sB,gBAAiB,gCACjBr4B,SAAU60B,GAGZ,CACEl3B,aAAc6N,EAAW,aACzB6sB,gBAAiB,yBACjBr4B,SAAU60B,GAEZ,CACEl3B,aAAc6N,EAAW,MACzB6sB,gBAAiB,kBACjBr4B,SAAU60B,GAEZ,CACEl3B,aAAc6N,EAAW,wBACzB6sB,gBAAiB,oCACjBr4B,SAAU60B,GAEZ,CACEl3B,aAAcgK,EAAa,eAC3B0wB,gBAAiB,2BACjBr4B,SAAUg1B,KAwTdqE,CAAuBtjB,GAAOujB,SAAQ,SAACrwC,GACrC,IAAMkvC,EAAuC,KAAtBlvC,EAAK0U,aAC5Bu6B,GAA0B,CACxBC,iBACAC,gBAAiBnvC,EAAK+W,SACtBq4B,gBAAiBpvC,EAAKovC,gBACtBC,yBACAC,wCA1TsC,SAACxiB,GAC3C,IAAQ5F,EAAkB4F,EAAlB5F,cACR,MAAO,CACL,CACExS,aAAcwS,EAAa,OAC3BkoB,gBAAiB,mBACjBr4B,SAAUo0B,GAEZ,CACEz2B,aAAcwS,EAAa,OAC3BkoB,gBAAiB,mBACjBr4B,SAAUo0B,IAkTdmF,CAAoCxjB,GAAOujB,SAAQ,SAACrwC,GAClD,IAAMkvC,EAAuC,KAAtBlvC,EAAK0U,cAA4C,GAArB1U,EAAK0U,aACxDu6B,GAA0B,CACxBC,iBACAC,gBAAiBnvC,EAAK+W,SACtBq4B,gBAAiBpvC,EAAKovC,gBACtBC,yBACAC,wCA1E0B,SAACK,GAeK,OAAdlF,GAAmC,gBAAbA,EAd3B,SAAC8F,GAChB,IAAQC,EAA8CD,EAA9CC,qBAAsB3I,EAAwB0I,EAAxB1I,oBAC9B2I,EAAqBp5B,SAAU,EAC/B60B,GAAyB,GACzBK,IAAyB,GACzBzE,EAAoBzwB,SAAU,EAY9B4N,CAAS2qB,GAVyB,SAACY,GACnC,IAAQE,EAAqDF,EAArDE,2BAAqDF,EAAzBC,qBACfp5B,SAAU,EAC/B60B,GAAyB,GACzB8C,GAA8B0B,GAQ9BC,CAA4Bf,GA0D9BgB,CAAwB,CACtBH,qBAAsBP,EACtBpI,oBAAqBwH,EACrBoB,2BAA4BnB,IAzDS,SAAC,GAGnC,IACwBrwC,EAH7BwxC,EAEI,EAFJA,2BACApB,EACI,EADJA,uBAQ6E,KAAvCoB,EAA2Br5B,UANpCnY,EASPowC,EARpB/C,IAAyB,GACzBrtC,EAAImY,SAAU,GAEG,SAACnY,GAASA,EAAImY,QAAU,EAO3Cw5B,CAAWH,GA6CXI,CAAiC,CAC/BJ,2BAA4BnB,EAC5BD,2BA1R2B,SAAC,GAAsB,IAAD,EAAnByB,EAAmB,EAAnBA,QAAS7xC,EAAU,EAAVA,IAAU,eAChC6xC,GADgC,IACnD,2BAEE,IADuC,IADb,QAIxB,OADA7xC,EAAImY,SAAU,EACPo1B,IAAwB,GALgB,8BAQnDvtC,EAAImY,SAAU,EACPo1B,IAAwB,GAoR/BuE,CAAuB,CACrBD,QAASvC,GACTtvC,IAAK4uC,KAnR+C,SAAC,GAKlD,IAJL/gB,EAII,EAJJA,MACA8iB,EAGI,EAHJA,uBACAC,EAEI,EAFJA,0BACAC,EACI,EADJA,6BAKMkB,EAHkBlkB,EAAhBje,QAAgBie,EAAP9d,KAIqB4gC,EAAuBx4B,QACvD65B,GAAkC7nB,OAAO8nB,MAAMtB,EAAuBx4B,SACtE+5B,EAAwE,IAAnCvB,EAAuBx4B,QAe9D65B,IAbFD,GAAsCG,GAGtChF,GAA4B,GAC5B0D,EAA0Bz4B,SAAU,EACpCs1B,IAA+B,GAC/BoD,EAA6B14B,SAAU,IAGvC+0B,GAA4B,GAC5B0D,EAA0Bz4B,SAAU,IA6PtCg6B,CAAgD,CAC9CtkB,MAAO5F,EACP0oB,yBACAC,4BACAC,iCArP8C,SAAC,GAG5C,IAFLA,EAEI,EAFJA,6BAEI,EADJE,4BAQgC54B,SAL9Bg1B,GAA8B,GAC9BM,IAA+B,GAC/BoD,EAA6B14B,SAAU,GAEfg1B,GAA8B,GA8OxDiF,CAA0C,CACxCvB,+BACAE,gCAxO0C,SAAC,GAGxC,IAFLD,EAEI,EAFJA,wBACAD,EACI,EADJA,6BAQIC,EAAwB34B,SAL1B80B,GAA0B,GAC1BQ,IAA+B,GAC/BoD,EAA6B14B,SAAU,GAEf80B,GAA0B,GAiOpDoF,CAAsC,CACpCvB,0BACAD,iCA/JiC,SAAC,GAAqB,IAAnBhjB,EAAkB,EAAlBA,MAAO6iB,EAAW,EAAXA,KACvC4B,EAAqC,SAAC,GAKrC,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,+BAGkB,KAAfH,GAAqC,KAAhBC,GAAuC,KAAfD,GAAqC,KAAhBC,GAEnEC,EAAsBt6B,SAAU,EAChCu6B,GAA+B,KAE/BD,EAAsBt6B,SAAU,EAChCu6B,GAA+B,KAe3BzB,EAAoDP,EAApDO,aAAcjhC,EAAsC0gC,EAAtC1gC,UAAWkhC,EAA2BR,EAA3BQ,uBAC3ByB,EAAuB9kB,EAAMxe,kBAC7BujC,EAAsB/kB,EAAMve,iBAC5BujC,EAAehlB,EAAM7d,UACrB8iC,EAAcjlB,EAAM5d,SAE1BqiC,EAAmC,CACjCC,WAAYI,EACZH,YAAaI,EACbH,sBAAuBxB,EACvByB,+BAAgC9E,KAElC0E,EAAmC,CACjCC,WAAYM,EACZL,YAAaM,EACbL,sBAAuBziC,EACvB0iC,+BAAgC5E,KA5BM,SAAC,GAIlC,IAHLiF,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,2BAEgC,IAA5BF,EAAgB56B,UAA6C,IAAzB66B,EAAa76B,QACnD86B,EAA0B96B,SAAU,EAEpC86B,EAA0B96B,SAAU,EAsBxC+6B,CAAgC,CAC9BH,gBAAiB9B,EACjB+B,aAAchjC,EACdijC,0BAA2B/B,IA+G7BiC,CAA6B,CAC3BtlB,MAAO5F,EACPyoB,KAAM,CACJO,eACAjhC,YACAkhC,6BAIoC,IAAtCN,EAA0Bz4B,UACU,IAApC24B,EAAwB34B,UACgB,IAAxC44B,EAA4B54B,UAE5Bs1B,IAA+B,GAC/BoD,EAA6B14B,SAAU,GA3ON,SAAC0V,GACpC,IAqDMulB,EAxBoC,SAACC,GACzC,IAD4D,EACtDvX,EAAM,GADgD,eAE1CuX,GAF0C,IAE5D,2BAAkC,CAAC,IAC3BvwC,EAD0B,QACf,MACjBg5B,EAAItgB,KAAK1Y,IAJiD,8BAM5D,OAAOg5B,EAe8BwX,CAlCL,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,4BAWpD,OAVYD,EAAgBE,QAAO,SAACC,GAAW,IAAD,iBACfF,GADe,IAC5C,2BAA0D,CAAC,IAAhDG,EAA+C,QAExD,GADkBD,EAAK,OAAaC,EAElC,OAAO,GAJiC,8BAO5C,OAAO,KAsBoBC,CAA0B,CACvDL,gBAVyB,CACzB,CAAE52B,KAAM,oBAAqB7Z,MAAO,yBACpC,CAAE6Z,KAAM,aAAc7Z,MAAO,gBAC7B,CAAE6Z,KAAM,aAAc7Z,MAAO,eAC7B,CAAE6Z,KAAM,kBAAmB7Z,MAAO,MAClC,CAAE6Z,KAAM,OAAQ7Z,MAAO,SAMvB0wC,4BAhDiC,SAACK,GAClC,IAAMC,EAAQ,GACd,IAAK,IAAM3nC,KAAO0nC,EAChBC,EAAMt4B,KAAKrP,GAEb,OAAO2nC,EAuCmBC,CAA2BlmB,GApCpC4lB,QACf,SAAC1yC,GAAD,MACW,sBAATA,GACS,eAATA,GACS,eAATA,GACS,oBAATA,GACS,SAATA,QAuC+C2P,KAAK,KAE1D08B,GAA0BgG,GAC1B1F,IAAuC,iBAAyB,KAAlB0F,KAoL9CY,CAA6B3X,IAES,IAApCuS,GAAwBz2B,UACiB,IAAzC04B,EAA6B14B,UACO,IAApCw2B,GAAwBx2B,UACiB,IAAzC62B,GAA6B72B,UAE7B8wB,IAAe,GACfqC,GAAmB,SAAC9rB,GAAD,mBAAC,eACfA,GADc,IAEjBvX,KAAMunC,GAAwBhE,QAEhC4C,GA3iB0B,SAACza,GAC7B,IACE2T,EAQE3T,EARF2T,oBACA51B,EAOEiiB,EAPFjiB,WACA2qB,EAME1I,EANF0I,YACApU,EAKE0L,EALF1L,cACA/E,EAIEyQ,EAJFzQ,eACAD,EAGE0Q,EAHF1Q,eACAK,EAEEqQ,EAFFrQ,YACA7D,EACEkU,EADFlU,cAUIw0B,EAAgC,CACpChJ,YAHE3D,EAJF2D,YAQAC,kBAJE5D,EAHF4D,kBAQAC,OALE7D,EAFF6D,QAkCI+I,EAAc,SAACrmB,EAAOsmB,GAC1B,IAAMC,EAAiB,GACjBC,EAAuB,SAACloC,EAAKmoC,GAAN,OAAgB1a,OAAOC,OAAOya,EAAd1a,OAAA,IAAAA,CAAA,GAAwBztB,GAAM,KAC3E,IAAK,IAAM0K,KAAcgX,EAAO,CAC9B,MAAmCA,EAAMhX,GAAjC4iB,EAAR,EAAQA,cAAkB8a,EAA1B,kBACA,GAAI9a,EAAe,CACjB,IAAM+a,EAAgBL,EAAcI,GAC8B,IAAtC3a,OAAOyE,KAAKmW,GAAe7jC,OAErD0jC,EAAqBx9B,EAAYu9B,GAC5Bxa,OAAOC,OAAOua,EAAdxa,OAAA,IAAAA,CAAA,GAAiC/iB,EAAa29B,SAErDH,EAAqBx9B,EAAYu9B,GAGrC,OAAOA,GAaHK,EAAe,SAAC3tB,GACpB,IAAI4tB,EAAc,GACVjb,EAA2B3S,EAA3B2S,cAAkB8a,EAA1B,YAAmCztB,EAAnC,IACA,GAAI2S,EACF,IAAK,IAAM5iB,KAAc09B,EACvBG,EAAYl5B,KAAK+4B,EAAK19B,IAG1B,OAAO69B,GAwBT,MAZoB,CAClBC,yBAV+BT,EA5EjC,YAKI5M,EALJ,KAaqC,SAACzZ,GACpC,IASIumB,EAAiB,GACbhpC,EAAgCyiB,EAAhCziB,aACFwpC,EAX2B,SAACxoC,GAChC,IAAIyoC,EAAe,GACnB,IAAK,IAAM1oC,KAAOC,EACZA,EAAID,IACN0oC,EAAar5B,KAAKrP,GAGtB,OAAO0oC,EAIoBC,CAD7B,YAAwCjnB,EAAxC,KAEMknB,EAA6C,KAAjB3pC,EAC5B4pC,EAA2D,IAAhCJ,EAAqBjkC,OAOtD,OANIokC,GACFnb,OAAOC,OAAOua,EAAgB,CAAEhpC,iBAE9B4pC,GACFpb,OAAOC,OAAOua,EAAgB,CAAE5jC,WAAYokC,IAEvCR,KAqDPa,2BAPiCf,EAAYD,GAzBvB,SAACpmB,GACvB,IAAIumB,EAAiB,GACbhpC,EAAiByiB,EAAjBziB,aAKR,MAJmD,KAAjBA,GAEhCwuB,OAAOC,OAAOua,EAAgB,CAAEhpC,iBAE3BgpC,KA0BP1iC,WAPoB+iC,EAAa/iC,GAQjCwjC,eAPwBT,EAAapY,GAQrCnZ,iBACAD,iBACAgF,gBACA3E,cACA7D,gBACAxX,KAZWunC,GAAwBhE,IA4cT2J,CAAsB9J,MAIxB+J,CAAuB,CACjDvnB,MAAOwd,EACPqF,KAAM,CACJN,uBAAwB1B,GACxB2B,iCAAkChC,GAClCsC,uBAAwBvoB,GACxBwoB,0BAA2BpC,GAC3BqC,6BAA8BhC,GAC9BiC,wBAAyBrC,GACzBsC,4BAA6BjQ,GAC7BmQ,aAAcnC,GACd9+B,UAAW++B,GACXmC,uBAAwBlC,GACxBgC,sBAAuBrC,MAOrBrF,GAA6B,iCAC7BC,GAA+C,8BAC/CC,GALwC,+BAM5Cb,GAN4C,mHASxCqB,GAAwB1hB,mBAC5B,iBAAM,CACJ,CACEjY,MAAO,0BACPpQ,KAAM,uDACNw5B,cAAesT,EACfjD,gBAAiBrqC,EAAQ0qC,oBAE3B,CACE95B,MAAO,6BACPpQ,KACE,2KACFw5B,cAAekU,IAAqCE,GACpD/D,gBAAiBrqC,EAAQ0qC,oBAE3B,CACE95B,MAAOi5B,GACPrpC,KACE,sKACFw5B,cAAe4P,GACfS,gBAAiBrqC,EAAQ0qC,oBAE3B,CACE95B,MAAO,yBACPpQ,KACE,yHACFw5B,cAAe6T,GACfxD,gBAAiBrqC,EAAQ0qC,oBAE3B,CACE95B,MAAO,4BACPpQ,KACE,kXACFw5B,cAAe+T,GACf1D,gBAAiBrqC,EAAQ0qC,oBAE3B,CACE95B,MAAOk5B,GACPtpC,KAAMupC,GACN/P,cAAe2P,GACfU,gBAAiBrqC,EAAQgqC,wBAG7B,CACEsD,EACAttC,EAAQ0qC,mBACR1qC,EAAQgqC,oBACRkE,GACAE,GACAtE,GACAC,GACAJ,GACAoE,GACAF,GACAjE,KAiBEgM,GAAyB11B,aAAqB8rB,EAAc,IAAK,CAAE7rB,UAAU,IAE7E01B,GAAyBhtB,mBAC7B,iBAAO,CACL2gB,kBACAC,yBAEF,CAACD,GAAgBC,IAGbqM,GAA0BjtB,mBAC9B,iBAAO,CACL6gB,eACAC,wCACAC,4BAEF,CAACF,GAAaC,GAAsCC,KAGhDd,GAAmBjgB,mBACvB,iBAAO,CACLghB,8BACAC,gDACAC,kDAEF,CACEF,GACAC,GACAC,KAIEhB,GAAkBlgB,mBACtB,iBAAO,CACLmhB,oBAAqBhqC,EAAQgqC,oBAC7BppB,WAAY5gB,EAAQ4gB,cAEtB,CAAC5gB,EAAQgqC,oBAAqBhqC,EAAQ4gB,aAGlCm1B,GAAuBltB,mBAC3B,iBAAO,CACLrP,iBACAC,mBAEF,CAACD,GAAeC,KAOlB,OAJAlB,qBAAU,WACRszB,EAAmBF,KAClB,CAACA,IAEG,CACL,CACEG,gBACAG,mBACAG,+BACAgB,0BACAxF,yBACA0G,qBACAE,gCACAE,0BACAc,qBACAE,oBACAC,mBACAC,4BACAE,8BACAvF,yBACAuL,2BACAhN,oBACAC,mBACAgN,wBACAtG,eACA1D,YACAuB,wBACApE,0BACA8F,6BACAvrB,eAAgBmoB,EAAgBnoB,eAChCjK,kBAEF,CACEw3B,uBACAtI,kBA/FsB,SAACsN,GAAD,OAAgB,WACxC,IAAMC,EAA0C,cAAfD,EACjCrH,IAA0B,SAAC5uB,GAAD,mBAAC,eACtBA,GADqB,IAExBm2B,OAAQF,OAEVzH,IAAqB,GACrB/E,IAAe,GACXyM,GACFxH,IAAgC,KAuFhCmH,0BACAC,0BACApM,yBCv6BS0M,GAnIS,WACtB,IAAMn2C,EAAUjB,KAChB,EAmCI2gB,KAnCJ,2BAEIosB,EAFJ,EAEIA,cACAG,EAHJ,EAGIA,iBACAG,EAJJ,EAIIA,6BACAgB,EALJ,EAKIA,wBACAxF,EANJ,EAMIA,uBACA0G,EAPJ,EAOIA,kBACAE,EARJ,EAQIA,6BACAE,EATJ,EASIA,uBACAc,EAVJ,EAUIA,kBACAE,EAXJ,EAWIA,iBACAC,EAZJ,EAYIA,gBACAC,EAbJ,EAaIA,yBACAE,EAdJ,EAcIA,2BACAvF,EAfJ,EAeIA,sBACAuL,EAhBJ,EAgBIA,wBACAhN,EAjBJ,EAiBIA,iBACAC,EAlBJ,EAkBIA,gBACAgN,EAnBJ,EAmBIA,qBACAtG,EApBJ,EAoBIA,YACA1D,EArBJ,EAqBIA,UACAuB,EAtBJ,EAsBIA,sBACApE,EAvBJ,EAuBIA,uBACA8F,EAxBJ,EAwBIA,0BACAvrB,EAzBJ,EAyBIA,eACAjK,EA1BJ,EA0BIA,cA1BJ,OA6BIw3B,EA7BJ,EA6BIA,oBACAtI,EA9BJ,EA8BIA,kBACAkN,EA/BJ,EA+BIA,uBACAC,EAhCJ,EAgCIA,uBACApM,EAjCJ,EAiCIA,oBAIJ,OACE,eAACxpC,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAAStB,eAAe,aAAaC,UAAWJ,EAAQd,KAAlF,UACE,cAAC,GAAD,CACEwpC,kBAAmBA,EACnBC,eAAgBkN,EAChBjN,gBAAiBkN,EACjBjN,YAAaK,EACbJ,iBAAkBA,EAClBC,gBAAiBA,IAEnB,eAAC5sB,GAAYi6B,SAAb,CAAsBz8B,MAAOmyB,EAA7B,UACE,cAAC,GAAD,CACE1rC,UAAWJ,EAAQ2gB,gBACnB/G,gBAAiBwyB,EACjB7rC,IAAKmvC,IAEP,cAAC,GAAD,CACEtvC,UAAWJ,EAAQ2gB,gBACnBinB,uBAAwBA,EACxBrnC,IAAKyuC,IAEP,cAAC,GAAD,CACE5uC,UAAWJ,EAAQ2gB,gBACnB/G,gBAAiBk2B,EACjBvvC,IAAKovC,EACL3lB,aAAc4lB,IAEhB,cAAC,GAAD,CACExvC,UAAWJ,EAAQwqC,sBACnB5wB,gBAAiBwzB,OAGrB,eAACntC,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASC,WAAW,aAA9C,UACE,eAACzB,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,gBACfuB,WAAW,SACXtB,UAAWkC,YAAKtC,EAAQ2gB,gBAAiB3gB,EAAQ4gB,YACjDrf,KAAK,SALP,UAOE,cAAC,EAAD,CACEf,KAAK,gBACL61C,SAAQ,+BAA0B5yB,EAAetU,SAAzC,YACNsU,EAAerU,UADT,YAEJs/B,EAAyBA,EAAuBlmC,KAAO,IAC3D8tC,KAAM,UACNt5B,UAAWsxB,EACXhrC,QAAS,WAEP,OADAksC,EAAkB92B,QAAQ69B,aAAa,OAAQ/8B,EAAcd,UACtD,GAETnY,IAAK,SAACi2C,GAAD,OAAQhH,EAAkB92B,QAAU89B,KAE3C,eAACv2C,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,cAAC,GAAD,CACEkD,MACe,gBAAb0oC,GAA6C,OAAdA,EAC3BA,EACGkE,eAAe,QAAS,CAAEC,KAAM,UAAWE,QAAQ,IACnDnuB,MAAM,aAAa,GACtB,GAENia,OAAO,oBACPviB,MAAOoyB,EACP9vB,SAAU25B,EACV95B,QAAS2zB,EAAY/2B,QACrBgD,eAAe,0CACf9B,gBAAiB0zB,EACjBltC,UAAWkC,YAAKtC,EAAQyqC,YAAazqC,EAAQ2qC,kBAE/C,cAAC,EAAD,CACEnqC,KAAK,UACL8C,QAAS0tC,EACTh0B,SAAUwxB,UAIhB,cAAC,GAAD,CACEjE,sBAAuBA,EACvBnqC,UAAWJ,EAAQ2gB,kBAErB,cAAC,GAAD,CACExH,KAAMu1B,EACNt1B,uBAAwBqwB,EACxBpwB,oBAAqB4yB,EACrB1rC,IAAKw1C,WC6UTh3C,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,MAAI,GACFiD,MAAO,OACP3C,WAAYP,EAAMQ,QAAQyvB,eAAevvB,MAFvC,cAGDV,EAAMW,YAAYC,GAAG,MAAQ,CAAEoJ,cAAe,UAH7C,cAIDhK,EAAMW,YAAYC,GAAG,MAAQ,CAAEoJ,cAAe,UAJ7C,cAKDhK,EAAMW,YAAYC,GAAG,MAAQ,CAAEoJ,cAAe,UAL7C,OAiCSwtC,GAxBA,WACb,IAAMz2C,EAAUjB,KAChB,OACE,eAAC,IAAD,CAAyB23C,OAAQC,IAAIC,MAAOC,IAA5C,UACE,cAAC,GAAD,IACA,cAAC52C,EAAA,EAAD,CAAMC,WAAS,EAACuB,UAAU,SAASrB,UAAWJ,EAAQd,KAAtD,SAOE,cAAC,GAAD,MAOF,cAAC,EAAD,Q,UCtfAD,GAAQ63C,aAAe,CAC3Bl3C,YAAa,CACXqjB,OAAQ,CACNzhB,GAAI,EACJkd,GAAI,IACJq4B,GAAI,IACJC,GAAI,KACJC,GAAI,OAIRC,cAAe,CACbC,cACE,gEAGJ13C,QAAS,CACPyvB,eAAgB,CACdvvB,KAAM,UACN2e,KAAM,WAER5e,QAAS,CAEP03C,MAAO,UACPz3C,KAAM,WAERoC,UAAW,CAETpC,KAAM,WAGR8I,QAAS,CAGP2uC,MAAO,UACPz3C,KAAM,UACN2e,KAAM,UACN+4B,OAAQ,WAGVpwC,KAAM,CAEJmwC,MAAO,UACPz3C,KAAM,WAGRqB,MAAO,CAELrB,KAAM,WAGR4oC,QAAS,CAEP5oC,KAAM,WAGR23C,mBAAoB,CAClB33C,KAAM,0BAKN43C,GAAsB,SAACC,GAC3B,IAEIC,EAFEC,EAAW1sB,KAAK2sB,MAAMH,GACtBI,EAAaJ,EAAeE,EAWlC,OATmB,IAAfE,GAAmC,KAAfA,EACtBH,EAAeD,EACNI,EAAa,IACtBH,EAAeC,EACNE,GAAc,KAAQA,EAAa,IAC5CH,EAAeC,EAAW,GACjBE,GAAc,MACvBH,EAAeC,EAAW,GAErBD,GAGHx2C,GAAmB,SAAC42C,EAAiBC,GAAiB,IAAD,EAEnDC,EAAYD,EAAc,cAAgB,GAC5CE,EAAyB,GACzBC,EAA0B,GAC1BC,EAAyB,GAC7B,IAAK,IAAMC,KAAYN,EAAiB,CACtC,IACMl+B,EAPU,GAMUk+B,EAAgBM,GAGpCC,EAA8B,KAARz+B,EACtB0+B,EAAgBd,GAFc,MAAR59B,GAGtB2+B,EAAgBf,GAAoBa,GAC1CJ,EAAuBG,GAAvB,UAAsCx+B,EAAtC,aAAgDo+B,GAChDE,EAAwBE,GAAxB,UAAuCE,EAAvC,aAAyDN,GACzDG,EAAuBC,GAAvB,UAAsCG,EAAtC,aAAwDP,GAa1D,OAXyB,mBACtB94C,GAAMW,YAAYC,GAAG,MADC,eAElBm4C,IAFkB,cAItB/4C,GAAMW,YAAYC,GAAG,MAJC,eAKlBo4C,IALkB,cAOtBh5C,GAAMW,YAAYC,GAAG,MAPC,eAQlBq4C,IARkB,GAcrBjqC,GAAa,mCACnBhP,GAAM8f,WAAW9Q,WAAaA,GAC9BhP,GAAMgC,iBAAmBA,GAEzBhC,GAAMs5C,4BAAN,mBACGt5C,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAFd,cAIGnC,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SALd,GAQA,IAAQm3C,GAA+Bt5C,GAA/Bs5C,2BACR,GAAoDt5C,GAAMQ,QAAlDC,GAAR,GAAQA,QAAS+I,GAAjB,GAAiBA,QAASzH,GAA1B,GAA0BA,MAAOkuB,GAAjC,GAAiCA,eAEjCjwB,GAAMwB,MAAN,2BACKxB,GAAMwB,OADX,IAEE+3C,cAAe,CACbxqB,MAAO,UAETyqB,QAAS,CACP/2C,WAAY,UAEdg3C,YAAa,CACXxyC,eAAe,KAInBjH,GAAM8f,WAAW45B,MAAjB,uCACK15C,GAAM8f,WAAW45B,OADtB,IAEE1qC,eACGsqC,IAHL,IAIEv5B,WAAY,QAGd/f,GAAM8f,WAAW65B,MAAjB,2BACK35C,GAAM8f,WAAW65B,OADtB,OAEE3qC,cACA+Q,WAAY,OAHd,cAIG/f,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SALd,cAOGnC,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SARd,IAYAnC,GAAM8f,WAAW85B,IAAjB,GACE5qC,cACA+Q,WAAY,OAFd,cAGG/f,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAJd,cAMGnC,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAPd,GAWAnC,GAAM8f,WAAW+5B,QAAjB,2BACK75C,GAAM8f,WAAW+5B,SADtB,IAEE95B,WAAY,QAGd/f,GAAM85C,UAAY,CAChBN,QAAS,CACPv5C,KAAM,CACJ2f,UAAW,aACX+Q,SAAU,WAGd4oB,cAAe,CACb/iB,OAAO,aACLxnB,cACAtF,WAAY,IACZqW,WAAY,OACTu5B,KAIPS,WAAY,CACV95C,MAAI,GACF+D,QAAS,SADP,cAEDhE,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAHV,cAKDnC,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SANV,GASJ63C,cAAeh4C,GAAiB,CAAEG,SAAU,KAC5C83C,cAAej4C,GAAiB,CAAEG,SAAU,MAG9C+3C,UAAW,CACTj6C,KAAM,CACJyJ,WAAY,IACZywC,cAAe,MACf,UAAW,CACTvvC,gBAAiBnK,GAAQ03C,QAG7BiC,cAAe,CACbj4C,SAAU,OACV+G,QAAS,MACTrI,OAAQ,OACRoC,WAAY,KAGdo3C,cAAe,CACb,qCACGr6C,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SAFd,cAIGnC,GAAMW,YAAYC,GAAG,MAAQ,CAC5BuB,SAAU,SALd,IASF6E,UAAW,CACT/E,YAAa,MACb,4BAA6B,CAAEoH,WAAY,OAAQpH,YAAa,SAIpEq4C,SAAU,CACRC,8BAA+B,CAC7BrqB,UAAW,8BAEbsqB,WAAY,CACV5vC,gBAAiB7I,GAAMrB,MAEzByG,MAAOnF,GAAiB,CACtBG,SAAU,GACVtB,OAAQ,GACRsI,SAAU,MAIdsxC,iBAAkB,CAChBx6C,KAAM,CACJ2K,gBAAiBpB,GAAQ9I,KACzB,UAAW,CACTkK,gBAAiBpB,GAAQ6V,MAE3B,gBAAiB,CACfzU,gBAAiBpB,GAAQ9I,MAE3B,uEAAwE,CACtE2J,IAAK,OACLrH,YAAa,OAEf,0BAA2B,CACzBH,YAAapC,GAAQ03C,OAEvB,oBAAqB,CACnBn1C,YAAa,OAEf,qEAAsE,CACpEqI,OAAQ,YACRxI,YAAa7C,GAAMQ,QAAQuB,MAAMrB,OAGrCg6C,iBAAkB,CAChB96B,UAAW,aACX7V,WAAY,MACZC,cAAe,MACf9F,YAAa,OACb2D,aAAc,SAIlB8yC,aAAc,CACZ16C,KAAM,CACJY,OAAQ,OACR6I,WAAY,SAEdD,MAAO,CACLsW,WAAY,MACZlf,OAAQ,OACRsB,SAAU,SAGdy4C,eAAgB,CACd36C,KAAM,CACJY,OAAQ,SAIZg6C,aAAc,CACZ56C,KAAM,CACJ,WAAY,CACVY,OAAQ,QAGZi6C,QAAS,CACPl4C,aAAc,QAIlBm4C,oBAAqB,CACnB96C,KAAK,2BACA+B,GAAiB,CAAE01B,UAAW,MAD/B,IAEFx2B,eAAgB,gBAChBX,WAAY0vB,GAAe5Q,KAC3Bzc,aAAc,MACd,UAAW,CACTmyC,OAAQ,mBAEV,iBAAkB,CAChBrd,UAAW,QACX10B,YAAa,MACbJ,aAAc,MACdo4C,uBAAwB,MACxBC,wBAAyB,MACzBl4C,YAAa,QACbF,YAAa7C,GAAMQ,QAAQsC,UAAUpC,QAGzCw6C,QAAS,CACPr7B,SAAU,MACViI,OAAQ,MACR,iBAAkB,CAChBA,OAAQ,SAKdqzB,oBAAqB,CACnBl7C,KAAM,CACJM,WAAY0vB,GAAe5Q,KAC3BnW,QAAS,MACT8xC,uBAAwB,MACxBC,wBAAyB,QAI7BG,cAAe,CACbn7C,KAAM+B,GAAiB,CAAEkH,QAAS,MAGpCuwC,YAAa,CACXx5C,KAAM,CACJy3B,UAAW,SAIf2jB,SAAU,CACRC,WAAY,CACV15B,UAAW5hB,GAAMi4C,cAAcC,gBAInCqD,UAAW,CACTC,MAAO,CACL55B,UAAW5hB,GAAMi4C,cAAcC,gBAInCuD,aAAc,CACZx7C,KAAM,CACJ6B,MAAO,QACP,gBAAiB,CACfA,MAAO,WAKb45C,SAAU,CACRC,UAAW,CACT,oCAAqC,CACnChxC,aAAc,qBAEhB,6BAA8B,CAC5BA,aAAc,uBAKpBixC,UAAW,CACT37C,KAAM,CACJ6B,MAAO9B,GAAMQ,QAAQsC,UAAUpC,QAKtBV,UC1YT67C,I,mKACJ,WACE,OACE,qBAAK16C,UAAU,MAAf,SACE,cAAC26C,EAAA,EAAD,CAAe97C,MAAOA,GAAtB,SACE,cAAC,GAAD,Y,GALQ+7C,cAYHF,MCPAG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASttC,OACP,cAAC,IAAMutC,WAAP,UACE,cAAC,GAAD,MAEFnjC,SAASojC,eAAe,SAM1BX,O","file":"static/js/main.38d98d28.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: '0',\r\n    left: '0',\r\n    right: '0',\r\n    zIndex: '999',\r\n    background: theme.palette.primary.main,\r\n    [theme.breakpoints.up('xs')]: {\r\n      height: '100px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: '150px',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '150px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: '150px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport useStyles from './footer/useStyles';\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={classes.root}>\r\n      <Typography>Project for learning..¡</Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\n\r\nconst StandarButton = ({ text, ...props }, ref) => (\r\n  <Button size=\"small\" {...props} ref={ref}>\r\n    <Typography>{text}</Typography>\r\n  </Button>\r\n);\r\nexport default React.forwardRef(StandarButton);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hospitalIcon: {\r\n    color: theme.palette.alert.main,\r\n    ...theme.responsiveStyles({ marginRight: 24 }),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\r\n\r\nimport useStyles from './hospitalIcon/useStyles';\r\n\r\nconst HospitalIcon = () => {\r\n  const classes = useStyles();\r\n  return <LocalHospitalOutlinedIcon fontSize=\"large\" className={classes.hospitalIcon} />;\r\n};\r\n\r\nexport default HospitalIcon;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport HospitalIcon from './hospitalSection/HospitalIcon';\r\n\r\nconst HospitalSection = () => (\r\n  <Grid container item wrap=\"nowrap\" xs={4}>\r\n    <HospitalIcon />\r\n    <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n      <Typography variant=\"button\">SAN FELIPE</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"body2\">\r\n        MORENO 31\r\n      </Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default HospitalSection;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  userLogoBox: {\r\n    borderRadius: '50%',\r\n    borderColor: theme.palette.secondary.main,\r\n    borderStyle: 'solid',\r\n    borderWidth: '2px',\r\n    flexShrink: '0',\r\n    ...theme.responsiveStyles({\r\n      width: 58,\r\n      height: 58,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './userLogo/useStyles';\r\n\r\nconst UserLogo = ({ className, user }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container justifyContent=\"center\" className={clsx(classes.userLogoBox, className)}>\r\n      <Typography variant=\"button\">{user}</Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserLogo;\r\n","import Badge from '@material-ui/core/Badge';\r\n\r\nconst BadgeStandard = ({ children, badgeContent, ...props }) => (\r\n  <Badge\r\n    variant=\"standard\"\r\n    color=\"error\"\r\n    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n    max={9}\r\n    badgeContent={badgeContent}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </Badge>\r\n);\r\n\r\nexport default BadgeStandard;\r\n","import MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport StandardBadge from 'components/StandardBadge';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textRightMargin: theme.responsiveStyles({ marginRight: 19 }),\r\n  ifIcon: {\r\n    display: 'flex',\r\n  },\r\n  menuListItem: {\r\n    paddingLeft: '12px',\r\n  },\r\n}));\r\n\r\nconst StandardMenuItem = ({ label, onClick, badgeContent, icon, className, ...props }, ref) => {\r\n  const classes = useStyles(icon);\r\n  if (badgeContent) {\r\n    return (\r\n      <MenuItem\r\n        onClick={onClick}\r\n        {...props}\r\n        className={clsx(icon && classes.menuListItem)}\r\n        ref={ref}\r\n      >\r\n        <StandardBadge variant=\"dot\" badgeContent={badgeContent}>\r\n          <Typography className={clsx(classes.textRightMargin, icon && classes.ifIcon)}>\r\n            {icon}\r\n            {label}\r\n          </Typography>\r\n        </StandardBadge>\r\n      </MenuItem>\r\n    );\r\n  }\r\n  return (\r\n    <MenuItem onClick={onClick} className={clsx(icon && classes.menuListItem)} ref={ref}>\r\n      <Typography className={clsx(classes.ifIcon, className)}>\r\n        {icon}\r\n        {label}\r\n      </Typography>\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(StandardMenuItem);\r\n","import Menu from '@material-ui/core/Menu';\r\nimport { ArrowLeft } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nimport StandardMenuItem from './StandardMenuItem';\r\n\r\nconst NestedMenu = ({\r\n  items,\r\n  label,\r\n  anchorEl,\r\n  handleClose,\r\n  handleOnMouseLeaveNested,\r\n  handleOpen,\r\n  className,\r\n}) => {\r\n  const nestedArr = items.map((item) => (\r\n    <StandardMenuItem key={item} label={item} onClick={handleClose} />\r\n  ));\r\n\r\n  return (\r\n    <div onClick={handleOpen}>\r\n      <StandardMenuItem label={label} icon={<ArrowLeft fontSize=\"small\" />} className={className} />\r\n      <Menu\r\n        id=\"addButtonExtraOptions\"\r\n        MenuListProps={{ onMouseLeave: handleOnMouseLeaveNested }}\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        disableScrollLock={true}\r\n        getContentAnchorEl={undefined}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        <div style={{ pointerEvents: 'auto' }}>{nestedArr}</div>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NestedMenu;\r\n","import { useState } from 'react';\r\n\r\nconst useMenuHandlers = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElNested, setAnchorElNested] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenNested = (event) => {\r\n    if (anchorElNested === null) {\r\n      setAnchorElNested(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleCloseNested = () => {\r\n    setAnchorElNested(null);\r\n    handleClose();\r\n  };\r\n\r\n  const handleOnMouseLeaveNested = () => {\r\n    setAnchorElNested(null);\r\n  };\r\n\r\n  return {\r\n    anchorEl,\r\n    handleClick,\r\n    handleClose,\r\n    anchorElNested,\r\n    handleOpenNested,\r\n    handleCloseNested,\r\n    handleOnMouseLeaveNested,\r\n  };\r\n};\r\n\r\nexport default useMenuHandlers;\r\n","import Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\n\r\nimport NestedMenu from './standardDropDownMenu/NestedMenu';\r\nimport StandardMenuItem from './standardDropDownMenu/StandardMenuItem';\r\nimport useInput from './standardDropDownMenu/useInput';\r\n\r\nconst StandardDropDownMenu = ({\r\n  menuItemsArr,\r\n  buttonIconJSX,\r\n  buttonText,\r\n  badgePosition,\r\n  badgeContent,\r\n  className,\r\n}) => {\r\n  const {\r\n    anchorEl,\r\n    handleClick,\r\n    handleClose,\r\n    anchorElNested,\r\n    handleOpenNested,\r\n    handleCloseNested,\r\n    handleOnMouseLeaveNested,\r\n  } = useInput();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        startIcon={buttonIconJSX}\r\n        size=\"small\"\r\n        onClick={handleClick}\r\n        className={className}\r\n        disableRipple={true}\r\n      >\r\n        <Typography variant=\"button\">{buttonText}</Typography>\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        disableScrollLock={true}\r\n      >\r\n        {menuItemsArr.map((item, index) => {\r\n          if (typeof item === 'string') {\r\n            const badge = index === badgePosition ? badgeContent : null;\r\n            return (\r\n              <StandardMenuItem\r\n                key={item}\r\n                label={item}\r\n                onClick={handleClose}\r\n                badgeContent={badge}\r\n              />\r\n            );\r\n          } else if (typeof item === 'object' && item !== null) {\r\n            return (\r\n              <div key={`nested${item}`}>\r\n                <NestedMenu\r\n                  label={item.label}\r\n                  className={item.lastPatientClassName}\r\n                  items={item.nested}\r\n                  anchorEl={anchorElNested}\r\n                  handleClose={handleCloseNested}\r\n                  handleOpen={handleOpenNested}\r\n                  handleOnMouseLeaveNested={handleOnMouseLeaveNested}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StandardDropDownMenu;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuWithBadge: theme.responsiveStyles({ marginRight: 58 }),\r\n  menuWithBadgeZero: { marginRight: '0rem' },\r\n}));\r\n\r\nexport default useStyles;\r\n","import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport StandardBadge from 'components/StandardBadge';\r\nimport StandardDropDownMenu from 'components/StandardDropDownMenu';\r\n\r\nimport useStyles from './userOptions/useStyles';\r\n\r\nconst UserOptions = ({ badgeValue, badgePosition }) => {\r\n  const classes = useStyles();\r\n  const containerClass = badgeValue !== 0 ? classes.menuWithBadge : classes.menuWithBadgeZero;\r\n\r\n  return (\r\n    <StandardBadge badgeContent={badgeValue}>\r\n      <StandardDropDownMenu\r\n        menuItemsArr={['Perfil', 'Configuraciones', 'Administración', 'Cerrar Sesión']}\r\n        buttonIconJSX={<AccountCircleIcon />}\r\n        buttonText=\"Menu\"\r\n        badgePosition={badgePosition}\r\n        badgeContent={badgeValue}\r\n        className={containerClass}\r\n        id=\"userOptions\"\r\n      />\r\n    </StandardBadge>\r\n  );\r\n};\r\n\r\nexport default UserOptions;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  userLogo: theme.responsiveStyles({\r\n    marginRight: 48,\r\n  }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport UserLogo from 'components/UserLogo';\r\n\r\nimport UserOptions from './userSection/UserOptions';\r\nimport useStyles from './userSection/useStyles';\r\n\r\nconst UserSection = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container item wrap=\"nowrap\" justifyContent=\"flex-end\" xs={4}>\r\n      <UserLogo user=\"JC\" className={classes.userLogo} />\r\n      <UserOptions badgePosition={2} badgeValue={10} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserSection;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: theme.palette.primary.main,\r\n    ...theme.responsiveStyles({ paddingLeft: 37, paddingRight: 48 }),\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\n\r\nimport HospitalSection from './mainBar/HospitalSection';\r\nimport UserSection from './mainBar/UserSection';\r\nimport useStyles from './mainBar/useStyles';\r\n\r\nconst MainBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" className={classes.root}>\r\n      <HospitalSection />\r\n      <UserSection />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MainBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lastPatient: {\r\n    color: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import StandardDropDownMenu from 'components/StandardDropDownMenu';\r\n\r\nimport useStyles from './menuButton/useStyles';\r\n\r\nconst MenuButton = ({ lastPatient, buttonText, className, ...props }) => {\r\n  const classes = useStyles();\r\n  const menuItemsArr = [\r\n    '+ Nuevo Paciente',\r\n    lastPatient\r\n      ? {\r\n          label: lastPatient,\r\n          lastPatientClassName: lastPatient ? classes.lastPatient : null,\r\n          nested: ['+ Nuevo Pre-Q', '+ Nuevo Proc.'],\r\n        }\r\n      : null,\r\n  ];\r\n  return (\r\n    <StandardDropDownMenu\r\n      menuItemsArr={menuItemsArr}\r\n      buttonText={buttonText}\r\n      className={className}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MenuButton;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    borderRadius: '4px',\r\n  },\r\n  containerBorder: {\r\n    borderStyle: 'solid',\r\n    borderColor: theme.palette.secondary.main,\r\n    borderWidth: '2px',\r\n  },\r\n  growClass: {\r\n    flexGrow: '1',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './barElement/useStyles';\r\n\r\nconst BarElement = ({ className, children, noBorder, grow, ...props }) => {\r\n  const classes = useStyles();\r\n  const containerClass = clsx(\r\n    classes.container,\r\n    !noBorder && classes.containerBorder,\r\n    grow && classes.growClass,\r\n    className\r\n  );\r\n  const responsiveContainer = (\r\n    <Grid item className={containerClass} {...props} xs={false}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n  const staticContainer = (\r\n    <div className={containerClass} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return props.container || props.item ? responsiveContainer : staticContainer;\r\n};\r\n\r\nexport default BarElement;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    alignSelf: 'stretch',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nimport useStyles from './input/useStyles';\r\n\r\nconst Input = ({ className, ...props }, ref) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      size=\"small\"\r\n      fullWidth\r\n      hiddenLabel\r\n      className={clsx(classes.root, className)}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(Input);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: '0',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '7.6rem',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '13.5rem',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '15rem',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport BarElement from 'components/BarElement';\r\n\r\nimport useStyles from './barTitle/useStyles';\r\n\r\nconst BarTitle = ({ sectionName }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <BarElement noBorder className={classes.root} container justifyContent=\"center\">\r\n      <Typography variant=\"h6\">{sectionName}</Typography>\r\n    </BarElement>\r\n  );\r\n};\r\n\r\nexport default BarTitle;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '&.MuiButton-root': {\r\n    padding: '6px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      paddingLeft: '9px',\r\n      minWidth: '30px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: '9px',\r\n      minWidth: '34px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingLeft: '10px',\r\n      minWidth: '37.5px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './iconButton/useStyles';\r\n\r\nconst IconButton = ({ startIcon, className, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      size=\"small\"\r\n      startIcon={startIcon}\r\n      className={clsx(classes['&.MuiButton-root'], className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nexport default IconButton;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: '0',\r\n    ...theme.responsiveStyles({\r\n      marginLeft: 48,\r\n      width: 370,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIosRoundedIcon from '@material-ui/icons/ArrowBackIosRounded';\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\nimport BarElement from 'components/BarElement';\r\nimport IconButton from 'components/IconButton';\r\n\r\nimport useStyles from './dateNav/useStyles';\r\n\r\nconst DateNav = ({ date }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <BarElement container justifyContent=\"space-between\" noBorder className={classes.root}>\r\n      <IconButton startIcon={<ArrowBackIosRoundedIcon />} />\r\n      <Typography>{date}</Typography>\r\n      <IconButton startIcon={<ArrowForwardIosRoundedIcon />} />\r\n    </BarElement>\r\n  );\r\n};\r\n\r\nexport default DateNav;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: theme.palette.ternary.main,\r\n    ...theme.responsiveStyles({ paddingLeft: 48, paddingRight: 48 }),\r\n  },\r\n  input: {\r\n    '@global': {\r\n      '.MuiOutlinedInput-notchedOutline > legend': {\r\n        lineHeight: '12px',\r\n      },\r\n    },\r\n  },\r\n  barElement: { minWidth: '245px' },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport BarElement from 'components/BarElement';\r\nimport Input from 'components/Input';\r\n\r\nimport BarTitle from './navigationBar/BarTitle';\r\nimport DateNav from './navigationBar/DateNav';\r\nimport useStyles from './navigationBar/useStyles';\r\n\r\n//GUIDELANCE: Depending on the current section of the App render conditionally text in BarTitle, and render DateNav only when Agenda is rendered\r\n\r\n//GUIDELANCE when some of the buttons of DateNav they been pressed will fire a request of a specified quantity of item with the corresponding date\r\n\r\nconst NavigationBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container wrap=\"nowrap\" className={classes.root}>\r\n      <BarTitle sectionName=\"Agenda\" />\r\n      <BarElement noBorder grow className={classes.barElement}>\r\n        <Input\r\n          placeholder=\"Buscar Paciente por nombre o DNI\"\r\n          id=\"mainSearchBar\"\r\n          className={classes.input}\r\n        />\r\n      </BarElement>\r\n      <DateNav date=\"01/ Oct/ 2020\" />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonsBar: {\r\n    background: theme.palette.primary.main,\r\n    paddingTop: '5px',\r\n    paddingBottom: '5px',\r\n    position: 'relative',\r\n    [theme.breakpoints.up('xs')]: {\r\n      justifyContent: 'space-between',\r\n      flexDirection: 'row',\r\n      paddingLeft: '24px',\r\n      paddingRight: '24px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      justifyContent: 'center',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: '30px',\r\n      paddingRight: '30px',\r\n    },\r\n  },\r\n  buttonsContainer: {\r\n    width: 'initial',\r\n  },\r\n  leftButtonMargin: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '24px',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      marginLeft: '96px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginLeft: '120px',\r\n    },\r\n  },\r\n  root: {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  menuButton: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      position: 'static',\r\n    },\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      position: 'absolute',\r\n      right: '24px',\r\n      top: '5px',\r\n    },\r\n\r\n    [theme.breakpoints.up('lg')]: {\r\n      right: '30px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport StandarButton from 'components/StandarButton';\r\nimport React from 'react';\r\n\r\nimport MainBar from './navBar/MainBar';\r\nimport MenuButton from './navBar/MenuButton';\r\nimport NavegationBar from './navBar/NavigationBar';\r\nimport useStyles from './navBar/useStyles';\r\n\r\n//GUIDELANCE if one of the central buttons is clicked it will fire a request of procedures or pre-surgicals by date as applicable\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid className={classes.root}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <MainBar />\r\n        <NavegationBar />\r\n      </Grid>\r\n      <Grid container alignItems=\"center\" className={classes.buttonsBar}>\r\n        <Grid container justifyContent=\"center\" className={classes.buttonsContainer}>\r\n          <StandarButton text=\"Pre-Quirúrgicos\" />\r\n          <StandarButton text=\"Procedimientos\" className={classes.leftButtonMargin} />\r\n        </Grid>\r\n        <MenuButton\r\n          lastPatient=\"Marcos Colabitti\"\r\n          buttonText=\"+ Nuevo\"\r\n          className={classes.menuButton}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodyMainHeaderContainers: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    borderBottom: '1mm solid #2DBCB6',\r\n    backgroundColor: '#A8B8C2',\r\n    marginBottom: '3mm',\r\n    width: '100%',\r\n  },\r\n  bodyMainHeaderText: {\r\n    fontSize: '4mm',\r\n    paddingVertical: '1mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './bodyMainHeaderPDF/styles';\r\n\r\nconst BodyMainHeaderPDF = ({ text }) => (\r\n  <View style={styles.bodyMainHeaderContainers}>\r\n    <Text style={styles.bodyMainHeaderText}>{text}</Text>\r\n  </View>\r\n);\r\n\r\nexport default BodyMainHeaderPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  headerColumnCells: {\r\n    width: '100%',\r\n    borderBottom: '1pt solid #606e7b',\r\n    backgroundColor: '#9dc3c2',\r\n  },\r\n  columnHeaderText: {\r\n    fontSize: '4mm',\r\n    padding: '1mm',\r\n  },\r\n  bodyText: {\r\n    padding: '1mm',\r\n    paddingLeft: '2mm',\r\n    fontSize: '4mm',\r\n  },\r\n  rootContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    border: '1pt solid #606e7b',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './tableColumnPDF/styles';\r\n\r\nconst TableColumnPDF = ({ headerText, bodyText, rootContainerStyle, textStyle }) => (\r\n  <View style={{ ...styles.rootContainer, ...rootContainerStyle }}>\r\n    <View style={styles.headerColumnCells}>\r\n      <Text style={{ ...styles.columnHeaderText, ...textStyle }}>{`${headerText}:`}</Text>\r\n    </View>\r\n    {bodyText !== '' ? (\r\n      <Text style={{ ...styles.bodyText, ...textStyle }}>{bodyText}</Text>\r\n    ) : (\r\n      <Text style={styles.bodyText}>N/D</Text>\r\n    )}\r\n  </View>\r\n);\r\nexport default TableColumnPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n  },\r\n  header: {\r\n    height: '100%',\r\n    padding: '1mm',\r\n    fontSize: '4mm',\r\n    width: '32mm',\r\n    border: '1pt solid #606e7b',\r\n    backgroundColor: '#9dc3c2',\r\n  },\r\n  text: {\r\n    fontSize: '4mm',\r\n  },\r\n  textContainer: {\r\n    height: '100%',\r\n    width: '128mm',\r\n    padding: '1mm',\r\n    border: '1pt solid #606e7b',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './tableRowPDF/styles';\r\n\r\nconst TableRowPDF = ({ headerText, bodyText, rootContainer }) => (\r\n  <View style={{ ...styles.rootContainer, ...rootContainer }} wrap={false}>\r\n    <Text style={styles.header}>{`${headerText}:`}</Text>\r\n    <View style={styles.textContainer}>\r\n      {bodyText !== '' ? (\r\n        <Text style={styles.text}>{bodyText}</Text>\r\n      ) : (\r\n        <Text style={styles.text}>N/D</Text>\r\n      )}\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default TableRowPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  tableContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '4mm',\r\n  },\r\n  rowTableContainer: {\r\n    marginBottom: '4mm',\r\n  },\r\n  mainBody: {\r\n    borderBottom: '1pt solid #d8d8d8',\r\n    marginBottom: '4mm',\r\n  },\r\n  alertTextColor: {\r\n    color: '#f44336',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\nimport TableColumnPDF from 'PDF/layout/TableColumnPDF';\r\nimport TableRowPDF from 'PDF/layout/TableRowPDF';\r\n\r\nimport styles from './airwayExamSectionPDF/styles';\r\n\r\nconst AirwayExamSectionPDF = ({ valuesObj }) => {\r\n  const {\r\n    mouthOpening,\r\n    malampati,\r\n    thyromentalDistance,\r\n    goniomentalDistance,\r\n    neckMovement,\r\n    teeth,\r\n    difficultAirwayForetell,\r\n    observations,\r\n  } = valuesObj;\r\n\r\n  const teethValue = teeth === 'complete' ? 'Completa' : 'Incompleta';\r\n  const difficultAirwayForetellValue = difficultAirwayForetell === 'yes' ? 'Sí' : 'No';\r\n\r\n  return (\r\n    <View wrap={false}>\r\n      <BodyMainHeaderPDF text=\"Exámen Vía Aérea.\" />\r\n      <View style={styles.mainBody}>\r\n        <View style={styles.tableContainer}>\r\n          <TableColumnPDF headerText=\"Ap. Bucal\" bodyText={mouthOpening} />\r\n          <TableColumnPDF headerText=\"Malampati\" bodyText={malampati} />\r\n          <TableColumnPDF headerText=\"Dist. Tiroment.\" bodyText={thyromentalDistance} />\r\n          <TableColumnPDF headerText=\"Dist. Gonioment.\" bodyText={goniomentalDistance} />\r\n          <TableColumnPDF headerText=\"Mov. Cuello\" bodyText={neckMovement} />\r\n          <TableColumnPDF headerText=\"Dentadura\" bodyText={teethValue} />\r\n        </View>\r\n        <View style={styles.tableContainer}>\r\n          <TableColumnPDF\r\n            headerText=\"Prev. Vía Aérea Dificil\"\r\n            bodyText={difficultAirwayForetellValue}\r\n            textStyle={difficultAirwayForetell === 'yes' ? styles.alertTextColor : undefined}\r\n          />\r\n        </View>\r\n      </View>\r\n      <TableRowPDF\r\n        headerText=\"Observaciones\"\r\n        bodyText={observations}\r\n        rootContainer={styles.rowTableContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AirwayExamSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  tableContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n  columnRootContainer: {\r\n    marginBottom: '4mm',\r\n  },\r\n  anestheticPlanColumnRootContainer: {\r\n    marginBottom: '4mm',\r\n    width: '36mm',\r\n  },\r\n  rowTableContainer: {\r\n    marginBottom: '4mm',\r\n  },\r\n  borderBottom: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    borderBottom: '1pt solid #d8d8d8',\r\n    marginBottom: '4mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\nimport TableColumnPDF from 'PDF/layout/TableColumnPDF';\r\nimport TableRowPDF from 'PDF/layout/TableRowPDF';\r\n\r\nimport styles from './bottomSectionPDF/styles';\r\n\r\nconst BottomSectionPDF = ({ valuesObj }) => {\r\n  const {\r\n    psychicState,\r\n    psychicStateObservation,\r\n    anestheticPlan,\r\n    anestheticPlanObservation,\r\n    bloodSampleRequest,\r\n    iCURequest,\r\n    interconsultations,\r\n    extraObservations,\r\n  } = valuesObj;\r\n  const psychicStateLabels = {\r\n    normal: 'Normal',\r\n    depress: 'Deprimido',\r\n    anxious: 'Ansioso',\r\n    exited: 'Exitado',\r\n    comatose: 'Comatoso',\r\n    hyperemotive: 'Hiperemotivo',\r\n  };\r\n  const anestheticPlanLabels = {\r\n    generalAnesthesia: 'Anestesia General',\r\n    subarachnoid: 'Subaracnoidea',\r\n    peridural: 'Peridural',\r\n    peripheralLock: 'Bloqueo Periférico',\r\n    sedation: 'Sedación',\r\n    combined: 'Combinada',\r\n  };\r\n  const getValue = (key, obj) => {\r\n    if (key !== '') {\r\n      return obj[key];\r\n    } else {\r\n      return '';\r\n    }\r\n  };\r\n  const setNewValue = (string) => (string === 'yes' ? 'Sí' : 'No');\r\n  const bloodSampleRequestValue = setNewValue(bloodSampleRequest);\r\n  const iCURequestValue = setNewValue(iCURequest);\r\n  const psychicStateValue = getValue(psychicState, psychicStateLabels);\r\n  const anestheticPlanValue = getValue(anestheticPlan, anestheticPlanLabels);\r\n  return (\r\n    <View wrap={false}>\r\n      <BodyMainHeaderPDF text=\"Estado Psíquico Pre-Operatorio.\" />\r\n      <View style={styles.tableContainer}>\r\n        <TableColumnPDF\r\n          headerText=\"Estado Psíquico\"\r\n          bodyText={psychicStateValue}\r\n          rootContainerStyle={styles.columnRootContainer}\r\n        />\r\n        <TableRowPDF\r\n          headerText=\"Observaciones\"\r\n          bodyText={psychicStateObservation}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n      </View>\r\n      <BodyMainHeaderPDF text=\"Plán Anestésico Sugerido.\" />\r\n      <View style={styles.tableContainer}>\r\n        <TableColumnPDF\r\n          headerText=\"Plán Anestésico\"\r\n          bodyText={anestheticPlanValue}\r\n          rootContainerStyle={styles.anestheticPlanColumnRootContainer}\r\n        />\r\n        <TableRowPDF\r\n          headerText=\"Observaciones\"\r\n          bodyText={anestheticPlanObservation}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n      </View>\r\n      <BodyMainHeaderPDF text=\"Extras.\" />\r\n      <View style={styles.tableContainer}>\r\n        <View style={styles.borderBottom}>\r\n          <TableColumnPDF\r\n            headerText=\"Solicitud de Sangre\"\r\n            bodyText={bloodSampleRequestValue}\r\n            rootContainerStyle={styles.columnRootContainer}\r\n          />\r\n          <TableColumnPDF\r\n            headerText=\"Solicitud de UTI\"\r\n            bodyText={iCURequestValue}\r\n            rootContainerStyle={styles.columnRootContainer}\r\n          />\r\n          <TableRowPDF\r\n            headerText=\"Interconsultas\"\r\n            bodyText={interconsultations}\r\n            rootContainer={styles.rowTableContainer}\r\n          />\r\n        </View>\r\n        <TableRowPDF\r\n          headerText=\"Observaciones\"\r\n          bodyText={extraObservations}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BottomSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  footerSection: {\r\n    backgroundColor: '#b6c7d1',\r\n    borderTop: '2mm solid #2DBCB6',\r\n    position: 'absolute',\r\n    bottom: '0mm',\r\n    width: '100%',\r\n    height: '13mm',\r\n  },\r\n  footerSectionText: {\r\n    position: 'absolute',\r\n    top: '3mm',\r\n    right: '25mm',\r\n    fontSize: '4mm',\r\n    fontFamily: 'Helvetica-Oblique',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './footerSectionPDF/styles';\r\n\r\nconst FooterSectionPDF = () => (\r\n  <View fixed style={styles.footerSection}>\r\n    <Text\r\n      style={styles.footerSectionText}\r\n      render={({ pageNumber, totalPages }) => `Página ${pageNumber} de ${totalPages}.`}\r\n    />\r\n  </View>\r\n);\r\nexport default FooterSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  headerSection: {\r\n    backgroundColor: '#426175',\r\n    borderBottom: '5mm solid #2DBCB6',\r\n    width: '100%',\r\n    paddingVertical: '5mm',\r\n    paddingHorizontal: '25mm',\r\n    marginBottom: '3mm',\r\n  },\r\n  headerText: {\r\n    color: '#e9ebec',\r\n    fontFamily: 'Helvetica-Oblique',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './headerSectionPDF/styles';\r\n\r\nconst HeaderSectionPDF = () => (\r\n  <View fixed style={styles.headerSection}>\r\n    <Text style={[styles.headerText, { fontSize: '7mm' }]}>\r\n      Hospital San Felipe, Moreno nro. 31.\r\n    </Text>\r\n    <Text style={[styles.headerText, { fontSize: '5mm', marginBottom: '2mm' }]}>\r\n      San Nicolás, provincia de Buenos Aires.\r\n    </Text>\r\n    <Text style={[styles.headerText, { fontSize: '5mm' }]}>Area Cirugía.</Text>\r\n  </View>\r\n);\r\n\r\nexport default HeaderSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodySubSectionHeaderContainers: {\r\n    flexDirection: 'row',\r\n  },\r\n  bodySubSectionHeadersText: {\r\n    padding: '1mm',\r\n    marginBottom: '2mm',\r\n    fontSize: '4mm',\r\n    backgroundColor: '#A8B8C2',\r\n    borderBottom: '1mm solid #2DBCB6',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './bodySubSectionHeaderPDF/styles';\r\n\r\nconst BodySubSectionHeaderPDF = ({ text }) => (\r\n  <View style={styles.bodySubSectionHeaderContainers}>\r\n    <Text style={styles.bodySubSectionHeadersText}>{text}</Text>\r\n  </View>\r\n);\r\nexport default BodySubSectionHeaderPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  tableRow: {\r\n    paddingVertical: '1mm',\r\n    flexDirection: 'row',\r\n    borderBottom: '1pt solid #d8d8d8',\r\n  },\r\n  rowHeaderText: {\r\n    fontSize: '4mm',\r\n    width: '22mm',\r\n  },\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './simpleTableRow/styles';\r\n\r\nconst SimpleTableRow = ({ headerText, text }) => (\r\n  <View style={styles.tableRow}>\r\n    <Text style={styles.rowHeaderText}>{headerText}</Text>\r\n    <Text style={styles.bodyText}>{text}</Text>\r\n  </View>\r\n);\r\n\r\nexport default SimpleTableRow;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  sectionWithOutBorder: {\r\n    marginBottom: '4mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport BodySubSectionHeaderPDF from 'PDF/layout/BodySubSectionHeaderPDF';\r\n\r\nimport SimpleTableRow from './SimpleTableRow';\r\nimport styles from './patientDataTablePDF/styles';\r\n\r\nconst PatientDataTable = ({ currentPatientData }) => {\r\n  const { lastName, firstName, iDNumber, gender, age } = currentPatientData;\r\n\r\n  return (\r\n    <View style={styles.sectionWithOutBorder}>\r\n      <BodySubSectionHeaderPDF text=\"Paciente:\" />\r\n      <SimpleTableRow headerText=\"Apellido:\" text={lastName} />\r\n      <SimpleTableRow headerText=\"Nombre:\" text={firstName} />\r\n      <SimpleTableRow headerText=\"DNI:\" text={iDNumber} />\r\n      <SimpleTableRow\r\n        headerText=\"Género:\"\r\n        text={`${gender === 'male' ? 'Masculino' : 'Femenino'}`}\r\n      />\r\n      <SimpleTableRow headerText=\"Edad:\" text={`${age} años`} />\r\n    </View>\r\n  );\r\n};\r\nexport default PatientDataTable;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  tableContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '4mm',\r\n  },\r\n  rowTableContainer: {\r\n    marginBottom: '4mm',\r\n  },\r\n  mainBody: {\r\n    borderBottom: '1pt solid #d8d8d8',\r\n    marginBottom: '4mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\nimport TableColumnPDF from 'PDF/layout/TableColumnPDF';\r\nimport TableRowPDF from 'PDF/layout/TableRowPDF';\r\n\r\nimport styles from './physicalExamSectionPDF/styles';\r\n\r\nconst PhysicalExamSectionPDF = ({ valuesObj }) => {\r\n  const {\r\n    cardiacAuscultation,\r\n    pulmonaryAuscultation,\r\n    spine,\r\n    diastolicPressure,\r\n    systolicPressure,\r\n    pulse,\r\n    asaLevel,\r\n    painLevel,\r\n    weight,\r\n    height,\r\n    vTFactor,\r\n    observations,\r\n    bMIndex,\r\n    bMI,\r\n    bMIC,\r\n    tV,\r\n    bloodType,\r\n    factorRh,\r\n  } = valuesObj;\r\n\r\n  const bloodTypeValue = bloodType !== '' ? `${bloodType} - ${factorRh}` : '';\r\n  const bloodPresureValue =\r\n    systolicPressure !== '' ? `${systolicPressure}/${diastolicPressure}` : '';\r\n\r\n  return (\r\n    <View wrap={false}>\r\n      <BodyMainHeaderPDF text=\"Exámen Físico.\" />\r\n      <View style={styles.mainBody}>\r\n        <View style={styles.tableContainer}>\r\n          <TableColumnPDF headerText=\"Peso (Kg)\" bodyText={weight} />\r\n          <TableColumnPDF headerText=\"Altura (Cm)\" bodyText={height} />\r\n          <TableColumnPDF headerText=\"Factor VT (Ml/kg)\" bodyText={vTFactor} />\r\n          <TableColumnPDF headerText=\"IMC (Kg/M2)\" bodyText={bMIndex} />\r\n          <TableColumnPDF headerText=\"PI (Kg)\" bodyText={bMI} />\r\n          <TableColumnPDF headerText=\"PIC (Kg)\" bodyText={bMIC} />\r\n          <TableColumnPDF headerText=\"VT (Ml)\" bodyText={tV} />\r\n        </View>\r\n        <View style={styles.tableContainer}>\r\n          <TableColumnPDF headerText=\"Presión Arterial (mmHg)\" bodyText={bloodPresureValue} />\r\n          <TableColumnPDF headerText=\"Pulso (ppm)\" bodyText={pulse} />\r\n          <TableColumnPDF headerText=\"Tipo de Sangre\" bodyText={bloodTypeValue} />\r\n          <TableColumnPDF headerText=\"Grado de Dolor\" bodyText={painLevel} />\r\n          <TableColumnPDF headerText=\"ASA\" bodyText={asaLevel} />\r\n        </View>\r\n        <TableRowPDF\r\n          headerText=\"Auscultación Pulmonar\"\r\n          bodyText={pulmonaryAuscultation}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n        <TableRowPDF\r\n          headerText=\"Auscultación Cardíaca\"\r\n          bodyText={cardiacAuscultation}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n        <TableRowPDF\r\n          headerText=\"Columna Vertebral\"\r\n          bodyText={spine}\r\n          rootContainer={styles.rowTableContainer}\r\n        />\r\n      </View>\r\n      <TableRowPDF\r\n        headerText=\"Observaciones\"\r\n        bodyText={observations}\r\n        rootContainer={styles.rowTableContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PhysicalExamSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '3mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport BodySubSectionHeaderPDF from 'PDF/layout/BodySubSectionHeaderPDF';\r\n\r\nimport styles from './preSurgicalItemPDF/styles';\r\n\r\nconst PreSurgicalItemPDF = ({ title, children }) => (\r\n  <View style={styles.rootContainer} wrap={false}>\r\n    <BodySubSectionHeaderPDF text={`${title}:`} />\r\n    {children}\r\n  </View>\r\n);\r\n\r\nexport default PreSurgicalItemPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  rowHeaderText: {\r\n    fontSize: '4mm',\r\n    width: '35mm',\r\n  },\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n    width: '125mm',\r\n  },\r\n  rowContainer: {\r\n    paddingVertical: '1mm',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    borderBottom: '1pt solid #d8d8d8',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\n\r\nimport styles from './preSurgicalClinicalItemBodyPDF/styles';\r\n\r\nconst PreSurgicalClinicalItemBodyPDF = ({ valuesObj }) => {\r\n  const { observations, conditions } = valuesObj;\r\n  const conditionsString = conditions.join(' - ');\r\n  return (\r\n    <View>\r\n      {conditions.length !== 0 ? (\r\n        <View style={styles.rowContainer}>\r\n          <Text style={styles.rowHeaderText}>Condiciones:</Text>\r\n          <Text style={styles.bodyText}>{conditionsString}</Text>\r\n        </View>\r\n      ) : null}\r\n      {observations !== '' ? (\r\n        <View style={styles.rowContainer}>\r\n          <Text style={styles.rowHeaderText}>Observaciones:</Text>\r\n          <Text style={styles.bodyText}>{observations}</Text>\r\n        </View>\r\n      ) : null}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalClinicalItemBodyPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    marginBottom: '4mm',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  firstColumnTable: {\r\n    width: '80mm',\r\n  },\r\n  firstSectionContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    marginLeft: '32mm',\r\n  },\r\n\r\n  remainingColumnsTable: {\r\n    width: '24mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport TableColumnPDF from 'PDF/layout/TableColumnPDF';\r\nimport TableRowPDF from 'PDF/layout/TableRowPDF';\r\n\r\nimport styles from './treatmentItemPDF/styles';\r\n\r\nconst TreatmentItemPDF = ({ valuesObj }) => {\r\n  const { drug, startingTreatmentDate, endingTreatmentDate, observations } = valuesObj;\r\n  return (\r\n    <View style={styles.rootContainer} wrap={false}>\r\n      <View style={styles.firstSectionContainer}>\r\n        <TableColumnPDF\r\n          headerText=\"Medicación\"\r\n          bodyText={drug}\r\n          rootContainerStyle={styles.firstColumnTable}\r\n        />\r\n        <TableColumnPDF\r\n          headerText=\"Desde\"\r\n          bodyText={startingTreatmentDate}\r\n          rootContainerStyle={styles.remainingColumnsTable}\r\n        />\r\n        <TableColumnPDF\r\n          headerText=\"Hasta\"\r\n          bodyText={endingTreatmentDate}\r\n          rootContainerStyle={styles.remainingColumnsTable}\r\n        />\r\n      </View>\r\n      <TableRowPDF headerText=\"Observaciones\" bodyText={observations} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TreatmentItemPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n  },\r\n  rootContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '3mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\n\r\nimport TreatmentItemPDF from './treatmentListPDF/TreatmentItemPDF';\r\nimport styles from './treatmentListPDF/styles';\r\n\r\nconst TreatmenstListPDF = ({ valuesArr }) => {\r\n  const isDataAvailable = valuesArr.length === 0 ? false : true;\r\n  let itemsToRender;\r\n  if (isDataAvailable) {\r\n    itemsToRender = valuesArr.map((item) => (\r\n      <TreatmentItemPDF key={item['drug']} valuesObj={item} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.rootContainer}>\r\n      <BodyMainHeaderPDF text=\"Tratamientos\" />\r\n      {isDataAvailable ? itemsToRender : <Text style={styles.bodyText}>No.</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TreatmenstListPDF;\r\n","import { Text, View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\n\r\nimport PreSurgicalItemPDF from './PreSurgicalItemPDF';\r\nimport styles from './preSurgicalClinicalSectionPDF/styles';\r\nimport PreSurgicalClinicalItemBodyPDF from './preSurgicalItemPDF/PreSurgicalClinicalItemBodyPDF';\r\nimport TreatmenstList from './preSurgicalItemPDF/TreatmentListPDF';\r\n\r\nconst PreSurgicalClinicalSectionPDF = ({ valuesObj }) => {\r\n  const { preSurgicalClinicalConditions, treatments } = valuesObj;\r\n\r\n  const labels = [\r\n    {\r\n      key: 'cardiovascular',\r\n      label: 'Afecciones Cardiovasculares',\r\n      conditionsLabels: {\r\n        checkboxHypertension: 'Hipertensión',\r\n        checkboxArrhythmias: 'Arrítamias',\r\n        checkboxStableAnginaCF: 'Ángor est. CF',\r\n        checkboxUnstableAngina: 'Ángor inest.',\r\n        checkboxAMIDate: 'IAM Tiempo',\r\n        checkboxValvularHeartDisease: 'Valvulopatía',\r\n        checkboxDyspnoeaCF: 'Disnea CF',\r\n        checkboxheartSurgeryDate: 'Cirugía Card. Tiempo',\r\n        checkboxPacemaker: 'Marcapaso',\r\n        checkboxEdema: 'Edemas',\r\n        checkboxVaricoseVeins: 'Várices',\r\n      },\r\n    },\r\n    {\r\n      key: 'respiratory',\r\n      label: 'Afecciones Respiratorias',\r\n      conditionsLabels: {\r\n        checkboxAsthma: 'Asma',\r\n        checkboxCOPD: 'EPOC',\r\n        checkboxSmoking: 'Tabaquismo',\r\n        checkboxCough: 'Tos',\r\n        checkboxExpectoration: 'Expectoración',\r\n        checkboxDyspnoeaCF: 'Disnea CF',\r\n      },\r\n    },\r\n    {\r\n      key: 'ocular',\r\n      label: 'Condición Ocular',\r\n      conditionsLabels: {\r\n        checkboxGlaucoma: 'Glaucoma',\r\n        checkboxWearingContactLenses: 'Uso de lentes de contacto',\r\n      },\r\n    },\r\n    {\r\n      key: 'gastrointestinal',\r\n      label: 'Afecciones Gastrointestinales',\r\n      conditionsLabels: {\r\n        checkboxAcidSensitiveSyndrome: 'Sme. Acido Sensitivo',\r\n        checkboxHiatalHerniaReflux: 'Hernia Hiato - reflujo',\r\n        checkboxOcclusion: 'Oclusión',\r\n        checkboxLiverFailure: 'Insuf. Hepática',\r\n        checkboxHepatitis: 'Hepatitis',\r\n        checkboxCirrhosis: 'Cirrosis',\r\n        checkboxJaundiceCholectosis: 'Ictericia - Colectosis',\r\n      },\r\n    },\r\n    {\r\n      key: 'urinary',\r\n      label: 'Afecciones Urinarias',\r\n      conditionsLabels: {\r\n        checkboxChronicKidneyFailure: 'Insuf. renal crónica',\r\n        checkboxAcuteRenalFailure: 'Insuf. renal aguda',\r\n        checkboxDialysis: 'Diálisis',\r\n        checkboxIncontinence: 'Incontinencia',\r\n        checkboxDysuriaPolish: 'Disuria - Polaquiuria',\r\n      },\r\n    },\r\n    {\r\n      key: 'allergies',\r\n      label: 'Alergias',\r\n      conditionsLabels: {\r\n        checkboxMedicines: 'Medicamentos',\r\n      },\r\n    },\r\n    {\r\n      key: 'endocrineMetabolic',\r\n      label: 'Afecciones Endocrino Metabolicas',\r\n      conditionsLabels: {\r\n        checkboxObesity: 'Obesidad',\r\n        checkboxDiabetes: 'Diabetes',\r\n        checkboxHyperthyroidism: 'Hipertirodismo',\r\n        checkboxHypothyroidism: 'Hipotirodismo',\r\n        checkboxAdrenals: 'Suprarrenales',\r\n        checkboxMalnutrition: 'Desnutrición',\r\n        checkboxDehydration: 'Deshidratación',\r\n        checkboxHyperthermia: 'Hipertermia',\r\n        checkboxAlcoholism: 'Alcoholismo',\r\n      },\r\n    },\r\n    {\r\n      key: 'neuromuscular',\r\n      label: 'Afecciones Neuromusculares',\r\n      conditionsLabels: {\r\n        checkboxCVA: 'ACV',\r\n        checkboxTIA: 'AIT',\r\n        checkboxParesis: 'Paresia',\r\n        checkboxParaesthesia: 'Parestesia',\r\n        checkboxAphasias: 'Afasias',\r\n        checkboxSeizures: 'Convulsiones',\r\n        checkboxIntracranialHypertension: 'Hiper. endocraneana',\r\n        checkboxMyopathies: 'Miopatías',\r\n      },\r\n    },\r\n    {\r\n      key: 'hematological',\r\n      label: 'Hematología',\r\n      conditionsLabels: {\r\n        checkboxAnemia: 'Anemia',\r\n        checkboxCoagulopathies: 'Coagulopatías',\r\n        checkboxTransfusions: 'Transfusiones',\r\n        checkboxJehovahsWitness: 'Testigo de Jehová',\r\n      },\r\n    },\r\n    {\r\n      key: 'connectiveTissueDiseases',\r\n      label: 'Enf. de tej. conectivo',\r\n      conditionsLabels: {\r\n        checkboxSEL: 'LES',\r\n        checkboxRA: 'AR',\r\n        checkboxAntiphospholipidSyndrome: 'Sme. Antifosfolípidos',\r\n      },\r\n    },\r\n    {\r\n      key: 'obstetricGynecologicalHistory',\r\n      label: 'Antec. Ginecobstétricos',\r\n      conditionsLabels: {\r\n        checkboxLMP: 'FUM',\r\n        checkboxPregnancies: 'Embarazos',\r\n        checkboxAbortions: 'Abortos',\r\n        checkboxEclampsia: 'Eclampsia',\r\n        checkboxPreeclampsiaOC: 'Preeclampsia ACO',\r\n      },\r\n    },\r\n    {\r\n      key: 'psychiatric',\r\n      label: 'Afecciones Psiquiátricas',\r\n    },\r\n    {\r\n      key: 'anestheticHistory',\r\n      label: 'Antecedentes Anestésicos',\r\n    },\r\n    {\r\n      key: 'others',\r\n      label: 'Otros',\r\n    },\r\n  ];\r\n\r\n  const itemToRender = labels.map((item) => {\r\n    const { key, label, conditionsLabels } = item;\r\n    const currentValue = preSurgicalClinicalConditions[key];\r\n    const isDataAvailable = currentValue === false ? false : true;\r\n\r\n    if (currentValue !== undefined) {\r\n      const currentObj = {\r\n        observations: '',\r\n        conditions: [],\r\n      };\r\n\r\n      if (isDataAvailable) {\r\n        const { conditions, observations } = currentValue;\r\n        if (observations) {\r\n          currentObj.observations = observations;\r\n        }\r\n        if (conditions) {\r\n          const declaredConditionsLabels = conditions.map((arrItem) => conditionsLabels[arrItem]);\r\n          currentObj.conditions = declaredConditionsLabels;\r\n        }\r\n      }\r\n      return (\r\n        <PreSurgicalItemPDF key={key} title={label}>\r\n          {isDataAvailable ? (\r\n            <PreSurgicalClinicalItemBodyPDF valuesObj={currentObj} />\r\n          ) : (\r\n            <Text style={styles.bodyText}>{key === 'allergies' ? 'Niega.' : 'No.'}</Text>\r\n          )}\r\n        </PreSurgicalItemPDF>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <View>\r\n      <BodyMainHeaderPDF text=\"Clínica Pre-Operatoria.\" />\r\n      {itemToRender}\r\n      <TreatmenstList valuesArr={treatments} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalClinicalSectionPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodyContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n  },\r\n  sectionWithBottomBorder: {\r\n    paddingBottom: '2mm',\r\n    borderBottom: '1pt solid #d8d8d8',\r\n    marginBottom: '2mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\nimport BodySubSectionHeaderPDF from 'PDF/layout/BodySubSectionHeaderPDF';\r\n\r\nimport styles from './singleLineTextItem/styles';\r\n\r\nconst SingleLineTextItem = ({ title, text }) => (\r\n  <View style={styles.sectionWithBottomBorder}>\r\n    <BodySubSectionHeaderPDF text={`${title}:`} />\r\n    <View style={styles.bodyContainer}>\r\n      <Text style={styles.bodyText}>{`${text !== '' ? text : 'N/D'}`}</Text>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default SingleLineTextItem;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    marginBottom: '4mm',\r\n    flexWrap: 'nowrap',\r\n  },\r\n  firstColumnTable: {\r\n    width: '80mm',\r\n  },\r\n  firstSectionContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start',\r\n    marginLeft: '32mm',\r\n  },\r\n\r\n  secondColumnsTable: {\r\n    width: '24mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { View } from '@react-pdf/renderer';\r\nimport TableColumnPDF from 'PDF/layout/TableColumnPDF';\r\nimport TableRowPDF from 'PDF/layout/TableRowPDF';\r\n\r\nimport styles from './medicalStudyItemPDF/styles.js';\r\n\r\nconst MedicalStudyItemPDF = ({ valuesObj }) => {\r\n  const { label, date, result, unit, observations } = valuesObj;\r\n  const resultValue = result !== '' ? `${result} ${unit ? unit : ''}` : '';\r\n  return (\r\n    <View style={styles.rootContainer} wrap={false}>\r\n      <View style={styles.firstSectionContainer}>\r\n        <TableColumnPDF\r\n          headerText=\"Estudio\"\r\n          bodyText={label}\r\n          rootContainerStyle={styles.firstColumnTable}\r\n        />\r\n        <TableColumnPDF\r\n          headerText=\"Fecha\"\r\n          bodyText={date}\r\n          rootContainerStyle={styles.secondColumnsTable}\r\n        />\r\n      </View>\r\n      <TableRowPDF headerText=\"Resultado\" bodyText={resultValue} />\r\n      <TableRowPDF headerText=\"Observaciones\" bodyText={observations} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MedicalStudyItemPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  bodyText: {\r\n    fontSize: '4mm',\r\n  },\r\n  rootContainer: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    marginBottom: '3mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Text, View } from '@react-pdf/renderer';\r\nimport BodyMainHeaderPDF from 'PDF/layout/BodyMainHeaderPDF';\r\n\r\nimport MedicalStudyItemPDF from './medicalStudiesListPDF/MedicalStudyItemPDF';\r\nimport styles from './medicalStudiesListPDF/styles';\r\n\r\nconst MedicalStudiesListPDF = ({ valuesArr }) => {\r\n  const isDataAvailable = valuesArr.length === 0 ? false : true;\r\n  let itemsToRender;\r\n  if (isDataAvailable) {\r\n    itemsToRender = valuesArr.map((item) => (\r\n      <MedicalStudyItemPDF key={item['name']} valuesObj={item} />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.rootContainer}>\r\n      <BodyMainHeaderPDF text=\"Estudios Médicos:\" />\r\n      {isDataAvailable ? itemsToRender : <Text style={styles.bodyText}>No.</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MedicalStudiesListPDF;\r\n","import { StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    paddingBottom: '18mm',\r\n  },\r\n  bodySection: {\r\n    paddingHorizontal: '25mm',\r\n  },\r\n  headingContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginBottom: '3mm',\r\n  },\r\n  headingText: {\r\n    borderBottom: '1mm solid #2DBCB6',\r\n    fontSize: '7mm',\r\n  },\r\n  sectionWithBottomBorder: {\r\n    paddingBottom: '2mm',\r\n    borderBottom: '1pt solid #d8d8d8',\r\n    marginBottom: '2mm',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { Page, Text, View, Document } from '@react-pdf/renderer';\r\nimport React from 'react';\r\n\r\nimport AirwayExamSectionPDF from './preSurgicalSheetPDF/AirwayExamSectionPDF';\r\nimport BottomSectionPDF from './preSurgicalSheetPDF/BottomSectionPDF';\r\nimport FooterSectionPDF from './preSurgicalSheetPDF/FooterSectionPDF';\r\nimport HeaderSectionPDF from './preSurgicalSheetPDF/HeaderSectionPDF';\r\nimport PatientDataTable from './preSurgicalSheetPDF/PatientDataTablePDF';\r\nimport PhysicalExamSectionPDF from './preSurgicalSheetPDF/PhysicalExamSectionPDF';\r\nimport PreSurgicalClinicalSectionPDF from './preSurgicalSheetPDF/PreSurgicalClinicalSectionPDF';\r\nimport SingleLineTextItem from './preSurgicalSheetPDF/SingleLineTextItem';\r\nimport MedicalStudiesListPDF from './preSurgicalSheetPDF/preSurgicalItemPDF/MedicalStudiesListPDF';\r\nimport styles from './preSurgicalSheetPDF/styles';\r\n\r\nconst PreSurgicalSheetPDF = ({ formData }) => {\r\n  const shallowValueObtainer = (obj, shallowKey) => {\r\n    if (obj[shallowKey]) {\r\n      return obj[shallowKey];\r\n    } else return {};\r\n  };\r\n  const nestedValueObtainer = (obj, shallowKey, nestedKey) => {\r\n    if (obj[shallowKey]) {\r\n      return obj[shallowKey][nestedKey];\r\n    }\r\n  };\r\n  const preSurgicalClinicalValues = {\r\n    preSurgicalClinicalConditions: {\r\n      ...shallowValueObtainer(formData, 'conditionsWithCheckboxes'),\r\n      ...shallowValueObtainer(formData, 'conditionWithOutCheckboxes'),\r\n    },\r\n    treatments: formData['treatments'] ? formData['treatments'] : [],\r\n  };\r\n  const medicalStudiesValues = formData['medicalStudies'] ? formData['medicalStudies'] : [];\r\n  const statusValue = formData['status']\r\n    ? formData['status'] === 'completed'\r\n      ? 'Completado'\r\n      : 'Incompleto'\r\n    : '';\r\n  const physicalExamValues = shallowValueObtainer(formData, 'physicalExams');\r\n  const airwayExamValues = shallowValueObtainer(formData, 'airwayExams');\r\n  const preSurgicalBottomSectionValues = shallowValueObtainer(formData, 'bottomSection');\r\n  const patientLastName = nestedValueObtainer(formData, 'currentPatient', 'lastName');\r\n  const patientFirstName = nestedValueObtainer(formData, 'currentPatient', 'firstName');\r\n  const preSurgicalDiagnostic = nestedValueObtainer(\r\n    formData,\r\n    'headingSection',\r\n    'preSurgicalDiagnostic'\r\n  );\r\n  const proposedSurgeon = nestedValueObtainer(formData, 'headingSection', 'proposedSurgeon');\r\n\r\n  const date = formData ? formData.date : '';\r\n\r\n  return (\r\n    <Document\r\n      title={`Ficha Pre-Quirurgica_${patientLastName} ${patientFirstName}_${date}`}\r\n      author=\"usuario\"\r\n      subject=\"Planilla Pre-Quirúrgica\"\r\n      pdfVersion=\"1.7\"\r\n    >\r\n      <Page size=\"A4\" style={styles.page} wrap>\r\n        <HeaderSectionPDF />\r\n        <FooterSectionPDF />\r\n        <View style={styles.bodySection}>\r\n          <View style={styles.headingContainer}>\r\n            <Text style={styles.headingText}>Ficha Pre-Anestésica</Text>\r\n          </View>\r\n          <SingleLineTextItem title=\"Estado\" text={statusValue} />\r\n          <SingleLineTextItem title=\"Fecha y Hora\" text={date} />\r\n          {formData['currentPatient'] ? (\r\n            <PatientDataTable currentPatientData={formData['currentPatient']} />\r\n          ) : null}\r\n\r\n          <SingleLineTextItem title=\"Diagnóstico Pre-Operatorio:\" text={preSurgicalDiagnostic} />\r\n          <SingleLineTextItem title=\"Cirugía Propuesta:\" text={proposedSurgeon} />\r\n          <PreSurgicalClinicalSectionPDF valuesObj={preSurgicalClinicalValues} />\r\n          <PhysicalExamSectionPDF valuesObj={physicalExamValues} />\r\n          <AirwayExamSectionPDF valuesObj={airwayExamValues} />\r\n          <MedicalStudiesListPDF valuesArr={medicalStudiesValues} />\r\n          <BottomSectionPDF valuesObj={preSurgicalBottomSectionValues} />\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalSheetPDF;\r\n","import { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst RenderInWindow = ({ setState, ...props }, ref) => {\r\n  const [container, setContainer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setContainer(document.createElement('div'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (container) {\r\n      ref.current = window.open('', '', 'width=1000px,height=1000px');\r\n      ref.current.document.body.appendChild(container);\r\n      ref.current.document.title = 'Planilla Pre-Quirúrgica';\r\n      ref.current.onbeforeunload = () => setState(false);\r\n      const curWindow = ref.current;\r\n      return () => curWindow.close();\r\n    }\r\n  }, [container, ref, setState]);\r\n\r\n  return container && createPortal(props.children, container);\r\n};\r\nexport default React.forwardRef(RenderInWindow);\r\n","import { PDFViewer } from '@react-pdf/renderer';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport React from 'react';\r\n\r\nimport PreSurgicalSheetPDF from './pdfMaker/PreSurgicalSheetPDF';\r\nimport RenderInWindow from './pdfMaker/RenderInWindow';\r\n\r\nconst PDFMaker = ({ data, renderInWindowSetState, renderInWindowState }, ref) => (\r\n  <>\r\n    <PDFDownloadLink document={<PreSurgicalSheetPDF formData={data} />}>\r\n      {({ url, loading }) => {\r\n        loading ? 'Cargando' : (ref.pDFFileUrlRef.current = url);\r\n      }}\r\n    </PDFDownloadLink>\r\n    {renderInWindowState && (\r\n      <RenderInWindow ref={ref.newWindowRef} setState={renderInWindowSetState}>\r\n        <PDFViewer\r\n          style={{\r\n            height: '100%',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <PreSurgicalSheetPDF formData={data} />\r\n        </PDFViewer>\r\n      </RenderInWindow>\r\n    )}\r\n  </>\r\n);\r\nexport default React.memo(React.forwardRef(PDFMaker));\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (value, isRequiredError, shouldReset, nestedHandler) => {\r\n  const [valueState, setValueState] = useState(value ? value : null);\r\n  const [errorState, setErrorState] = useState(false);\r\n  const [helperText, setHelperText] = useState();\r\n\r\n  const removeErrorState = useCallback(() => {\r\n    setHelperText('');\r\n    setErrorState(false);\r\n  }, []);\r\n\r\n  const handleOnChange = (val) => {\r\n    setValueState(val);\r\n    nestedHandler(val);\r\n    removeErrorState();\r\n  };\r\n\r\n  const setRequiredErrorOn = useCallback(\r\n    (isRequiredErrorProp, inputValue) => {\r\n      const isValueEmpty = inputValue === null;\r\n      if (isRequiredErrorProp && isValueEmpty) {\r\n        setErrorState(true);\r\n        setHelperText('Campo Requerido.');\r\n      } else removeErrorState();\r\n    },\r\n    [removeErrorState]\r\n  );\r\n\r\n  const updateStateValueOn = useCallback(\r\n    (valueProp) => setValueState(valueProp ? valueProp : null),\r\n    []\r\n  );\r\n\r\n  const resetStateValueOn = useCallback((shouldResetProp) => {\r\n    if (shouldResetProp) {\r\n      setValueState(null);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => setRequiredErrorOn(isRequiredError, valueState), [\r\n    isRequiredError,\r\n    valueState,\r\n    setRequiredErrorOn,\r\n  ]);\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n  useEffect(() => resetStateValueOn(shouldReset), [shouldReset, resetStateValueOn]);\r\n  return [\r\n    {\r\n      helperText,\r\n      errorState,\r\n      valueState,\r\n    },\r\n    handleOnChange,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n  textError: {\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  container: {\r\n    '@global': {\r\n      '.MuiFormHelperText-root': {\r\n        marginLeft: '14px',\r\n        marginRight: '14px',\r\n        marginTop: '4px',\r\n      },\r\n      ' .MuiInput-root': {\r\n        marginTop: '0px',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport {\r\n  KeyboardDateTimePicker,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport clsx from 'clsx';\r\n\r\nimport useInput from './standarDateInput/useInput';\r\nimport useStyles from './standarDateInput/useStyles';\r\n\r\nconst StandarDateInput = ({\r\n  type,\r\n  value,\r\n  isRequiredError,\r\n  className,\r\n  shouldReset,\r\n  nestedHandler,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const [inputState, handleOnChange] = useInput(value, isRequiredError, shouldReset, nestedHandler);\r\n  const { helperText, errorState, valueState } = inputState;\r\n\r\n  const inputToRender = [];\r\n  const standarProps = {\r\n    variant: 'inline',\r\n    maskChar: '-',\r\n    invalidDateMessage: 'Formato Invalido',\r\n    maxDateMessage: 'La fecha no puede ser mayor al límite',\r\n    minDateMessage: 'La fecha no puede ser menor al límite',\r\n    minDate: new Date('1900', '01', '01'),\r\n    maxDate: new Date('2040', '01', '01'),\r\n  };\r\n\r\n  if (type === 'date') {\r\n    inputToRender.push(\r\n      <FormControl error={errorState} key=\"typeDate\">\r\n        <KeyboardDatePicker\r\n          className={clsx(className, classes.container, errorState && classes.error)}\r\n          {...standarProps}\r\n          value={valueState}\r\n          onChange={handleOnChange}\r\n          {...props}\r\n        />\r\n        {helperText && <FormHelperText className={classes.textError}>{helperText}</FormHelperText>}\r\n      </FormControl>\r\n    );\r\n  } else if (type === 'time') {\r\n    inputToRender.push(\r\n      <FormControl error={errorState} key=\"typeTime\">\r\n        <KeyboardTimePicker\r\n          className={clsx(className, classes.container, errorState && classes.error)}\r\n          {...standarProps}\r\n          value={valueState}\r\n          onChange={handleOnChange}\r\n          {...props}\r\n        />\r\n        {helperText && <FormHelperText className={classes.textError}>{helperText}</FormHelperText>}\r\n      </FormControl>\r\n    );\r\n  } else {\r\n    inputToRender.push(\r\n      <FormControl error={errorState} key=\"typeDateTime\">\r\n        <KeyboardDateTimePicker\r\n          className={clsx(className, classes.container, errorState && classes.error)}\r\n          {...standarProps}\r\n          value={valueState}\r\n          onChange={handleOnChange}\r\n          {...props}\r\n        />\r\n        {helperText && <FormHelperText className={classes.textError}>{helperText}</FormHelperText>}\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  return <>{inputToRender}</>;\r\n};\r\n\r\nexport default StandarDateInput;\r\n","import { createContext } from 'react';\r\n\r\nconst PreSurgical = createContext('Default Value');\r\n\r\nexport { PreSurgical };\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (value, isRequiredError, shouldReset, nestedHandler) => {\r\n  const [valueState, setValueState] = useState(value ? value : '');\r\n  const [errorState, setErrorState] = useState();\r\n  const [helperText, setHelperText] = useState();\r\n\r\n  const removeError = () => setErrorState(false);\r\n\r\n  const handleOnChange = (event) => {\r\n    setValueState(event.target.value);\r\n    nestedHandler(event.target.value);\r\n    removeError();\r\n  };\r\n\r\n  const setRequiredErrorOn = useCallback((isRequiredErrorProp, inputValue) => {\r\n    if (isRequiredErrorProp && inputValue === '') {\r\n      setErrorState(true);\r\n      setHelperText('Campo Requerido.');\r\n    } else removeError();\r\n  }, []);\r\n\r\n  const resetStateValueOn = useCallback((shouldResetProp) => {\r\n    if (shouldResetProp) {\r\n      setValueState('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => setRequiredErrorOn(isRequiredError, valueState), [\r\n    isRequiredError,\r\n    valueState,\r\n    setRequiredErrorOn,\r\n  ]);\r\n  useEffect(() => setValueState(value ? value : ''), [value]);\r\n  useEffect(() => resetStateValueOn(shouldReset), [shouldReset, resetStateValueOn]);\r\n\r\n  return [\r\n    {\r\n      helperText,\r\n      errorState,\r\n      valueState,\r\n    },\r\n    handleOnChange,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  radioButtonsContainer: {\r\n    borderRadius: '4px',\r\n    paddingLeft: '10px',\r\n    '@global': {\r\n      ' .MuiTouchRipple-root': { display: 'none' },\r\n      ' .MuiIconButton-root': {\r\n        paddingTop: '0px',\r\n        paddingBottom: '0px',\r\n      },\r\n    },\r\n  },\r\n  error: {\r\n    border: '2px solid',\r\n    borderColor: theme.palette.alert.main,\r\n    padding: '8px',\r\n  },\r\n  radioItem: {\r\n    '@global': {\r\n      ' .MuiFormControlLabel-label': {\r\n        textAlign: 'left',\r\n        whiteSpace: 'nowrap',\r\n      },\r\n    },\r\n  },\r\n  radioButtonsColumn: {\r\n    ...theme.responsiveStyles({ marginRight: 24, marginBottom: 24, paddingLeft: 24 }),\r\n    flexShrink: '0',\r\n    width: 'fit-content',\r\n  },\r\n  radioButtonsColumnError: {\r\n    marginBottom: '0px',\r\n  },\r\n  textError: {\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nimport useInput from './radioButtonsGroup/useInput';\r\nimport useStyles from './radioButtonsGroup/useStyles';\r\n\r\nconst RadioButtonsGroup = ({\r\n  radioItemsArr,\r\n  showInColumn,\r\n  nestedHandler,\r\n  value,\r\n  disabled,\r\n  radioItemClassName,\r\n  isRequiredError,\r\n  name,\r\n  shouldReset,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [inputState, handleOnChange] = useInput(value, isRequiredError, shouldReset, nestedHandler);\r\n\r\n  const { helperText, errorState, valueState } = inputState;\r\n\r\n  let radioColumnsArr = [];\r\n  let counter = 1;\r\n  let columArr = [];\r\n  if (showInColumn) {\r\n    const radioButtonsArr = radioItemsArr.map((item) => {\r\n      const currentValue = item['value'];\r\n      const currentLabel = item['label'];\r\n      return (\r\n        <FormControlLabel\r\n          control={<Radio />}\r\n          key={currentValue}\r\n          value={currentValue}\r\n          label={currentLabel}\r\n          disabled={disabled}\r\n          className={clsx(classes.radioItem, radioItemClassName)}\r\n        />\r\n      );\r\n    });\r\n    for (let item of radioButtonsArr) {\r\n      columArr.push(item);\r\n      if (columArr.length === 4 || radioButtonsArr.length === counter) {\r\n        radioColumnsArr.push(\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"flex-start\"\r\n            className={clsx(\r\n              classes.radioButtonsColumn,\r\n              errorState && classes.radioButtonsColumnError\r\n            )}\r\n            key={`radioButtonsColumn${counter}`}\r\n          >\r\n            {columArr}\r\n          </Grid>\r\n        );\r\n        columArr = [];\r\n      }\r\n      counter++;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" error={errorState}>\r\n      <FormLabel component=\"legend\">{''}</FormLabel>\r\n      <RadioGroup value={valueState} onChange={handleOnChange} name={name}>\r\n        <Grid\r\n          container\r\n          alignItems=\"flex-start\"\r\n          className={clsx(classes.radioButtonsContainer, errorState && classes.error)}\r\n        >\r\n          {showInColumn && radioColumnsArr}\r\n          {!showInColumn &&\r\n            radioItemsArr.map((item) => (\r\n              <FormControlLabel\r\n                control={<Radio />}\r\n                key={item.value}\r\n                value={item.value}\r\n                label={item.label}\r\n                disabled={disabled}\r\n                className={clsx(classes.radioItem, radioItemClassName)}\r\n              />\r\n            ))}\r\n        </Grid>\r\n      </RadioGroup>\r\n      {errorState && <FormHelperText className={classes.textError}>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\nexport default RadioButtonsGroup;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textMargin: theme.responsiveStyles({ paddingBottom: 16 }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './titledItem/useStyles';\r\n\r\nconst TitledItem = ({ title, children, className, titlePaddingClassName, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      item\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"flex-start\"\r\n      className={className}\r\n      {...props}\r\n    >\r\n      <Typography className={clsx(classes.textMargin, titlePaddingClassName)}>{title}</Typography>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TitledItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  radioItem: theme.responsiveStyles({\r\n    width: 180,\r\n  }),\r\n  text: {\r\n    marginLeft: '-30px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport RadioButtonsGroup from 'components/RadioButtonsGroup';\r\nimport TitledItem from 'components/TitledItem';\r\n\r\nimport useStyles from './doubleRadioButtonInput/useStyles';\r\n\r\nconst DoubleRadioButtonInput = ({\r\n  title,\r\n  radioItemsArr,\r\n  value,\r\n  nestedHandler,\r\n  measurementUnit,\r\n  className,\r\n  radioItemStyle,\r\n  measurementTextStyle,\r\n  name,\r\n  isRequiredError,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TitledItem title={title} className={className}>\r\n      <Grid container wrap=\"nowrap\">\r\n        <RadioButtonsGroup\r\n          radioItemsArr={radioItemsArr}\r\n          radioItemClassName={clsx(classes.radioItem, radioItemStyle)}\r\n          value={value}\r\n          nestedHandler={nestedHandler}\r\n          name={name}\r\n          isRequiredError={isRequiredError}\r\n        />\r\n        {measurementUnit && (\r\n          <Typography variant=\"body2\" className={clsx(classes.text, measurementTextStyle)}>\r\n            {measurementUnit}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </TitledItem>\r\n  );\r\n};\r\nexport default DoubleRadioButtonInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headingRow: {\r\n    width: '100%',\r\n    background: theme.palette.ternary.dark,\r\n    borderStyle: 'solid',\r\n    borderWidth: '0 0 2px 0',\r\n    borderColor: theme.palette.secondary.main,\r\n    ...theme.responsiveStyles({ paddingTop: 8 }),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './formHeading/useStyles';\r\n\r\nconst FormHeading = ({ text, className, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"h6\" className={clsx(classes.headingRow, className)} {...props}>\r\n      {text}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default FormHeading;\r\n","import Grid from '@material-ui/core/Grid';\r\n\r\nconst FormRow = ({ children, className, ...props }) => (\r\n  <Grid container justifyContent=\"center\" alignItems=\"flex-start\" className={className} {...props}>\r\n    {children}\r\n  </Grid>\r\n);\r\n\r\nexport default FormRow;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      paddingRight: '0px',\r\n      justifyContent: 'center',\r\n      marginBottom: '17px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: '12px',\r\n      justifyContent: 'flex-start',\r\n      marginBottom: '0px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: '15px',\r\n      justifyContent: 'flex-start',\r\n      marginBottom: '0px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './leftFormContainer/useStyles';\r\n\r\nconst LeftFormContainer = ({ children, className, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} sm={6} className={clsx(classes.root, className)} {...props}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LeftFormContainer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up('xs')]: { paddingLeft: '0px', justifyContent: 'center' },\r\n    [theme.breakpoints.up('sm')]: { paddingLeft: '12px', justifyContent: 'flex-end' },\r\n    [theme.breakpoints.up('lg')]: { paddingLeft: '15px', justifyContent: 'flex-end' },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './rightFormContainer/useStyles';\r\n\r\nconst LeftFormContainer = ({ children, className, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} sm={6} className={clsx(classes.root, className)} {...props}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LeftFormContainer;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (isRequiredError, value, nestedHandler, evaluateValueEffect, shouldReset) => {\r\n  const [valueState, setValueState] = useState(value ? value : '');\r\n  const [errorState, setErrorState] = useState();\r\n  const [helperText, setHelperText] = useState();\r\n\r\n  const removeErrorState = useCallback(() => {\r\n    setHelperText('');\r\n    setErrorState(false);\r\n  }, []);\r\n\r\n  const handleOnChange = (event) => {\r\n    setValueState(event.target.value);\r\n    nestedHandler(event.target.value);\r\n    removeErrorState();\r\n  };\r\n\r\n  const removeWhiteSpacesOnBlur = (event) => {\r\n    setValueState(event.target.value.trim());\r\n  };\r\n\r\n  const updateStateValueOn = useCallback((valueProp) => setValueState(valueProp), []);\r\n\r\n  const resetStateValueOn = useCallback((shouldResetProp) => {\r\n    if (shouldResetProp) {\r\n      setValueState('');\r\n    }\r\n  }, []);\r\n\r\n  const setRequiredErrorOn = useCallback(\r\n    (isRequiredErrorProp, inputValue) => {\r\n      if (isRequiredErrorProp && inputValue === '') {\r\n        setErrorState(true);\r\n        setHelperText('Campo Requerido.');\r\n      } else removeErrorState();\r\n    },\r\n    [removeErrorState]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (evaluateValueEffect) {\r\n      evaluateValueEffect(valueState);\r\n    }\r\n  }, [valueState, evaluateValueEffect]);\r\n\r\n  useEffect(() => setRequiredErrorOn(isRequiredError, valueState), [\r\n    isRequiredError,\r\n    valueState,\r\n    setRequiredErrorOn,\r\n  ]);\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n  useEffect(() => resetStateValueOn(shouldReset), [shouldReset, resetStateValueOn]);\r\n\r\n  return [\r\n    {\r\n      helperText,\r\n      errorState,\r\n      valueState,\r\n    },\r\n    handleOnChange,\r\n    removeWhiteSpacesOnBlur,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: '0',\r\n    boxSizing: 'border-box',\r\n    maxWidth: '100%',\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: '500',\r\n    borderWidth: '0px',\r\n    borderRadius: '4px',\r\n    ...theme.responsiveStyles({\r\n      paddingTop: 6,\r\n      paddingBottom: 10,\r\n      paddingLeft: 18,\r\n      paddingRight: 18,\r\n    }),\r\n    [theme.breakpoints.up('xs')]: {\r\n      fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      fontSize: '16px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      fontSize: '20px',\r\n    },\r\n    '&:focus': {\r\n      borderWidth: '2px',\r\n      borderColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n  error: {\r\n    border: '2px solid',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  textError: {\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport clsx from 'clsx';\r\n\r\nimport useInput from './standarTextareaAutosize/useInput';\r\nimport useStyles from './standarTextareaAutosize/useStyles';\r\n\r\nconst StandarTextareaAutosize = ({\r\n  placeholder,\r\n  id,\r\n  className,\r\n  isRequiredError,\r\n  value,\r\n  nestedHandler,\r\n  evaluateValueEffect,\r\n  shouldReset,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const [inputState, handleOnChange, removeWhiteSpacesOnBlur] = useInput(\r\n    isRequiredError,\r\n    value,\r\n    nestedHandler,\r\n    evaluateValueEffect,\r\n    shouldReset\r\n  );\r\n  const { helperText, errorState, valueState } = inputState;\r\n\r\n  return (\r\n    <FormControl error={errorState} className={clsx(className, classes.formControl)}>\r\n      <TextareaAutosize\r\n        placeholder={placeholder}\r\n        id={id}\r\n        className={clsx(classes.root, errorState && classes.error)}\r\n        minRows={3}\r\n        cols=\"80\"\r\n        value={valueState}\r\n        onChange={handleOnChange}\r\n        onBlur={removeWhiteSpacesOnBlur}\r\n        {...props}\r\n      />\r\n      {errorState && <FormHelperText className={classes.textError}>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StandarTextareaAutosize;\r\n","import StandarTextareaAutosize from './StandarTextareaAutosize';\r\nimport TitledItem from './TitledItem';\r\n\r\nconst TitledTextAreaAutoSize = ({ title, className, classNameTextArea, ...props }) => (\r\n  <TitledItem title={title} className={className}>\r\n    <StandarTextareaAutosize className={classNameTextArea} {...props} />\r\n  </TitledItem>\r\n);\r\nexport default TitledTextAreaAutoSize;\r\n","import { PreSurgical } from 'context/PreSurgical';\r\nimport { useContext } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = () => {\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n\r\n  const { bottomSection } = initialState;\r\n\r\n  const handleOnChangeFor = (name) => (value) =>\r\n    updateGlobalState((prevState) => ({\r\n      ...prevState,\r\n      bottomSection: {\r\n        ...prevState['bottomSection'],\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n  const handlePsychicStateDebounced = useDebouncedCallback(handleOnChangeFor('psychicState'), 250, {\r\n    trailing: true,\r\n  });\r\n  const handlePsychicStateObservationDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('psychicStateObservation'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleAnestheticPlanDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('anestheticPlan'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleAnestheticPlanObservationDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('anestheticPlanObservation'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleBloodSampleRequestDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('bloodSampleRequest'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleICURequestDebounced = useDebouncedCallback(handleOnChangeFor('iCURequest'), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const handleInterconsultationsDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('interconsultations'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleExtraObservationsDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('extraObservations'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  return [\r\n    bottomSection,\r\n    {\r\n      handlePsychicStateDebounced,\r\n      handlePsychicStateObservationDebounced,\r\n      handleAnestheticPlanDebounced,\r\n      handleAnestheticPlanObservationDebounced,\r\n      handleBloodSampleRequestDebounced,\r\n      handleICURequestDebounced,\r\n      handleInterconsultationsDebounced,\r\n      handleExtraObservationsDebounced,\r\n    },\r\n  ];\r\n};\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  bottomLine: {\r\n    ...theme.responsiveStyles({ paddingBottom: 10 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  bottomLineFullPadding: {\r\n    ...theme.responsiveStyles({ paddingBottom: 34 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport DoubleRadioButtonInput from 'components/DoubleRadioButtonInput';\r\nimport FormHeading from 'components/FormHeading';\r\nimport FormRow from 'components/FormRow';\r\nimport LeftFormContainer from 'components/LeftFormContainer';\r\nimport RadioButtonsGroup from 'components/RadioButtonsGroup';\r\nimport RightFormContainer from 'components/RightFormContainer';\r\nimport TitledTextAreaAutoSize from 'components/TitledTextAreaAutoSize';\r\nimport React from 'react';\r\n\r\nimport useForm from './bottomSection/useForm';\r\nimport useStyles from './bottomSection/useStyles';\r\n\r\nconst BottomSection = ({ className, isRequiredError }) => {\r\n  const classes = useStyles();\r\n\r\n  const [\r\n    initialState,\r\n    {\r\n      handlePsychicStateDebounced,\r\n      handlePsychicStateObservationDebounced,\r\n      handleAnestheticPlanDebounced,\r\n      handleAnestheticPlanObservationDebounced,\r\n      handleBloodSampleRequestDebounced,\r\n      handleICURequestDebounced,\r\n      handleInterconsultationsDebounced,\r\n      handleExtraObservationsDebounced,\r\n    },\r\n  ] = useForm();\r\n\r\n  const {\r\n    psychicState,\r\n    psychicStateObservation,\r\n    anestheticPlan,\r\n    anestheticPlanObservation,\r\n    bloodSampleRequest,\r\n    iCURequest,\r\n    interconsultations,\r\n    extraObservations,\r\n  } = initialState;\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"flex-start\" className={className}>\r\n      <FormHeading\r\n        text=\"Estado Psíquico Preoperatorio.\"\r\n        className={classes.rowBottomMargin}\r\n        variant=\"body1\"\r\n      />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n        justifyContent=\"flex-start\"\r\n        className={classes.rowBottomMargin}\r\n      >\r\n        <Grid container className={clsx(classes.rowBottomMargin, classes.bottomLine)}>\r\n          <RadioButtonsGroup\r\n            radioItemsArr={[\r\n              { value: 'normal', label: 'Normal' },\r\n              { value: 'depress', label: 'Deprimido' },\r\n              { value: 'anxious', label: 'Ansioso' },\r\n              { value: 'exited', label: 'Exitado' },\r\n              { value: 'comatose', label: 'Comatoso' },\r\n              { value: 'hyperemotive', label: 'Hiperemotivo' },\r\n            ]}\r\n            showInColumn\r\n            name=\"psychicState\"\r\n            nestedHandler={handlePsychicStateDebounced}\r\n            value={psychicState}\r\n            isRequiredError={isRequiredError['psychicStateIsRequired']}\r\n          />\r\n        </Grid>\r\n        <TitledTextAreaAutoSize\r\n          title=\"Observaciones:\"\r\n          placeholder=\"/..Observaciones...\"\r\n          value={psychicStateObservation}\r\n          nestedHandler={handlePsychicStateObservationDebounced}\r\n          classNameTextArea={classes.textArea}\r\n        />\r\n      </Grid>\r\n      <FormHeading\r\n        text=\"Plan Anestésico Sugerido.\"\r\n        className={classes.rowBottomMargin}\r\n        variant=\"body1\"\r\n      />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n        className={classes.rowBottomMargin}\r\n      >\r\n        <Grid container className={clsx(classes.rowBottomMargin, classes.bottomLine)}>\r\n          <RadioButtonsGroup\r\n            radioItemsArr={[\r\n              { value: 'generalAnesthesia', label: 'Anestesia General' },\r\n              { value: 'subarachnoid', label: 'Subaracnoidea' },\r\n              { value: 'peridural', label: 'Peridural' },\r\n              { value: 'peripheralLock', label: 'Bloqueo Periférico' },\r\n              { value: 'sedation', label: 'Sedación' },\r\n              { value: 'combined', label: 'Combinada' },\r\n            ]}\r\n            name=\"anestheticPlan\"\r\n            nestedHandler={handleAnestheticPlanDebounced}\r\n            value={anestheticPlan}\r\n            showInColumn\r\n            isRequiredError={isRequiredError['anestheticPlanIsRequired']}\r\n          />\r\n        </Grid>\r\n        <TitledTextAreaAutoSize\r\n          title=\"Observaciones:\"\r\n          placeholder=\"/..Observaciones...\"\r\n          value={anestheticPlanObservation}\r\n          nestedHandler={handleAnestheticPlanObservationDebounced}\r\n          classNameTextArea={classes.textArea}\r\n        />\r\n      </Grid>\r\n      <FormHeading text=\"Extras.\" className={classes.rowBottomMargin} variant=\"body1\" />\r\n      <FormRow className={classes.rowBottomMargin}>\r\n        <LeftFormContainer xs={6} className={classes.leftContainer}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Solicitud de Sangre:\"\r\n            radioItemsArr={[\r\n              { value: 'yes', label: 'Sí' },\r\n              { value: 'no', label: 'No' },\r\n            ]}\r\n            name=\"bloodSampleRequest\"\r\n            nestedHandler={handleBloodSampleRequestDebounced}\r\n            value={bloodSampleRequest}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer xs={6}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Solicitud de UTI:\"\r\n            radioItemsArr={[\r\n              { value: 'yes', label: 'Sí' },\r\n              { value: 'no', label: 'No' },\r\n            ]}\r\n            name=\"iCURequest\"\r\n            nestedHandler={handleICURequestDebounced}\r\n            value={iCURequest}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        className={clsx(classes.rowBottomMargin, classes.bottomLineFullPadding)}\r\n      >\r\n        <TitledTextAreaAutoSize\r\n          title=\"Interconsultas:\"\r\n          placeholder=\"/..Interconsultas...\"\r\n          value={interconsultations}\r\n          nestedHandler={handleInterconsultationsDebounced}\r\n          classNameTextArea={classes.textArea}\r\n        />\r\n      </Grid>\r\n      <TitledTextAreaAutoSize\r\n        title=\"Observaciones:\"\r\n        placeholder=\"/..Observaciones...\"\r\n        value={extraObservations}\r\n        nestedHandler={handleExtraObservationsDebounced}\r\n        classNameTextArea={classes.textArea}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(BottomSection);\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (value, ref, isRequiredError, shouldReset, maxLength, pattern, nestedHandler) => {\r\n  const [helperText, setHelperText] = useState();\r\n  const [errorState, setErrorState] = useState();\r\n  const [isLocalErrorSetted, setIsLocalErrorSetted] = useState(false);\r\n  const [valueState, setValueState] = useState(value ? value : '');\r\n\r\n  const checkIfPropExists = useCallback((prop) => (prop ? true : false), []);\r\n  const thereIsMaxLength = checkIfPropExists(maxLength);\r\n\r\n  const setErrorRefTo = useCallback((bool, refProp) => refProp && (refProp.current = bool), []);\r\n\r\n  const removeErrorState = useCallback(\r\n    (refProp) => {\r\n      setHelperText(null);\r\n      setErrorState(false);\r\n      setErrorRefTo(false, refProp);\r\n      setIsLocalErrorSetted(false);\r\n    },\r\n    [setErrorRefTo]\r\n  );\r\n\r\n  const checkIfValueIsValid = useCallback(\r\n    (inputValue, patternProp) => {\r\n      const findMatches = (val, regExpPattern) => val.match(regExpPattern);\r\n      const setItMatches = (matches) => (matches ? true : false);\r\n      const defaultPattern = /^([a-zA-ZÀ-ÿ\\u00f1\\u00d10-9]+\\s?)*([a-zA-ZÀ-ÿ\\u00f1\\u00d10-9])?$/;\r\n      const thereIsPattern = checkIfPropExists(patternProp);\r\n      let matches;\r\n      if (thereIsPattern) {\r\n        matches = findMatches(inputValue, patternProp);\r\n      } else {\r\n        matches = findMatches(inputValue, defaultPattern);\r\n      }\r\n      return setItMatches(matches);\r\n    },\r\n    [checkIfPropExists]\r\n  );\r\n\r\n  const setInvalidFormatError = useCallback(\r\n    (patternProp, refProp) => {\r\n      const thereIsPattern = checkIfPropExists(patternProp);\r\n      setErrorRefTo(true, refProp);\r\n      setErrorState(true);\r\n      setIsLocalErrorSetted(true);\r\n      if (thereIsPattern) {\r\n        setHelperText('Formato Inválido');\r\n      } else {\r\n        setHelperText(\r\n          'Formato Invalido, aseguresé que no haya espacios de más o caracteres especiales.'\r\n        );\r\n      }\r\n    },\r\n    [checkIfPropExists, setErrorRefTo]\r\n  );\r\n\r\n  const setIsExceedingMaxLengthError = useCallback(\r\n    (maxLengthProp, refProp) => {\r\n      setErrorState(true);\r\n      setHelperText(`El texto es demasiado largo, no debe superar ${maxLengthProp} carácteres`);\r\n      setErrorRefTo(true, refProp);\r\n      setIsLocalErrorSetted(true);\r\n    },\r\n    [setErrorRefTo]\r\n  );\r\n\r\n  const manageValidation = ({ thereIsMaxLengthCondition, patternProp, maxLengthProp, refProp }) => (\r\n    event\r\n  ) => {\r\n    const isValueValid = checkIfValueIsValid(event.target.value, patternProp);\r\n    if (!isValueValid) {\r\n      setInvalidFormatError(patternProp, refProp);\r\n    } else if (thereIsMaxLengthCondition) {\r\n      const isExceedingMaxLength = event.target.value.length > maxLengthProp;\r\n      if (isExceedingMaxLength) {\r\n        setIsExceedingMaxLengthError(maxLengthProp, refProp);\r\n      } else {\r\n        removeErrorState(refProp);\r\n      }\r\n    } else {\r\n      removeErrorState(refProp);\r\n    }\r\n    setValueState(event.target.value);\r\n    nestedHandler(event.target.value);\r\n  };\r\n\r\n  const handleOnChange = manageValidation({\r\n    thereIsMaxLengthCondition: thereIsMaxLength,\r\n    patternProp: pattern,\r\n    maxLengthProp: maxLength,\r\n    refProp: ref,\r\n  });\r\n\r\n  const setRequiredErrorOn = useCallback(\r\n    ({ isRequiredErrorProp, isLocalErrorSettedState, inputValue }) => {\r\n      const isValueEmpty = inputValue === '';\r\n      const setRequiredFieldError = () => {\r\n        setErrorState(true);\r\n        setHelperText('Campo Requerido');\r\n      };\r\n      if (isValueEmpty && isRequiredErrorProp) {\r\n        setRequiredFieldError();\r\n      } else if (!isLocalErrorSettedState) {\r\n        removeErrorState();\r\n      }\r\n    },\r\n    [removeErrorState]\r\n  );\r\n\r\n  const updateStateValueOn = useCallback(\r\n    (valueProp) => setValueState(valueProp ? valueProp : ''),\r\n    []\r\n  );\r\n\r\n  const resetStateValueOn = useCallback((shouldResetProp) => {\r\n    if (shouldResetProp) {\r\n      setValueState('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(\r\n    () =>\r\n      setRequiredErrorOn({\r\n        isRequiredErrorProp: isRequiredError,\r\n        isLocalErrorSettedState: isLocalErrorSetted,\r\n        inputValue: valueState,\r\n      }),\r\n    [setRequiredErrorOn, isRequiredError, isLocalErrorSetted, valueState]\r\n  );\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n  useEffect(() => resetStateValueOn(shouldReset), [shouldReset, resetStateValueOn]);\r\n\r\n  return [\r\n    {\r\n      helperText,\r\n      errorState,\r\n      valueState,\r\n    },\r\n    handleOnChange,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import React from 'react';\r\n\r\nimport Input from './Input';\r\nimport useInput from './inputText/useInput';\r\n\r\nconst InputText = (\r\n  { maxLength, isRequiredError, value, nestedHandler, pattern, shouldReset, ...props },\r\n  ref\r\n) => {\r\n  const [inputState, handleOnChange] = useInput(\r\n    value,\r\n    ref,\r\n    isRequiredError,\r\n    shouldReset,\r\n    maxLength,\r\n    pattern,\r\n    nestedHandler\r\n  );\r\n\r\n  const { helperText, errorState, valueState } = inputState;\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      error={errorState}\r\n      helperText={helperText}\r\n      value={valueState}\r\n      onChange={handleOnChange}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(InputText);\r\n","import React from 'react';\r\n\r\nimport InputText from './InputText';\r\nimport TitledItem from './TitledItem';\r\n\r\nconst TitledInput = ({ inputTitle, placeholder, className, ...props }, ref) => (\r\n  <TitledItem title={inputTitle} className={className}>\r\n    <InputText placeholder={placeholder} ref={ref} {...props} />\r\n  </TitledItem>\r\n);\r\n\r\nexport default React.forwardRef(TitledInput);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headingBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  lastChildren: {\r\n    paddingBottom: '0px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport FormHeading from 'components/FormHeading';\r\nimport TitledItem from 'components/TitledItem';\r\n\r\nimport useStyles from './patientIdentification/useStyles';\r\n\r\nconst PatientIdentification = ({ className, values }) => {\r\n  const { lastName, firstName, iDNumber, gender, age } = values;\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <FormHeading\r\n        className={clsx(classes.headingBottomMargin, className)}\r\n        text=\"Datos del Paciente.\"\r\n        variant=\"body1\"\r\n      />\r\n      <TitledItem\r\n        title={`Apellido:${'\\u00A0'}`}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Typography>{lastName}</Typography>\r\n      </TitledItem>\r\n      <TitledItem\r\n        title={`Nombre:${'\\u00A0'}`}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Typography>{firstName}</Typography>\r\n      </TitledItem>\r\n      <TitledItem\r\n        title={`DNI nro.:${'\\u00A0'}`}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Typography>{iDNumber}</Typography>\r\n      </TitledItem>\r\n      <TitledItem\r\n        title={`Sexo:${'\\u00A0'}`}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n      >\r\n        <Typography>{gender === 'male' ? 'Masculino' : 'femenino'}</Typography>\r\n      </TitledItem>\r\n      <TitledItem\r\n        title={`Edad:${'\\u00A0'}`}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        titlePaddingClassName={classes.lastChildren}\r\n      >\r\n        <Typography>{age}</Typography>\r\n      </TitledItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientIdentification;\r\n","import { PreSurgical } from 'context/PreSurgical';\r\nimport { useContext } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = () => {\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n\r\n  const handleOnChangeFor = (name) => (value) =>\r\n    updateGlobalState((prevState) => ({\r\n      ...prevState,\r\n      ['headingSection']: {\r\n        ...prevState['headingSection'],\r\n        [name]: value,\r\n      },\r\n    }));\r\n\r\n  const handlePreSurgicalDiagnosticDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('preSurgicalDiagnostic'),\r\n    250,\r\n    { trailing: true }\r\n  );\r\n\r\n  const handleProposedSurgeonDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('proposedSurgeon'),\r\n    250,\r\n    { trailing: true }\r\n  );\r\n\r\n  return [\r\n    initialState,\r\n    {\r\n      handlePreSurgicalDiagnosticDebounced,\r\n      handleProposedSurgeonDebounced,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rightContainerAligment: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 48 }),\r\n  rowContainer: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      paddingBottom: '8px',\r\n      boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: 'unset',\r\n      boxShadow: 'unset',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport FormHeading from 'components/FormHeading';\r\nimport FormRow from 'components/FormRow';\r\nimport LeftFormContainer from 'components/LeftFormContainer';\r\nimport RightFormContainer from 'components/RightFormContainer';\r\nimport TitledInput from 'components/TitledInput';\r\nimport React from 'react';\r\n\r\nimport PatientIdentification from './PatientIdentification';\r\nimport useForm from './headerSectionPS/useForm';\r\nimport useStyles from './headerSectionPS/useStyles';\r\n\r\nconst HeaderSectionPS = ({ className, isRequiredError }, ref) => {\r\n  const { isPreSurgicalDiagnosticInputOnError, isProposedSurgeonInputOnError } = ref;\r\n  const classes = useStyles();\r\n\r\n  const [\r\n    initialState,\r\n    { handlePreSurgicalDiagnosticDebounced, handleProposedSurgeonDebounced },\r\n  ] = useForm();\r\n\r\n  const { headingSection, currentPatient } = initialState;\r\n  return (\r\n    <Grid container className={className}>\r\n      <FormHeading className={classes.rowBottomMargin} text=\" Ficha Pre-Anestésica.\" />\r\n      <FormRow>\r\n        <LeftFormContainer className={classes.rowContainer}>\r\n          <PatientIdentification values={currentPatient} />\r\n        </LeftFormContainer>\r\n        <RightFormContainer className={classes.rightContainerAligment}>\r\n          <TitledInput\r\n            inputTitle=\"Diagnóstico Pre-Operatorio:\"\r\n            placeholder=\"Diagnóstico Pre-Operatorio\"\r\n            className={classes.rowBottomMargin}\r\n            maxLength={40}\r\n            value={headingSection['preSurgicalDiagnostic']}\r\n            nestedHandler={handlePreSurgicalDiagnosticDebounced}\r\n            isRequiredError={isRequiredError['preSurgicalDiagnosticIsRequired']}\r\n            ref={isPreSurgicalDiagnosticInputOnError}\r\n          />\r\n          <TitledInput\r\n            inputTitle=\"Cirugía Propuesta:\"\r\n            placeholder=\"Cirugía Propuesta\"\r\n            maxLength={40}\r\n            value={headingSection['proposedSurgeon']}\r\n            nestedHandler={handleProposedSurgeonDebounced}\r\n            isRequiredError={isRequiredError['proposedSurgeonIsRequired']}\r\n            ref={isProposedSurgeonInputOnError}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(React.forwardRef(HeaderSectionPS));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  radioItem: theme.responsiveStyles({\r\n    width: 248,\r\n  }),\r\n  radioItemMalampati: theme.responsiveStyles({\r\n    width: 110,\r\n  }),\r\n  inputAlign: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  leftContainer: {\r\n    marginBottom: '0px',\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  bottomLine: {\r\n    ...theme.responsiveStyles({ marginBottom: 34 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport DoubleRadioButtonInput from 'components/DoubleRadioButtonInput';\r\nimport FormHeading from 'components/FormHeading';\r\nimport FormRow from 'components/FormRow';\r\nimport LeftFormContainer from 'components/LeftFormContainer';\r\nimport RadioButtonsGroup from 'components/RadioButtonsGroup';\r\nimport RightFormContainer from 'components/RightFormContainer';\r\nimport TitledItem from 'components/TitledItem';\r\nimport TitledTextAreaAutoSize from 'components/TitledTextAreaAutoSize';\r\nimport { PreSurgical } from 'context/PreSurgical';\r\nimport { useContext } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nimport useStyles from './airwayExamForm/useStyles';\r\n\r\nconst AirwayExamForm = ({ className, isRequiredError }) => {\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n  const { airwayExams } = initialState;\r\n\r\n  const {\r\n    mouthOpening,\r\n    malampati,\r\n    thyromentalDistance,\r\n    goniomentalDistance,\r\n    neckMovement,\r\n    teeth,\r\n    difficultAirwayForetell,\r\n    observations,\r\n  } = airwayExams;\r\n\r\n  const classes = useStyles();\r\n\r\n  const updateState = (newValue) => {\r\n    updateGlobalState((prevState) => ({\r\n      ...prevState,\r\n      airwayExams: {\r\n        ...prevState['airwayExams'],\r\n        ...newValue,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleObservationsDebounced = useDebouncedCallback(\r\n    (value) => {\r\n      updateState({\r\n        observations: value,\r\n      });\r\n    },\r\n    250,\r\n    { trailing: true }\r\n  );\r\n\r\n  const handleOnChangeFor = (name) => (value) => updateState({ [name]: value });\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"flex-start\" className={className}>\r\n      <FormHeading\r\n        text=\"Examen de Vía Aerea.\"\r\n        className={classes.rowBottomMargin}\r\n        variant=\"body1\"\r\n      />\r\n      <FormRow className={classes.rowBottomMargin}>\r\n        <LeftFormContainer xs={6} className={classes.leftContainer}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Apertura Bucal:\"\r\n            radioItemsArr={[\r\n              { value: '< 3cm', label: '< 3cm' },\r\n              { value: '> 3cm', label: '> 3cm' },\r\n            ]}\r\n            value={mouthOpening}\r\n            nestedHandler={handleOnChangeFor('mouthOpening')}\r\n            isRequiredError={isRequiredError['mouthOpeningIsRequired']}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer xs={6}>\r\n          <TitledItem title=\"Malampati:\" className={classes.inputAlign}>\r\n            <Grid container wrap=\"nowrap\">\r\n              <RadioButtonsGroup\r\n                radioItemsArr={[\r\n                  { value: 'I', label: 'I' },\r\n                  { value: 'II', label: 'II' },\r\n                  { value: 'III', label: 'III' },\r\n                  { value: 'IV', label: 'IV' },\r\n                ]}\r\n                radioItemClassName={classes.radioItemMalampati}\r\n                value={malampati}\r\n                nestedHandler={handleOnChangeFor('malampati')}\r\n                isRequiredError={isRequiredError['malampatiIsRequired']}\r\n              />\r\n            </Grid>\r\n          </TitledItem>\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <FormRow className={classes.rowBottomMargin}>\r\n        <LeftFormContainer xs={6} className={classes.leftContainer}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Distancia Tiromentoniana:\"\r\n            radioItemsArr={[\r\n              { value: '< 6cm', label: '< 6cm' },\r\n              { value: '> 6cm', label: '> 6cm' },\r\n            ]}\r\n            value={thyromentalDistance}\r\n            nestedHandler={handleOnChangeFor('thyromentalDistance')}\r\n            isRequiredError={isRequiredError['thyromentalDistanceIsRequired']}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer xs={6}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Distancia Goniomentoniana:\"\r\n            radioItemsArr={[\r\n              { value: '< 9cm', label: '< 9cm' },\r\n              { value: '> 9cm', label: '> 9cm' },\r\n            ]}\r\n            className={classes.inputAlign}\r\n            value={goniomentalDistance}\r\n            nestedHandler={handleOnChangeFor('goniomentalDistance')}\r\n            isRequiredError={isRequiredError['goniomentalDistanceIsRequired']}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <FormRow className={classes.rowBottomMargin}>\r\n        <LeftFormContainer xs={6} className={classes.leftContainer}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Movimiento de Cuello:\"\r\n            radioItemsArr={[\r\n              { value: '< 100º', label: '< 100º' },\r\n              { value: '> 100º', label: '> 100º' },\r\n            ]}\r\n            value={neckMovement}\r\n            nestedHandler={handleOnChangeFor('neckMovement')}\r\n            isRequiredError={isRequiredError['neckMovementIsRequired']}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer xs={6}>\r\n          <DoubleRadioButtonInput\r\n            title=\"Dentadura:\"\r\n            radioItemsArr={[\r\n              { value: 'incomplete', label: 'Incompleta' },\r\n              { value: 'complete', label: 'Completa' },\r\n            ]}\r\n            radioItemStyle={classes.radioItem}\r\n            className={classes.inputAlign}\r\n            value={teeth}\r\n            nestedHandler={handleOnChangeFor('teeth')}\r\n            isRequiredError={isRequiredError['teethIsRequired']}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <Grid container alignItems=\"flex-start\" className={classes.bottomLine}>\r\n        <DoubleRadioButtonInput\r\n          title=\"Previsión de Vía Aerea Dificil:\"\r\n          radioItemsArr={[\r\n            { value: 'yes', label: 'Sí' },\r\n            { value: 'no', label: 'No' },\r\n          ]}\r\n          value={difficultAirwayForetell}\r\n          nestedHandler={handleOnChangeFor('difficultAirwayForetell')}\r\n          className={classes.rowBottomMargin}\r\n          isRequiredError={isRequiredError['difficultAirwayForetellIsRequired']}\r\n        />\r\n      </Grid>\r\n      <TitledTextAreaAutoSize\r\n        title=\"Observaciones:\"\r\n        placeholder=\"/..Observaciones...\"\r\n        value={observations}\r\n        nestedHandler={handleObservationsDebounced}\r\n        classNameTextArea={classes.textArea}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AirwayExamForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    ...theme.responsiveStyles({ padding: 16 }),\r\n    border: '2px solid',\r\n    borderColor: theme.palette.secondary.main,\r\n    borderRadius: '4px',\r\n    width: '100%',\r\n  },\r\n  buttonContainer: { ...theme.responsiveStyles({ paddingTop: 16 }), width: 'fit-content' },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './formAddedItem/useStyles';\r\n\r\nconst FormAddedItem = ({ children, className }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"flex-start\"\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormAddedItem;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (value, nestedHandler) => {\r\n  const [valueState, setValueState] = useState(value ? value : 0);\r\n\r\n  const handleOnChange = (event, input) => {\r\n    setValueState(input);\r\n    nestedHandler(input);\r\n  };\r\n  const updateStateValueOn = useCallback(\r\n    (valueProp) => setValueState(valueProp ? valueProp : null),\r\n    []\r\n  );\r\n\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n\r\n  return [valueState, handleOnChange];\r\n};\r\n\r\nexport default useInput;\r\n","import Slider from '@material-ui/core/Slider';\r\n\r\nimport useInput from './standarSlider/useInput';\r\n\r\nconst StandarSlider = ({ value, nestedHandler, ...props }) => {\r\n  const [valueState, handleOnChange] = useInput(value, nestedHandler);\r\n\r\n  return <Slider value={valueState} onChange={handleOnChange} {...props} />;\r\n};\r\n\r\nexport default StandarSlider;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (inputProps, value, ref, isRequiredError, shouldReset, nestedHandler) => {\r\n  const [helperText, setHelperText] = useState();\r\n  const [errorState, setErrorState] = useState();\r\n  const [isLocalErrorSetted, setIsLocalErrorSetted] = useState(false);\r\n  const [valueState, setValueState] = useState(value ? value : '');\r\n\r\n  const checkIfPropExists = useCallback(\r\n    (propObj, nestedPropKey) => (propObj && propObj[nestedPropKey] ? true : false),\r\n    []\r\n  );\r\n  const mayValueHaveDecimals = checkIfPropExists(inputProps, 'decimalplaces');\r\n\r\n  const checkIfValueIsValid = useCallback((inputValue, mayValueHaveDecimalsCondition) => {\r\n    const findMatches = (val, regExpPattern) => val.match(regExpPattern);\r\n    const setItMatches = (matches) => (matches ? true : false);\r\n    const patternForDecimals = /^([0-9]+([.]?[0-9]*)?)?$/;\r\n    const patternForIntegers = /^[0-9]*$/;\r\n    let matches;\r\n    if (mayValueHaveDecimalsCondition) {\r\n      matches = findMatches(inputValue, patternForDecimals);\r\n    } else {\r\n      matches = findMatches(inputValue, patternForIntegers);\r\n    }\r\n    return setItMatches(matches);\r\n  }, []);\r\n\r\n  const checkIfValueIsExceedingMax = useCallback(\r\n    (inputValue, inputPropObj) => {\r\n      const compareIfIsGreaterThan = (val, max) => parseFloat(val) > max;\r\n      const thereIsMaxValue = checkIfPropExists(inputPropObj, 'max');\r\n      return thereIsMaxValue ? compareIfIsGreaterThan(inputValue, inputPropObj.max) : false;\r\n    },\r\n    [checkIfPropExists]\r\n  );\r\n\r\n  const setErrorRefTo = useCallback((bool, refProp) => refProp && (refProp.current = bool), []);\r\n\r\n  const removeErrorState = useCallback(\r\n    (refProp) => {\r\n      setHelperText(null);\r\n      setErrorState(false);\r\n      setErrorRefTo(false, refProp);\r\n      setIsLocalErrorSetted(false);\r\n    },\r\n    [setErrorRefTo]\r\n  );\r\n\r\n  const setInvalidFormatError = useCallback(\r\n    (refProp) => {\r\n      setErrorState(true);\r\n      setHelperText('Formato Invalido');\r\n      setErrorRefTo(true, refProp);\r\n      setIsLocalErrorSetted(true);\r\n    },\r\n    [setErrorRefTo]\r\n  );\r\n\r\n  const setIsExceedingMaxError = useCallback(\r\n    (maxValue, refProp) => {\r\n      setErrorState(true);\r\n      setHelperText(`El límite es ${maxValue}`);\r\n      setErrorRefTo(true, refProp);\r\n      setIsLocalErrorSetted(true);\r\n    },\r\n    [setErrorRefTo]\r\n  );\r\n\r\n  const manageValidation = ({ mayValueHaveDecimalsCondition, propObj, refProp }) => (event) => {\r\n    const isValueValid = checkIfValueIsValid(event.target.value, mayValueHaveDecimalsCondition);\r\n    const isExceedingMax = checkIfValueIsExceedingMax(event.target.value, propObj);\r\n    let valueToReturn;\r\n    if (!isValueValid) {\r\n      setInvalidFormatError(refProp);\r\n      valueToReturn = event.target.value;\r\n    } else if (isExceedingMax) {\r\n      setIsExceedingMaxError(propObj.max, refProp);\r\n      valueToReturn = event.target.value;\r\n    } else if (mayValueHaveDecimalsCondition) {\r\n      const splittedValue = event.target.value.split('.');\r\n      const mayValueHaveDecimalPart = splittedValue.length > 1;\r\n      const isValueInteger = splittedValue.length === 1;\r\n      if (mayValueHaveDecimalPart) {\r\n        const truncatedDecimalPart = splittedValue[1].slice(0, propObj.decimalplaces);\r\n        const integerPart = splittedValue[0];\r\n        const isDecimalPartEmpty = truncatedDecimalPart === '';\r\n        valueToReturn = `${integerPart}.${truncatedDecimalPart}`;\r\n        if (isDecimalPartEmpty) {\r\n          valueToReturn = event.target.value;\r\n        }\r\n      } else if (isValueInteger) {\r\n        valueToReturn = event.target.value;\r\n      }\r\n      const isEdgeCaseSetted = parseInt(splittedValue[0]) === 0 && parseInt(splittedValue[1]) === 0;\r\n      if (!isEdgeCaseSetted) {\r\n        removeErrorState(refProp);\r\n      }\r\n    } else {\r\n      valueToReturn = event.target.value;\r\n      removeErrorState(refProp);\r\n    }\r\n    setValueState(valueToReturn);\r\n    nestedHandler(valueToReturn);\r\n  };\r\n\r\n  const handleOnChange = manageValidation({\r\n    mayValueHaveDecimalsCondition: mayValueHaveDecimals,\r\n    propObj: inputProps,\r\n    refProp: ref,\r\n  });\r\n\r\n  const setRequiredErrorOn = useCallback(\r\n    ({ isRequiredErrorProp, isLocalErrorSettedState, inputValue }) => {\r\n      const isValueEmpty = inputValue === '';\r\n      const isValueEqualToZero = parseFloat(inputValue) === 0;\r\n      const setRequiredFieldError = () => {\r\n        setErrorState(true);\r\n        setHelperText('Campo Requerido');\r\n      };\r\n      if ((isValueEmpty || isValueEqualToZero) && isRequiredErrorProp) {\r\n        setRequiredFieldError();\r\n      } else if (!isLocalErrorSettedState) {\r\n        removeErrorState();\r\n      }\r\n    },\r\n    [removeErrorState]\r\n  );\r\n\r\n  const updateStateValueOn = useCallback((valueProp) => setValueState(valueProp), []);\r\n\r\n  const resetStateValueOn = useCallback((shouldResetProp) => {\r\n    if (shouldResetProp) {\r\n      setValueState('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(\r\n    () =>\r\n      setRequiredErrorOn({\r\n        isRequiredErrorProp: isRequiredError,\r\n        isLocalErrorSettedState: isLocalErrorSetted,\r\n        inputValue: valueState,\r\n      }),\r\n    [isRequiredError, isLocalErrorSetted, valueState, setRequiredErrorOn]\r\n  );\r\n\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n  useEffect(() => resetStateValueOn(shouldReset), [shouldReset, resetStateValueOn]);\r\n\r\n  return [\r\n    {\r\n      helperText,\r\n      errorState,\r\n      valueState,\r\n    },\r\n    handleOnChange,\r\n    setValueState,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import React from 'react';\r\n\r\nimport Input from './Input';\r\nimport useInput from './inputNumber/useInput';\r\n\r\nconst InputNumber = (\r\n  { inputProps, isRequiredError, value, nestedHandler, shouldReset, ...props },\r\n  ref\r\n) => {\r\n  const [inputState, handleOnChange] = useInput(\r\n    inputProps,\r\n    value,\r\n    ref,\r\n    isRequiredError,\r\n    shouldReset,\r\n    nestedHandler\r\n  );\r\n  const { helperText, errorState, valueState } = inputState;\r\n\r\n  return (\r\n    <Input\r\n      inputProps={inputProps}\r\n      error={errorState}\r\n      helperText={helperText}\r\n      value={valueState}\r\n      onChange={handleOnChange}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(InputNumber);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  inputAlign: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  individualInput: {\r\n    paddingRight: '8px',\r\n  },\r\n  innerContainer: { width: 'fit-content', paddingTop: '1px' },\r\n  unitText: { paddingTop: '3px' },\r\n});\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport InputNumber from 'components/InputNumber';\r\nimport TitledItem from 'components/TitledItem';\r\nimport React from 'react';\r\n\r\nimport useStyles from './titledInputWithUnit/useStyles';\r\n\r\nconst TitledInputWithUnit = ({ title, unit, inputWidthClassName, className, ...props }, ref) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TitledItem title={title} className={clsx(classes.inputAlign, className)}>\r\n      <Grid container wrap=\"nowrap\" className={classes.innerContainer} alignItems=\"flex-start\">\r\n        <InputNumber\r\n          className={clsx(inputWidthClassName, classes.individualInput)}\r\n          placeholder={unit}\r\n          ref={ref}\r\n          {...props}\r\n        />\r\n        <Typography variant=\"body2\" className={classes.unitText}>\r\n          {unit}\r\n        </Typography>\r\n      </Grid>\r\n    </TitledItem>\r\n  );\r\n};\r\nexport default React.forwardRef(TitledInputWithUnit);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: '0',\r\n    marginLeft: '2px',\r\n    marginRight: '2px',\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import clsx from 'clsx';\r\n\r\nimport useStyles from './spacerCharacter/useStyles';\r\n\r\nconst SpacerCharacter = ({ children, className }) => {\r\n  const classes = useStyles();\r\n  return <div className={clsx(classes.root, className)}>{children}</div>;\r\n};\r\n\r\nexport default SpacerCharacter;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce/lib';\r\n\r\nconst useInput = (initialState, inputNames, nestedHandler, isRequiredError) => {\r\n  const [error, setError] = useState(false);\r\n  const [value1, value2] = initialState;\r\n\r\n  const handleOnChangeOne = useDebouncedCallback(nestedHandler(inputNames[0]), 250, {\r\n    trailing: true,\r\n  });\r\n  const handleOnChangeTwo = useDebouncedCallback(nestedHandler(inputNames[1]), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n const manageError = useCallback((isRequiredErrorProp) => {\r\n    if (isRequiredErrorProp) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => manageError(isRequiredError), [isRequiredError, manageError]);\r\n\r\n  return [\r\n    {\r\n      value1,\r\n      value2,\r\n      error,\r\n    },\r\n\r\n    {\r\n      handleOnChangeOne,\r\n      handleOnChangeTwo,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topPadding: { paddingTop: '6px' },\r\n  inputContainer: theme.responsiveStyles({ width: 200 }),\r\n  textError: {\r\n    color: theme.palette.alert.main,\r\n    textAlign: 'left',\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n  containerError: {\r\n    width: 'fit-content',\r\n    paddingRight: '8px',\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n  container: {\r\n    margin: '1px',\r\n  },\r\n  measurementUnitText: {\r\n    marginLeft: '8px',\r\n  },\r\n  spacerCharacter: {\r\n    marginRight: '8px',\r\n    marginLeft: '8px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport InputNumber from 'components/InputNumber';\r\nimport SpacerCharacter from 'components/SpacerCharacter';\r\nimport TitledItem from 'components/TitledItem';\r\nimport React from 'react';\r\n\r\nimport useInput from './doubleFieldInput/useInput';\r\nimport useStyles from './doubleFieldInput/useStyles';\r\n\r\nconst DoubleFieldInput = (\r\n  {\r\n    title,\r\n    inputProps,\r\n    inputNames,\r\n    placeholders,\r\n    separatorCharacter,\r\n    stateObj,\r\n    nestedHandler,\r\n    isRequiredError,\r\n    measurementUnit,\r\n    className,\r\n  },\r\n  ref\r\n) => {\r\n  const classes = useStyles();\r\n  const [{ value1, value2, error }, { handleOnChangeOne, handleOnChangeTwo }] = useInput(\r\n    stateObj,\r\n    inputNames,\r\n    nestedHandler,\r\n    isRequiredError\r\n  );\r\n\r\n  const [ref1, ref2] = ref;\r\n\r\n  return (\r\n    <TitledItem title={title} className={className}>\r\n      <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n        <Grid\r\n          container\r\n          wrap=\"nowrap\"\r\n          alignItems=\"flex-start\"\r\n          className={clsx(classes.container, error ? classes.containerError : null)}\r\n        >\r\n          <Grid item className={classes.inputContainer}>\r\n            <InputNumber\r\n              placeholder={placeholders[0]}\r\n              inputProps={inputProps}\r\n              value={value1}\r\n              nestedHandler={handleOnChangeOne}\r\n              ref={ref1}\r\n            />\r\n          </Grid>\r\n          <SpacerCharacter className={clsx(classes.topPadding, classes.spacerCharacter)}>\r\n            {separatorCharacter}\r\n          </SpacerCharacter>\r\n          <Grid item className={classes.inputContainer}>\r\n            <InputNumber\r\n              placeholder={placeholders[1]}\r\n              inputProps={inputProps}\r\n              value={value2}\r\n              nestedHandler={handleOnChangeTwo}\r\n              ref={ref2}\r\n            />\r\n          </Grid>\r\n          {measurementUnit && (\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(classes.topPadding, classes.measurementUnitText)}\r\n            >\r\n              {measurementUnit}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        {error && (\r\n          <Typography variant=\"caption\" className={classes.textError}>\r\n            Ambos Campos Son Requeridos\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </TitledItem>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(DoubleFieldInput);\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (value, nestedHandler) => {\r\n  const [valueState, setValueState] = useState(value ? value : '');\r\n\r\n  const handleOnChange = (event) => {\r\n    setValueState(event.target.value);\r\n    nestedHandler(event.target.value);\r\n  };\r\n\r\n  const updateStateValueOn = useCallback((valueProp) => setValueState(valueProp), []);\r\n\r\n  useEffect(() => updateStateValueOn(value), [value, updateStateValueOn]);\r\n\r\n  return [valueState, handleOnChange];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n    '@global': {\r\n      ' .MuiSelect-root': {\r\n        paddingBottom: '4.9px',\r\n        paddingTop: '4.9px',\r\n        paddingLeft: '4.9px',\r\n      },\r\n      ' .MuiInputLabel-formControl': {\r\n        left: '10px',\r\n      },\r\n    },\r\n  },\r\n  error: {\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport clsx from 'clsx';\r\n\r\nimport useInput from './standarSelect/useInput';\r\nimport useStyles from './standarSelect/useStyles';\r\n\r\nconst StandarSelect = ({\r\n  menuItemsArr,\r\n  placeholder,\r\n  className,\r\n  isRequiredError,\r\n  value,\r\n  nestedHandler,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const [valueState, handleOnChange] = useInput(value, nestedHandler);\r\n\r\n  return (\r\n    <FormControl className={clsx(classes.formControl, className)} error={isRequiredError}>\r\n      <InputLabel id=\"placeholder\">{placeholder}</InputLabel>\r\n      <Select\r\n        labelId=\"placeholder\"\r\n        MenuProps={{ disableScrollLock: true }}\r\n        className={isRequiredError && classes.error}\r\n        value={valueState}\r\n        onChange={handleOnChange}\r\n        {...props}\r\n      >\r\n        {menuItemsArr.map((item) => (\r\n          <MenuItem value={item.value} key={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StandarSelect;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nconst useInput = (initialState, isRequiredError) => {\r\n  const [error, setError] = useState(false);\r\n  const [value1, value2] = initialState;\r\n\r\n const manageError = useCallback((isRequiredErrorProp) => {\r\n    if (isRequiredErrorProp) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => manageError(isRequiredError), [isRequiredError, manageError]);\r\n\r\n  return [value1, value2, error];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  leftSelectInput: {\r\n    marginRight: '24px',\r\n  },\r\n  textError: {\r\n    color: theme.palette.alert.main,\r\n    textAlign: 'left',\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  containerError: {\r\n    width: 'fit-content',\r\n    padding: '8px',\r\n    margin: '1px',\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n  container: {\r\n    margin: '1px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport StandarSelect from 'components/StandarSelect';\r\nimport TitledItem from 'components/TitledItem';\r\n\r\nimport useInput from './doubleSelectInput/useInput';\r\nimport useStyles from './doubleSelectInput/useStyles';\r\n\r\nconst DoubleSelectInput = ({\r\n  title,\r\n  inputNames,\r\n  placeholders,\r\n  stateObj,\r\n  menuItemsArr,\r\n  nestedHandler,\r\n  isRequiredError,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value1, value2, error] = useInput(stateObj, isRequiredError);\r\n\r\n  return (\r\n    <TitledItem title={title}>\r\n      <Grid container alignItems=\"flex-start\" wrap=\"nowrap\">\r\n        <Grid\r\n          container\r\n          wrap=\"nowrap\"\r\n          alignItems=\"flex-start\"\r\n          spacing={2}\r\n          className={clsx(classes.container, error ? classes.containerError : null)}\r\n        >\r\n          <StandarSelect\r\n            name={inputNames[0]}\r\n            placeholder={placeholders[0]}\r\n            menuItemsArr={menuItemsArr[0]}\r\n            className={classes.leftSelectInput}\r\n            value={value1}\r\n            nestedHandler={nestedHandler(inputNames[0])}\r\n          />\r\n          <StandarSelect\r\n            name={inputNames[1]}\r\n            placeholder={placeholders[1]}\r\n            menuItemsArr={menuItemsArr[1]}\r\n            value={value2}\r\n            nestedHandler={nestedHandler(inputNames[1])}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {error && (\r\n        <Typography variant=\"caption\" className={classes.textError}>\r\n          Ambos Campos Son Requeridos\r\n        </Typography>\r\n      )}\r\n    </TitledItem>\r\n  );\r\n};\r\n\r\nexport default DoubleSelectInput;\r\n","import { PreSurgical } from 'context/PreSurgical';\r\nimport { useContext } from 'react';\r\nimport { useMemo, useCallback, useState, useEffect, useRef } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = (ref, isUnresolvedError) => {\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n\r\n  let isWeightInputOnErrorLocal = useRef();\r\n  let isHeightInputOnErrorLocal = useRef();\r\n\r\n  const { physicalExams, currentPatient } = initialState;\r\n\r\n  const { gender } = currentPatient;\r\n\r\n  const { weight, height, vTFactor, bMIndex, bMI, bMIC, tV } = physicalExams;\r\n\r\n  const { isWeightInputOnError, isHeightInputOnError, firstSectionProduct } = ref;\r\n\r\n  const defaultInputError = useMemo(\r\n    () => ({\r\n      weightInputError: false,\r\n      heightInputError: false,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const [weightState, setWeightState] = useState(weight);\r\n  const [heightState, setHeightState] = useState(height);\r\n  const [vTFactorState, setVTFactorState] = useState(vTFactor);\r\n  const [isRequired, setIsRequired] = useState(defaultInputError);\r\n  const [bMIndexValue, setBMIndexValue] = useState(bMIndex);\r\n  const [bMIValue, setBMIValue] = useState(bMI);\r\n  const [bMICValue, setBMICValue] = useState(bMIC);\r\n  const [tVValue, setTVValue] = useState(tV);\r\n  const [isUnresolved, setIsUnresolved] = useState(false);\r\n\r\n  const setRequiredError = useCallback(() => {\r\n    if (weightState === '' || weightState == 0) {\r\n      setIsRequired((prevState) => ({\r\n        ...prevState,\r\n        weightInputError: true,\r\n      }));\r\n    }\r\n    if (heightState === '' || heightState == 0) {\r\n      setIsRequired((prevState) => ({\r\n        ...prevState,\r\n        heightInputError: true,\r\n      }));\r\n    }\r\n  }, [weightState, heightState]);\r\n\r\n  const removeRequiredError = (name) =>\r\n    setIsRequired((prevState) => ({\r\n      ...prevState,\r\n      [name]: false,\r\n    }));\r\n\r\n  const getRoundedResult = useCallback((number) => {\r\n    const stringNumber = number.toString();\r\n    const twoPlacesAfterDot = 3;\r\n    const toIndex = stringNumber.indexOf('.') + twoPlacesAfterDot;\r\n    return Number(stringNumber.slice(0, toIndex));\r\n  }, []);\r\n\r\n  const updateState = (newValues) =>\r\n    updateGlobalState((prevState) => ({\r\n      ...prevState,\r\n      physicalExams: {\r\n        ...prevState['physicalExams'],\r\n        ...newValues,\r\n      },\r\n    }));\r\n\r\n  const calculateBMIndex = (weightVal, heightVal) => weightVal / Math.pow(heightVal / 100, 2);\r\n  const calculateBMIC = (bMIVal, weightVal) => bMIVal + 0.25 * (weightVal - bMIVal);\r\n  const calculateTV = (bMIVal, vTfactorVal) => bMIVal * vTfactorVal;\r\n  const calculateBMIdeal = (genderVal, heightVal) =>\r\n    (genderVal === 'male' ? 50 : 45.5) + 0.91 * (heightVal - 152.4);\r\n\r\n  const getHandlerToCalculate = (weightVal, heightVal, vTfactorVal, genderVal) => () => {\r\n    if (\r\n      weightVal !== '' &&\r\n      weightVal != 0 &&\r\n      !isWeightInputOnErrorLocal.current &&\r\n      heightVal !== '' &&\r\n      heightVal != 0 &&\r\n      !isHeightInputOnErrorLocal.current\r\n    ) {\r\n      const bMIdeal = getRoundedResult(calculateBMIdeal(genderVal, heightVal));\r\n      const bMIndexVal = getRoundedResult(calculateBMIndex(weightVal, heightVal));\r\n      const bMICVal = getRoundedResult(calculateBMIC(bMIdeal, weightVal));\r\n      const tVVal = getRoundedResult(calculateTV(bMIdeal, vTfactorVal));\r\n      updateState({\r\n        ['bMIndex']: bMIndexVal,\r\n        ['bMI']: bMIdeal,\r\n        ['bMIC']: bMICVal,\r\n        ['tV']: tVVal,\r\n      });\r\n      setBMIValue(bMIdeal);\r\n      setBMIndexValue(bMIndexVal);\r\n      setBMICValue(bMICVal);\r\n      setTVValue(tVVal);\r\n      setIsRequired(defaultInputError);\r\n    } else setRequiredError();\r\n  };\r\n\r\n  const calculateOnClick = getHandlerToCalculate(weightState, heightState, vTFactorState, gender);\r\n\r\n  const handleOnChangeFor = (name, setState) => (value) => {\r\n    setState ? setState(value) : null;\r\n    updateState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleWeightOnChange = (value) => {\r\n    setWeightState(value);\r\n    updateState({\r\n      weight: value,\r\n    });\r\n    removeRequiredError('weight');\r\n  };\r\n\r\n  const handleHeightOnchange = (value) => {\r\n    setHeightState(value);\r\n    updateState({\r\n      height: value,\r\n    });\r\n    removeRequiredError('height');\r\n  };\r\n\r\n  const handleWeightDebounced = useDebouncedCallback(handleWeightOnChange, 250, { trailing: true });\r\n\r\n  const handleVTFactorDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('vTFactor', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleHeightDebounced = useDebouncedCallback(handleHeightOnchange, 250, { trailing: true });\r\n\r\n  const handlePulseDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('pulse', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleCardiacAuscultationDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('cardiacAuscultation', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handlePulmonaryAuscultationDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('pulmonaryAuscultation', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleSpineDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('spine', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handlePainLevelDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('painLevel', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleAsaLevelDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('asaLevel', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleObservationsDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('observations', setVTFactorState),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const manageIsUnresolvedOnProp = useCallback((prop) => {\r\n    if (prop) {\r\n      setIsUnresolved(true);\r\n    } else {\r\n      setIsUnresolved(false);\r\n    }\r\n  }, []);\r\n\r\n  const matchRefs = useCallback((updateRef1, withRef1) => {\r\n    updateRef1.current = withRef1.current;\r\n  }, []);\r\n\r\n  const updateRefForValidation = useCallback(\r\n    (weightVal, heightVal, bMIVal, vTFactorVal, refToUpdate) => {\r\n      const currentBMIndex = getRoundedResult(weightVal / Math.pow(heightVal / 100, 2));\r\n      const currentTV = getRoundedResult(bMIVal * vTFactorVal);\r\n      refToUpdate.current = currentBMIndex * currentTV;\r\n    },\r\n    [getRoundedResult]\r\n  );\r\n\r\n  useEffect(() => manageIsUnresolvedOnProp(isUnresolvedError), [\r\n    isUnresolvedError,\r\n    manageIsUnresolvedOnProp,\r\n  ]);\r\n  useEffect(() => {\r\n    matchRefs(isWeightInputOnError, isWeightInputOnErrorLocal);\r\n    matchRefs(isHeightInputOnError, isHeightInputOnErrorLocal);\r\n  });\r\n  useEffect(() => {\r\n    updateRefForValidation(weightState, heightState, bMIValue, vTFactorState, firstSectionProduct);\r\n  }, [\r\n    weightState,\r\n    heightState,\r\n    bMIValue,\r\n    vTFactorState,\r\n    firstSectionProduct,\r\n    updateRefForValidation,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setWeightState(weight);\r\n    setHeightState(height);\r\n    setVTFactorState(vTFactor);\r\n  }, [weight, height, vTFactor]);\r\n\r\n  return [\r\n    {\r\n      weightState,\r\n      heightState,\r\n      vTFactorState,\r\n      isRequired,\r\n      bMIndexValue,\r\n      bMIValue,\r\n      bMICValue,\r\n      tVValue,\r\n      isUnresolved,\r\n      physicalExams,\r\n    },\r\n    { isWeightInputOnErrorLocal, isHeightInputOnErrorLocal },\r\n    {\r\n      handleOnChangeFor,\r\n      calculateOnClick,\r\n      handleWeightDebounced,\r\n      handleVTFactorDebounced,\r\n      handleHeightDebounced,\r\n      handlePulseDebounced,\r\n      handleCardiacAuscultationDebounced,\r\n      handlePulmonaryAuscultationDebounced,\r\n      handleSpineDebounced,\r\n      handlePainLevelDebounced,\r\n      handleAsaLevelDebounced,\r\n      handleObservationsDebounced,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputWidth: theme.responsiveStyles({ minWidth: 180 }),\r\n  inputAlign: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  individualInput: {\r\n    paddingRight: '8px',\r\n  },\r\n  leftContainer: {\r\n    marginBottom: '0px',\r\n  },\r\n  radioItem: theme.responsiveStyles({\r\n    width: 110,\r\n  }),\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  bottomLine: {\r\n    ...theme.responsiveStyles({ marginBottom: 34 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  rowContainerBottomLine: {\r\n    ...theme.responsiveStyles({\r\n      marginBottom: 16,\r\n      marginTop: 32,\r\n    }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n    width: '100%',\r\n    height: '1px',\r\n  },\r\n  fitContent: { width: 'fit-content' },\r\n  sliders: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '80%',\r\n      marginLeft: '30px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n  textFirstSectionSpacing: theme.responsiveStyles({ marginBottom: 16, paddingTop: 8 }),\r\n  textSecondSectionSpacing: theme.responsiveStyles({ paddingTop: 8 }),\r\n  textAligment: { textAlign: 'left' },\r\n  textMark: {\r\n    width: 'fit-content',\r\n    paddingRight: '5px',\r\n    paddingLeft: '5px',\r\n  },\r\n  textMarkContainer: {\r\n    marginRight: '15px',\r\n    flexShrink: '0',\r\n  },\r\n  leftTextMarkContainer: theme.responsiveStyles({ width: 82 }),\r\n  rightTextMarkContainer: theme.responsiveStyles({ width: 58 }),\r\n  formulaText: theme.responsiveStyles({ marginBottom: 18 }),\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n  isUnresolvedError: {\r\n    width: '100%',\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n    ...theme.responsiveStyles({ padding: 24 }),\r\n  },\r\n  textError: {\r\n    color: theme.palette.alert.main,\r\n    textAlign: 'left',\r\n    marginRight: '14px',\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport FormAddedItem from 'components/FormAddedItem';\r\nimport FormHeading from 'components/FormHeading';\r\nimport FormRow from 'components/FormRow';\r\nimport LeftFormContainer from 'components/LeftFormContainer';\r\nimport RightFormContainer from 'components/RightFormContainer';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarSlider from 'components/StandarSlider';\r\nimport TitledInputWithUnit from 'components/TitledInputWithUnit';\r\nimport TitledItem from 'components/TitledItem';\r\nimport TitledTextAreaAutoSize from 'components/TitledTextAreaAutoSize';\r\nimport React from 'react';\r\n\r\nimport DoubleFieldInput from './DoubleFieldInput.js';\r\nimport DoubleSelectInput from './DoubleSelectInput';\r\nimport useForm from './firstSectionPhysicalExam/useForm';\r\nimport useStyles from './firstSectionPhysicalExam/useStyles';\r\n\r\nconst FirstSectionPhysicalExam = ({ className, isRequiredError, isUnresolvedError }, ref) => {\r\n  const classes = useStyles();\r\n  const [\r\n    {\r\n      weightState,\r\n      heightState,\r\n      vTFactorState,\r\n      isRequired,\r\n      bMIndexValue,\r\n      bMIValue,\r\n      bMICValue,\r\n      tVValue,\r\n      isUnresolved,\r\n      physicalExams,\r\n    },\r\n    { isWeightInputOnErrorLocal, isHeightInputOnErrorLocal },\r\n    {\r\n      handleOnChangeFor,\r\n      calculateOnClick,\r\n      handleWeightDebounced,\r\n      handleVTFactorDebounced,\r\n      handleHeightDebounced,\r\n      handlePulseDebounced,\r\n      handleCardiacAuscultationDebounced,\r\n      handlePulmonaryAuscultationDebounced,\r\n      handleSpineDebounced,\r\n      handlePainLevelDebounced,\r\n      handleAsaLevelDebounced,\r\n      handleObservationsDebounced,\r\n    },\r\n  ] = useForm(ref, isUnresolvedError);\r\n\r\n  const {\r\n    isRequiredErrorFirstSectionState,\r\n    bloodPresureErrorState,\r\n    bloodTypeErrorState,\r\n  } = isRequiredError;\r\n\r\n  const { weightInputError, heightInputError } = isRequired;\r\n  const {\r\n    cardiacAuscultation,\r\n    pulmonaryAuscultation,\r\n    spine,\r\n    diastolicPressure,\r\n    systolicPressure,\r\n    pulse,\r\n    asaLevel,\r\n    painLevel,\r\n    observations,\r\n    bloodType,\r\n    factorRh,\r\n  } = physicalExams;\r\n\r\n  const { bloodPresureForm, isPulseInputOnError } = ref;\r\n\r\n  return (\r\n    <Grid container className={className}>\r\n      <FormHeading className={classes.rowBottomMargin} text=\"Exámen Físico.\" variant=\"body1\" />\r\n      <Grid container className={isUnresolved ? classes.isUnresolvedError : null}>\r\n        <FormRow className={classes.rowBottomMargin}>\r\n          <LeftFormContainer xs={6} className={classes.leftContainer}>\r\n            <TitledInputWithUnit\r\n              title=\"Peso:\"\r\n              inputProps={{\r\n                decimalplaces: 1,\r\n                max: 999,\r\n              }}\r\n              value={weightState}\r\n              nestedHandler={handleWeightDebounced}\r\n              unit=\"Kg\"\r\n              inputWidthClassName={classes.inputWidth}\r\n              isRequiredError={\r\n                weightInputError || isRequiredErrorFirstSectionState['weightIsRequired']\r\n              }\r\n              ref={isWeightInputOnErrorLocal}\r\n            />\r\n          </LeftFormContainer>\r\n          <RightFormContainer xs={6}>\r\n            <TitledInputWithUnit\r\n              title=\"Altura:\"\r\n              inputProps={{\r\n                max: 300,\r\n              }}\r\n              value={heightState}\r\n              nestedHandler={handleHeightDebounced}\r\n              unit=\"Cm\"\r\n              inputWidthClassName={classes.inputWidth}\r\n              isRequiredError={\r\n                heightInputError || isRequiredErrorFirstSectionState['heightIsRequired']\r\n              }\r\n              ref={isHeightInputOnErrorLocal}\r\n            />\r\n          </RightFormContainer>\r\n        </FormRow>\r\n        <LeftFormContainer sm={12} className={clsx(classes.leftContainer, classes.rowBottomMargin)}>\r\n          <TitledItem title=\"Factor VT:\">\r\n            <StandarSlider\r\n              marks={[\r\n                { value: 2, label: '2 ml/Kg' },\r\n                { value: 3, label: '3 ml/Kg' },\r\n                { value: 4, label: '4 ml/Kg' },\r\n                { value: 5, label: '5 ml/Kg' },\r\n                { value: 6, label: '6 ml/Kg' },\r\n                { value: 7, label: '7 ml/Kg' },\r\n                { value: 8, label: '8 ml/Kg' },\r\n                { value: 9, label: '9 ml/Kg' },\r\n              ]}\r\n              step={1}\r\n              valueLabelDisplay=\"off\"\r\n              value={vTFactorState}\r\n              nestedHandler={handleVTFactorDebounced}\r\n              min={2}\r\n              max={9}\r\n              className={classes.sliders}\r\n            />\r\n          </TitledItem>\r\n        </LeftFormContainer>\r\n        <Grid container className={!isUnresolved ? classes.bottomLine : null}>\r\n          <FormAddedItem className={!isUnresolved ? classes.rowBottomMargin : null}>\r\n            <Grid container alignItems=\"flex-start\">\r\n              <Grid container item xs={6} direction=\"column\" alignItems=\"flex-start\">\r\n                <Grid\r\n                  container\r\n                  alignItems=\"flex-start\"\r\n                  wrap=\"nowrap\"\r\n                  className={classes.rowContainer}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    className={clsx(classes.textMarkContainer, classes.leftTextMarkContainer)}\r\n                  >\r\n                    <FormHeading\r\n                      variant=\"body2\"\r\n                      className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                      text=\"IMC:\"\r\n                    />\r\n                  </Grid>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n                  >\r\n                    {`${bMIndexValue ? bMIndexValue : '- '} Kg/m2`}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  alignItems=\"flex-start\"\r\n                  wrap=\"nowrap\"\r\n                  className={classes.rowContainer}\r\n                >\r\n                  <Grid\r\n                    container\r\n                    className={clsx(classes.textMarkContainer, classes.leftTextMarkContainer)}\r\n                  >\r\n                    <FormHeading\r\n                      variant=\"body2\"\r\n                      className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                      text=\"PIC:\"\r\n                    />\r\n                  </Grid>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n                  >\r\n                    {`${bMICValue ? bMICValue : '- '} Kg`}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={6} alignItems=\"flex-start\">\r\n                <Grid container alignItems=\"flex-start\" wrap=\"nowrap\">\r\n                  <Grid\r\n                    container\r\n                    className={clsx(classes.textMarkContainer, classes.rightTextMarkContainer)}\r\n                  >\r\n                    <FormHeading\r\n                      variant=\"body2\"\r\n                      className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                      text=\"PI:\"\r\n                    />\r\n                  </Grid>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n                  >\r\n                    {`${bMIValue ? bMIValue : '- '} Kg`}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid container alignItems=\"flex-start\" wrap=\"nowrap\">\r\n                  <Grid\r\n                    container\r\n                    className={clsx(classes.textMarkContainer, classes.rightTextMarkContainer)}\r\n                  >\r\n                    <FormHeading\r\n                      variant=\"body2\"\r\n                      className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                      text=\"VT:\"\r\n                    />\r\n                  </Grid>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n                  >\r\n                    {`${tVValue ? tVValue : '- '} ml`}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid className={classes.rowContainerBottomLine} />\r\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Fórmulas utilizadas:\"\r\n              />\r\n              <Typography variant=\"caption\" className={classes.formulaText} color=\"textSecondary\">\r\n                IMC = PESO/ALTURA 2\r\n              </Typography>\r\n              <Typography\r\n                variant=\"caption\"\r\n                align=\"left\"\r\n                className={classes.formulaText}\r\n                color=\"textSecondary\"\r\n              >\r\n                PESO IDEAL: <br /> HOMBRE = 50 + 0.91*(ALTURA-152.4)\r\n                <br />\r\n                MUJER = 45.5 + 0.91*(ALTURA - 152.4)\r\n              </Typography>\r\n              <Typography variant=\"caption\" className={classes.formulaText} color=\"textSecondary\">\r\n                PIC = PI + 0.25* (P-PI) (Fórmula de Wilkens)\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                VT = PI * factor VT\r\n              </Typography>\r\n            </Grid>\r\n            <Grid className={classes.rowContainerBottomLine} />\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <StandarButton text=\"CALCULAR\" onClick={calculateOnClick} />\r\n            </Grid>\r\n          </FormAddedItem>\r\n        </Grid>\r\n      </Grid>\r\n      {isUnresolved && (\r\n        <Typography\r\n          variant=\"caption\"\r\n          className={clsx(classes.textError, isUnresolved && classes.rowBottomMargin)}\r\n        >\r\n          No ha presionado el botón Calcular o los resultados obtenidos están desactualizados, esto\r\n          último se debe a que luego de calcular los valores cambió el valor de Peso, Altura o\r\n          Factor VT, verifique que estos últimos datos sean correctos y presione Calcular, luego\r\n          valide el formulario.\r\n        </Typography>\r\n      )}\r\n      <FormRow className={classes.rowBottomMargin} alignItems=\"flex-start\">\r\n        <LeftFormContainer>\r\n          <DoubleFieldInput\r\n            inputNames={['systolicPressure', 'diastolicPressure']}\r\n            systolicPressure\r\n            title=\"Presión Arterial:\"\r\n            placeholders={['Sist.', 'Diast.']}\r\n            Diast\r\n            inputProps={{\r\n              max: 250,\r\n            }}\r\n            separatorCharacter=\"/\"\r\n            measurementUnit=\"mmHg\"\r\n            nestedHandler={handleOnChangeFor}\r\n            stateObj={[systolicPressure, diastolicPressure]}\r\n            isRequiredError={bloodPresureErrorState}\r\n            ref={bloodPresureForm}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer>\r\n          <TitledInputWithUnit\r\n            title=\"Pulso:\"\r\n            inputProps={{\r\n              max: 300,\r\n            }}\r\n            value={pulse}\r\n            nestedHandler={handlePulseDebounced}\r\n            unit=\"ppm\"\r\n            inputWidthClassName={classes.inputWidth}\r\n            isRequiredError={isRequiredErrorFirstSectionState['pulseIsRequired']}\r\n            ref={isPulseInputOnError}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <FormRow className={classes.rowBottomMargin} alignItems=\"flex-start\">\r\n        <LeftFormContainer>\r\n          <DoubleSelectInput\r\n            title=\"Tipo de Sangre:\"\r\n            inputNames={['bloodType', 'factorRh']}\r\n            placeholders={['Grupo', 'Factor']}\r\n            stateObj={[bloodType, factorRh]}\r\n            menuItemsArr={[\r\n              [\r\n                { value: 'O', label: 'O' },\r\n                { value: 'A', label: 'A' },\r\n                { value: 'B', label: 'B' },\r\n                { value: 'AB', label: 'AB' },\r\n              ],\r\n              [\r\n                { value: 'Rh (-)', label: 'Rh (-)' },\r\n                { value: 'Rh (+)', label: 'Rh (+)' },\r\n              ],\r\n            ]}\r\n            nestedHandler={handleOnChangeFor}\r\n            isRequiredError={bloodTypeErrorState}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer>\r\n          <TitledTextAreaAutoSize\r\n            title=\"Auscultación Cardiaca:\"\r\n            placeholder=\"/..Resultado...\"\r\n            nestedHandler={handleCardiacAuscultationDebounced}\r\n            value={cardiacAuscultation}\r\n            isRequiredError={isRequiredErrorFirstSectionState['cardiacAuscultationIsRequired']}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <FormRow\r\n        alignItems=\"flex-start\"\r\n        className={clsx(classes.rowBottomMargin, classes.bottomLine)}\r\n      >\r\n        <LeftFormContainer>\r\n          <TitledTextAreaAutoSize\r\n            title=\"Auscultación Pulmonar:\"\r\n            placeholder=\"/..Resultado...\"\r\n            nestedHandler={handlePulmonaryAuscultationDebounced}\r\n            value={pulmonaryAuscultation}\r\n            isRequiredError={isRequiredErrorFirstSectionState['pulmonaryAuscultationIsRequired']}\r\n          />\r\n        </LeftFormContainer>\r\n        <RightFormContainer className={classes.rowBottomMargin}>\r\n          <TitledTextAreaAutoSize\r\n            title=\"Columna Vertebral:\"\r\n            placeholder=\"/..Observaciones...\"\r\n            nestedHandler={handleSpineDebounced}\r\n            value={spine}\r\n            isRequiredError={isRequiredErrorFirstSectionState['spineIsRequired']}\r\n          />\r\n        </RightFormContainer>\r\n      </FormRow>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"flex-start\"\r\n        className={clsx(classes.rowBottomMargin, classes.bottomLine)}\r\n      >\r\n        <TitledItem title=\"Grado de Dolor:\" className={classes.rowBottomMargin}>\r\n          <StandarSlider\r\n            marks={[\r\n              { value: 0, label: '0' },\r\n              { value: 1, label: '1' },\r\n              { value: 2, label: '2' },\r\n              { value: 3, label: '3' },\r\n              { value: 4, label: '4' },\r\n              { value: 5, label: '5' },\r\n              { value: 6, label: '6' },\r\n              { value: 7, label: '7' },\r\n              { value: 8, label: '8' },\r\n              { value: 9, label: '9' },\r\n              { value: 10, label: '10' },\r\n            ]}\r\n            defaultValue={0}\r\n            step={1}\r\n            valueLabelDisplay=\"off\"\r\n            value={painLevel}\r\n            nestedHandler={handlePainLevelDebounced}\r\n            min={0}\r\n            max={10}\r\n            className={classes.sliders}\r\n          />\r\n        </TitledItem>\r\n        <TitledItem title=\"ASA:\" className={classes.rowBottomMargin}>\r\n          <StandarSlider\r\n            marks={[\r\n              { value: 1, label: 'I' },\r\n              { value: 2, label: 'II' },\r\n              { value: 3, label: 'III' },\r\n              { value: 4, label: 'IV' },\r\n              { value: 5, label: 'V' },\r\n              { value: 6, label: 'VI' },\r\n            ]}\r\n            defaultValue={1}\r\n            step={1}\r\n            valueLabelDisplay=\"off\"\r\n            value={asaLevel}\r\n            nestedHandler={handleAsaLevelDebounced}\r\n            min={1}\r\n            max={6}\r\n            className={classes.sliders}\r\n          />\r\n        </TitledItem>\r\n      </Grid>\r\n      <TitledTextAreaAutoSize\r\n        title=\"Observaciones:\"\r\n        placeholder=\"/..Observaciones...\"\r\n        nestedHandler={handleObservationsDebounced}\r\n        value={observations}\r\n        classNameTextArea={classes.textArea}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(FirstSectionPhysicalExam);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 'fit-content',\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './standarSwitch/useStyles';\r\n\r\nconst StandarSwitch = ({ id, className, state, handleOnChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container alignItems=\"center\" className={clsx(classes.root, className)}>\r\n      <Typography>No</Typography>\r\n      <Switch checked={state} onChange={handleOnChange} id={id} />\r\n      <Typography>Sí</Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StandarSwitch;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  childrenContainer: {\r\n    visibility: 'hidden',\r\n    opacity: '0',\r\n    transition: 'all 0.5s ease-in-out',\r\n  },\r\n  renderedChildrenContainer: {\r\n    visibility: 'visible',\r\n    opacity: '1',\r\n  },\r\n  formHeaderContainer: {\r\n    ...theme.responsiveStyles({\r\n      paddingRight: 24,\r\n      paddingLeft: 24,\r\n      paddingTop: 8,\r\n      paddingBottom: 8,\r\n    }),\r\n    background: theme.palette.ternary.main,\r\n    borderStyle: 'solid',\r\n    borderWidth: '0 0 2px 0',\r\n    borderColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport StandarSwitch from 'components/StandarSwitch';\r\nimport React from 'react';\r\n\r\nimport useStyles from './formItemsWithSwitch/useStyles';\r\n\r\nconst FormItemsWithSwitch = ({\r\n  groupTitle,\r\n  children,\r\n  switchState,\r\n  handleSwitch,\r\n  className,\r\n  childrenContainerStyles,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container item direction=\"column\" xs={12} alignItems=\"flex-start\" className={className}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        wrap=\"nowrap\"\r\n        className={classes.formHeaderContainer}\r\n      >\r\n        <Typography>{groupTitle}</Typography>\r\n        <StandarSwitch state={switchState} handleOnChange={handleSwitch} />\r\n      </Grid>\r\n      {switchState ? (\r\n        <Grid\r\n          container\r\n          alignItems=\"flex-start\"\r\n          item\r\n          xs={12}\r\n          className={clsx(\r\n            classes.childrenContainer,\r\n            switchState && classes.renderedChildrenContainer,\r\n            childrenContainerStyles\r\n          )}\r\n        >\r\n          {children}\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormItemsWithSwitch;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    ...theme.responsiveStyles({\r\n      padding: 24,\r\n    }),\r\n    width: '500px',\r\n    borderRadius: '5px',\r\n    borderWidth: '2px',\r\n    borderColor: theme.palette.secondary.main,\r\n    borderStyle: 'solid',\r\n    background: theme.palette.mainBackground.dark,\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  modalItemsMargin: theme.responsiveStyles({\r\n    marginBottom: 24,\r\n  }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StandarButton from 'components/StandarButton';\r\nimport React from 'react';\r\n\r\nimport useStyles from './preSurgicalFormChildrenModal/useStyles';\r\n\r\nconst PreSurgicalFormChildrenModal = (\r\n  { text, handleAcceptButton, handleCancelButton, ...props },\r\n  ref\r\n) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignContent=\"flex-start\"\r\n      className={classes.root}\r\n      ref={ref}\r\n      {...props}\r\n    >\r\n      <Typography className={classes.modalItemsMargin}>{text}</Typography>\r\n      <Grid container justifyContent=\"space-evenly\">\r\n        <StandarButton text={'Aceptar'} onClick={handleAcceptButton} />\r\n        <StandarButton text={'Cancelar'} onClick={handleCancelButton} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default React.forwardRef(PreSurgicalFormChildrenModal);\r\n","import { useEffect, useState, useCallback } from 'react';\r\n\r\nconst useInput = (nestedHandler, initialState, setGroupState, name) => {\r\n  const [value, setValue] = useState(initialState ? initialState : false);\r\n\r\n  const handleOnChange = (event) => {\r\n    setValue(event.target.checked);\r\n    nestedHandler(event);\r\n    setGroupState((prevState) => ({\r\n      ...prevState,\r\n      [name]: event.target.checked,\r\n    }));\r\n  };\r\n\r\n  const updateStateValueOn = useCallback((valueProp) => setValue(valueProp), []);\r\n\r\n  useEffect(() => updateStateValueOn(initialState), [initialState, updateStateValueOn]);\r\n\r\n  return [value, handleOnChange];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  labelText: {\r\n    '& .MuiTypography-alignCenter': {\r\n      textAlign: 'left',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n    },\r\n  },\r\n});\r\nexport default useStyles;\r\n","import Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport useCheckbox from './checkboxItem/useCheckbox';\r\nimport useStyles from './checkboxItem/useStyles';\r\n\r\nconst CheckboxItem = ({\r\n  initialState,\r\n  setGroupState,\r\n  nestedHandler,\r\n  onFocus,\r\n  name,\r\n  checkboxLabel,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, handleOnChange] = useCheckbox(nestedHandler, initialState, setGroupState, name);\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox checked={value} onChange={handleOnChange} name={name} />}\r\n      label={checkboxLabel}\r\n      className={classes.labelText}\r\n      onFocus={onFocus}\r\n      name={name}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CheckboxItem;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useCheckboxesGroup = (evaluateValuesEffect) => {\r\n  const [checkboxesValues, setCheckboxesValues] = useState();\r\n\r\n  useEffect(() => {\r\n    if (evaluateValuesEffect) {\r\n      evaluateValuesEffect(checkboxesValues);\r\n    }\r\n  }, [evaluateValuesEffect, checkboxesValues]);\r\n\r\n  return [setCheckboxesValues];\r\n};\r\n\r\nexport default useCheckboxesGroup;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  checkboxesColumn: {\r\n    ...theme.responsiveStyles({ marginRight: 24, marginBottom: 24, paddingLeft: 24 }),\r\n    flexShrink: '0',\r\n  },\r\n  noWrapWithOutSlider: {\r\n    width: 'fit-content',\r\n  },\r\n  noWrapContainer: {\r\n    scrollSnapType: 'x mandatory',\r\n  },\r\n  noWrapChildren: {\r\n    scrollSnapAlign: 'start',\r\n    margin: '0px',\r\n    '& .MuiFormControlLabel-root': {\r\n      marginRight: '0px',\r\n      paddingRight: '16px',\r\n      width: '100%',\r\n    },\r\n  },\r\n\r\n  scrollOnAmountMoreThan8Container: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      overflowX: 'scroll',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      overflowX: 'unset',\r\n    },\r\n  },\r\n\r\n  scrollOnAmountMoreThan8Children: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '50%',\r\n      '& .MuiFormControlLabel-root': {\r\n        boxSizing: 'border-box',\r\n      },\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 'fit-content',\r\n      '& .MuiFormControlLabel-root': {\r\n        boxSizing: 'unset',\r\n      },\r\n    },\r\n  },\r\n\r\n  scrollOnAmountMoreThan12Container: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      overflowX: 'scroll',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      overflowX: 'unset',\r\n    },\r\n  },\r\n\r\n  scrollOnAmountMoreThan12Children: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '50%',\r\n      '& .MuiFormControlLabel-root': {\r\n        boxSizing: 'border-box',\r\n      },\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '33.3%',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 'fit-content',\r\n      '& .MuiFormControlLabel-root': {\r\n        boxSizing: 'unset',\r\n      },\r\n    },\r\n  },\r\n\r\n  scrollOnAmountMoreThan16Container: {\r\n    overflowX: 'scroll',\r\n  },\r\n\r\n  scrollOnAmountMoreThan16Children: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '50%',\r\n      '& .MuiFormControlLabel-root': {\r\n        boxSizing: 'border-box',\r\n      },\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '33.3%',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '25%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport CheckboxItem from './standarCheckboxesGroup/CheckboxItem';\r\nimport useCheckboxesGroup from './standarCheckboxesGroup/useCheckboxesGroup';\r\nimport useStyles from './standarCheckboxesGroup/useStyles';\r\n\r\nconst StandarCheckboxesGroup = ({\r\n  groupLabel,\r\n  helperText,\r\n  checkboxesArr,\r\n  checkboxesState,\r\n  nestedHandler,\r\n  handleOnFocus,\r\n  className,\r\n  noWrap,\r\n  evaluateValuesEffect,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const [setCheckboxesValues] = useCheckboxesGroup(evaluateValuesEffect);\r\n  const checkboxesAmount = checkboxesArr.length;\r\n  const noMoreThan8Wrap = noWrap && checkboxesAmount <= 8;\r\n  const moreThan8Wrap = noWrap && checkboxesAmount > 8 && checkboxesAmount < 13;\r\n  const moreThan12Wrap = noWrap && checkboxesAmount > 12 && checkboxesAmount < 17;\r\n  const moreThan16Wrap = noWrap && checkboxesAmount > 16;\r\n\r\n  let checkboxesColumnsArr = [];\r\n  let counter = 1;\r\n  let columArr = [];\r\n\r\n  const checkboxItemsArr = checkboxesArr.map((item) => {\r\n    const currentKey = item['name'];\r\n    const currentLabel = item['label'];\r\n    return (\r\n      <CheckboxItem\r\n        initialState={checkboxesState[currentKey]}\r\n        nestedHandler={nestedHandler}\r\n        setGroupState={setCheckboxesValues}\r\n        checkboxLabel={currentLabel}\r\n        name={currentKey}\r\n        key={currentKey}\r\n        onFocus={handleOnFocus}\r\n      />\r\n    );\r\n  });\r\n  for (let item of checkboxItemsArr) {\r\n    columArr.push(item);\r\n    if (columArr.length === 4 || checkboxItemsArr.length === counter) {\r\n      checkboxesColumnsArr.push(\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"flex-start\"\r\n          className={clsx(\r\n            classes.checkboxesColumn,\r\n            noWrap ? classes.noWrapChildren : classes.noWrapWithOutSlider,\r\n            noMoreThan8Wrap && classes.noWrapWithOutSlider,\r\n            moreThan8Wrap && classes.scrollOnAmountMoreThan8Children,\r\n            moreThan12Wrap && classes.scrollOnAmountMoreThan12Children,\r\n            moreThan16Wrap && classes.scrollOnAmountMoreThan16Children\r\n          )}\r\n          key={`checkboxesColumn${counter}`}\r\n        >\r\n          {columArr}\r\n        </Grid>\r\n      );\r\n      columArr = [];\r\n    }\r\n    counter++;\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" className={className} {...props}>\r\n      {groupLabel && <FormLabel component=\"legend\">{groupLabel}</FormLabel>}\r\n      <FormGroup>\r\n        <Grid\r\n          container\r\n          alignItems=\"flex-start\"\r\n          wrap={noWrap ? 'nowrap' : 'wrap'}\r\n          className={clsx(\r\n            noWrap && classes.noWrapContainer,\r\n            moreThan8Wrap && classes.scrollOnAmountMoreThan8Container,\r\n            moreThan12Wrap && classes.scrollOnAmountMoreThan12Container,\r\n            moreThan16Wrap && classes.scrollOnAmountMoreThan16Container\r\n          )}\r\n        >\r\n          {checkboxesColumnsArr}\r\n        </Grid>\r\n      </FormGroup>\r\n      <FormHelperText>{helperText}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default StandarCheckboxesGroup;\r\n","import Modal from '@material-ui/core/Modal';\r\n\r\nconst StandarModal = ({ children, openState, ...props }) => (\r\n  <Modal open={openState} {...props}>\r\n    {children}\r\n  </Modal>\r\n);\r\n\r\nexport default StandarModal;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst StandarPagination = ({ className, ...props }) => (\r\n  <Grid container justifyContent=\"center\" alignItems=\"center\" className={className}>\r\n    <Pagination {...props} />\r\n  </Grid>\r\n);\r\n\r\nexport default StandarPagination;\r\n","import { useState } from 'react';\r\n\r\nconst useButtonHandlers = (setStateObj, key) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const { updateGlobalState, setCompletedStudiesParent } = setStateObj;\r\n  const deleteExistingKeyFromState = (prevState, currentName) => {\r\n    const stateObj = { ...prevState };\r\n    delete stateObj[currentName];\r\n    return stateObj;\r\n  };\r\n\r\n  const handleOnClickDeleteButton = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleAcceptButtonFor = (currentKey) => () => {\r\n    updateGlobalState((prevState) => deleteExistingKeyFromState(prevState, currentKey));\r\n    setCompletedStudiesParent((prevState) => deleteExistingKeyFromState(prevState, currentKey));\r\n    setShowModal(false);\r\n  };\r\n  const handleAcceptButton = handleAcceptButtonFor(key);\r\n\r\n  const handleCancelButton = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return [\r\n    showModal,\r\n    {\r\n      handleOnClickDeleteButton,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useButtonHandlers;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textMark: {\r\n    width: 'fit-content',\r\n    paddingRight: '5px',\r\n    paddingLeft: '5px',\r\n  },\r\n  textMarkContainer: {\r\n    width: 'fit-content',\r\n    flexShrink: '0',\r\n    paddingLeft: '5px',\r\n  },\r\n  rowContainer: {\r\n    ...theme.responsiveStyles({ marginBottom: 16 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  textAligment: { textAlign: 'left' },\r\n  textFirstSectionSpacing: theme.responsiveStyles({ marginBottom: 16, paddingTop: 8 }),\r\n  textSecondSectionSpacing: {\r\n    ...theme.responsiveStyles({ paddingTop: 8 }),\r\n    marginLeft: '15px',\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  wrapText: {\r\n    inlineSize: '80%',\r\n    overflowWrap: 'break-word',\r\n    hyphens: 'auto',\r\n  },\r\n  result: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '90px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '99px',\r\n    },\r\n  },\r\n  observations: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '126px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '136px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport FormAddedItem from 'components/FormAddedItem';\r\nimport FormHeading from 'components/FormHeading';\r\nimport PreSurgicalFormChildrenModal from 'components/PreSurgicalFormChildrenModal';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarModal from 'components/StandarModal';\r\nimport React from 'react';\r\n\r\nimport useButtonHandlers from './completedStudy/useButtonHandlers';\r\nimport useStyles from './completedStudy/useStyles';\r\n\r\nconst CompletedStudy = ({ className, completedStudiesValues, setStateObj }) => {\r\n  const { name, label, result, date, observations, unit, imageFiles } = completedStudiesValues;\r\n  const [\r\n    showModal,\r\n    { handleOnClickDeleteButton, handleAcceptButton, handleCancelButton },\r\n  ] = useButtonHandlers(setStateObj, name);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormAddedItem className={className}>\r\n      <StandarModal openState={showModal}>\r\n        <PreSurgicalFormChildrenModal\r\n          text={`El estudio completado \"${label}\" será eliminado permanentemente, ¿Está seguro que desea continuar?`}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      <Grid container alignItems=\"center\" className={classes.rowBottomMargin}>\r\n        <FormHeading\r\n          variant=\"body1\"\r\n          className={clsx(classes.textMark, classes.textAligment)}\r\n          text={`Estudio: ${label}`}\r\n        />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n          <Grid\r\n            container\r\n            className={clsx(\r\n              classes.textMarkContainer,\r\n              observations === '' ? classes.result : classes.observations\r\n            )}\r\n          >\r\n            <FormHeading\r\n              variant=\"body2\"\r\n              className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n              text=\"Resultado:\"\r\n            />\r\n          </Grid>\r\n          <Typography\r\n            variant=\"body2\"\r\n            className={clsx(\r\n              classes.textSecondSectionSpacing,\r\n              classes.textAligment,\r\n              classes.wrapText\r\n            )}\r\n          >\r\n            {`${result} ${unit !== undefined ? unit : ''}`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n          <Grid\r\n            container\r\n            className={clsx(\r\n              classes.textMarkContainer,\r\n              observations === '' ? classes.result : classes.observations\r\n            )}\r\n          >\r\n            <FormHeading\r\n              variant=\"body2\"\r\n              className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n              text=\"Fecha:\"\r\n            />\r\n          </Grid>\r\n          <Typography\r\n            variant=\"body2\"\r\n            className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n          >\r\n            {date}\r\n          </Typography>\r\n        </Grid>\r\n        {observations !== '' ? (\r\n          <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n            <Grid\r\n              container\r\n              className={clsx(\r\n                classes.textMarkContainer,\r\n                observations === '' ? classes.result : classes.observations\r\n              )}\r\n            >\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Observaciones:\"\r\n              />\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(\r\n                classes.textSecondSectionSpacing,\r\n                classes.textAligment,\r\n                classes.wrapText\r\n              )}\r\n            >\r\n              {observations}\r\n            </Typography>\r\n          </Grid>\r\n        ) : null}\r\n        {imageFiles !== undefined && imageFiles.length !== 0 ? (\r\n          <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n            <Grid\r\n              container\r\n              className={clsx(\r\n                classes.textMarkContainer,\r\n                observations === '' ? classes.result : classes.observations\r\n              )}\r\n            >\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Archivos:\"\r\n              />\r\n            </Grid>\r\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n              {imageFiles.map((item) => (\r\n                <Typography\r\n                  key={item}\r\n                  variant=\"body2\"\r\n                  className={clsx(classes.textSecondSectionSpacing, classes.textAligment)}\r\n                >\r\n                  {item}\r\n                </Typography>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        ) : null}\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <StandarButton text=\"ELIMINAR\" onClick={handleOnClickDeleteButton} />\r\n      </Grid>\r\n    </FormAddedItem>\r\n  );\r\n};\r\n\r\nexport default React.memo(CompletedStudy);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowTopMargin: theme.responsiveStyles({ marginTop: 34 }),\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  itemsContainer: {\r\n    '@global': {\r\n      ' > div:last-child': {\r\n        marginBottom: '0px',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport FormHeading from 'components/FormHeading';\r\nimport React from 'react';\r\n\r\nimport CompletedStudy from './completedStudiesList/CompletedStudy';\r\nimport useStyles from './completedStudiesList/useStyles';\r\n\r\nconst CompletedStudiesList = ({ className, itemsToRenderProps, setStateObj }) => {\r\n  const classes = useStyles();\r\n  const completedStudiesArr = itemsToRenderProps.map((item) => {\r\n    const { label } = item;\r\n    return (\r\n      <CompletedStudy\r\n        key={label}\r\n        className={classes.rowBottomMargin}\r\n        completedStudiesValues={item}\r\n        setStateObj={setStateObj}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <FormHeading\r\n        key=\"completedStudies\"\r\n        variant=\"body1\"\r\n        className={clsx(className, classes.rowBottomMargin)}\r\n        text=\"Estudios Completados.\"\r\n      />\r\n      <Grid container direction=\"column\" className={classes.itemsContainer}>\r\n        {completedStudiesArr}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CompletedStudiesList);\r\n","import { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = (setStateObj) => {\r\n  const defaultState = useMemo(\r\n    () => ({\r\n      studyName: '',\r\n      studyType: '',\r\n      measurementUnit: '',\r\n      studyDescription: '',\r\n    }),\r\n    []\r\n  );\r\n\r\n  const [formState, setFormState] = useState(defaultState);\r\n\r\n  const formErrorsDefaultValues = {\r\n    studyNameRequired: false,\r\n    studyTypeRequired: false,\r\n    measurementUnitRequired: false,\r\n  };\r\n\r\n  const { setAvailableStudiesParent, setStudiesCheckboxesStateParent } = setStateObj;\r\n  const { studyName, studyType, studyDescription, measurementUnit } = formState;\r\n\r\n  const [shouldReset, setShouldReset] = useState(false);\r\n  const [formErrors, setFormErrors] = useState(formErrorsDefaultValues);\r\n\r\n  let isStudyNameInputInError = useRef();\r\n  let isMeasurementUnitInputInError = useRef();\r\n\r\n  const resetForm = () => {\r\n    setShouldReset(true);\r\n    setFormErrors(formErrorsDefaultValues);\r\n    setFormState(defaultState);\r\n  };\r\n\r\n  const setFormError = (formValues) => {\r\n    const { key, type, unit } = formValues;\r\n    const setFormErrorFor = (keyValue) =>\r\n      setFormErrors((prevState) => ({\r\n        ...prevState,\r\n        [`${keyValue}Required`]: true,\r\n      }));\r\n    if (key === '') {\r\n      setFormErrorFor('studyName');\r\n    }\r\n    if (type === '') {\r\n      setFormErrorFor('studyType');\r\n    }\r\n    if (type === 'numerical' && unit === '') {\r\n      setFormErrorFor('measurementUnit');\r\n    }\r\n  };\r\n\r\n  const handleOnChangeFor = (name) => (value) =>\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n  const handleStudyNameDebounced = useDebouncedCallback(handleOnChangeFor('studyName'), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const handleMeasurementUnitDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('measurementUnit'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n  const handleStudyDescriptionDebounced = useDebouncedCallback(\r\n    handleOnChangeFor('studyDescription'),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleStudyType = handleOnChangeFor('studyType');\r\n\r\n  const isFormValid =\r\n    studyName !== '' &&\r\n    !isStudyNameInputInError.current &&\r\n    studyType !== '' &&\r\n    (studyType === 'numerical'\r\n      ? measurementUnit !== '' && !isMeasurementUnitInputInError.current\r\n      : true);\r\n\r\n  const handleOnAddWith = (condition, formValues) => () => {\r\n    const { key, type, unit, description } = formValues;\r\n\r\n    if (condition) {\r\n      setAvailableStudiesParent((prevState) => ({\r\n        ...prevState,\r\n        [key]: {\r\n          name: key,\r\n          label: key,\r\n          type,\r\n          unit,\r\n          description,\r\n        },\r\n      }));\r\n      setStudiesCheckboxesStateParent((prevState) => ({\r\n        ...prevState,\r\n        [key]: false,\r\n      }));\r\n      resetForm();\r\n    } else setFormError(formValues);\r\n  };\r\n\r\n  const handleOnAdd = handleOnAddWith(isFormValid, {\r\n    key: studyName,\r\n    type: studyType,\r\n    unit: measurementUnit,\r\n    description: studyDescription,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shouldReset) {\r\n      setShouldReset(false);\r\n    }\r\n  }, [shouldReset]);\r\n\r\n  return [\r\n    {\r\n      formErrors,\r\n      shouldReset,\r\n      isStudyNameInputInError,\r\n      isMeasurementUnitInputInError,\r\n      studyType,\r\n    },\r\n    {\r\n      handleStudyNameDebounced,\r\n      handleMeasurementUnitDebounced,\r\n      handleStudyDescriptionDebounced,\r\n      handleOnAdd,\r\n      handleStudyType,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  button: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rowContainerBottomLine: {\r\n    ...theme.responsiveStyles({ marginBottom: 14 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n    width: '100%',\r\n    height: '1px',\r\n    marginTop: '-1px',\r\n  },\r\n  radioButtonsAlignment: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  unitInput: {\r\n    paddingRight: '8px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '240px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '270px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport FormAddedItem from 'components/FormAddedItem';\r\nimport FormHeading from 'components/FormHeading';\r\nimport RadioButtonsGroup from 'components/RadioButtonsGroup';\r\nimport StandarButton from 'components/StandarButton';\r\nimport TitledInput from 'components/TitledInput';\r\nimport TitledItem from 'components/TitledItem';\r\nimport TitledTextAreaAutoSize from 'components/TitledTextAreaAutoSize';\r\nimport React from 'react';\r\n\r\nimport useForm from './newStudyForm/useForm';\r\nimport useStyles from './newStudyForm/useStyles';\r\n\r\n//FROM here, when the user adds a new study pressing the \"add\" button, the state must be updated, but also it is neccessary to send the corresponding data to the server,\r\nconst NewStudyForm = ({ className, setStateObj }) => {\r\n  const [\r\n    { formErrors, shouldReset, isStudyNameInputInError, isMeasurementUnitInputInError, studyType },\r\n    {\r\n      handleStudyNameDebounced,\r\n      handleMeasurementUnitDebounced,\r\n      handleStudyDescriptionDebounced,\r\n      handleOnAdd,\r\n      handleStudyType,\r\n    },\r\n  ] = useForm(setStateObj);\r\n\r\n  const { studyNameRequired, studyTypeRequired, measurementUnitRequired } = formErrors;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <FormHeading variant=\"body1\" className={classes.rowBottomMargin} text=\"Nuevo Estudio\" />\r\n      <FormAddedItem className={className}>\r\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n          <Grid container item xs={12} sm={6}>\r\n            <TitledInput\r\n              inputTitle=\"Nombre:\"\r\n              placeholder=\"Ingrese nombre del estudio que desea agregar\"\r\n              maxLength={20}\r\n              className={classes.rowBottomMargin}\r\n              shouldReset={shouldReset}\r\n              nestedHandler={handleStudyNameDebounced}\r\n              isRequiredError={studyNameRequired}\r\n              ref={isStudyNameInputInError}\r\n            />\r\n          </Grid>\r\n          <TitledItem\r\n            title=\"Tipo:\"\r\n            className={clsx(classes.radioButtonsAlignment, classes.rowBottomMargin)}\r\n          >\r\n            <RadioButtonsGroup\r\n              radioItemsArr={[\r\n                { value: 'textual', label: 'Textual' },\r\n                { value: 'numerical', label: 'Numérico' },\r\n                { value: 'image', label: 'Imagen' },\r\n              ]}\r\n              nestedHandler={handleStudyType}\r\n              isRequiredError={studyTypeRequired}\r\n              shouldReset={shouldReset}\r\n            />\r\n          </TitledItem>\r\n          <TitledInput\r\n            inputTitle=\"Unidad de medida:\"\r\n            placeholder=\"Ingrese abreviatura. Ej. g/dl\"\r\n            maxLength={10}\r\n            className={clsx(classes.rowBottomMargin, classes.unitInput)}\r\n            nestedHandler={handleMeasurementUnitDebounced}\r\n            disabled={studyType !== 'numerical'}\r\n            isRequiredError={measurementUnitRequired}\r\n            pattern={/^([a-zA-Z]+[2-3]?[/]?){1}([a-zA-Z]+[2-3]?)?$|^([%])?$|^([º]{1}[cCfFkK]?)?$/}\r\n            ref={isMeasurementUnitInputInError}\r\n            shouldReset={shouldReset}\r\n          />\r\n          <TitledTextAreaAutoSize\r\n            title=\"Descripción:\"\r\n            placeholder=\"/..Descripción del estudio (Opcional)...\"\r\n            className={classes.rowBottomMargin}\r\n            nestedHandler={handleStudyDescriptionDebounced}\r\n            classNameTextArea={classes.textArea}\r\n            shouldReset={shouldReset}\r\n          />\r\n        </Grid>\r\n        <Grid className={classes.rowContainerBottomLine} />\r\n        <Grid container alignItems=\"flex-start\" justifyContent=\"flex-end\">\r\n          <StandarButton className={classes.button} text=\"+ NUEVO ESTUDIO\" onClick={handleOnAdd} />\r\n        </Grid>\r\n      </FormAddedItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewStudyForm);\r\n","import { useState } from 'react';\r\n\r\nconst useInput = (maxSize, ref, nestedHandler) => {\r\n  const [fileObjState, setFileObj] = useState();\r\n  const [errorState, setErrorState] = useState();\r\n  const [helperText, setHelperText] = useState();\r\n\r\n  const setErrorRefTo = (bool, refProp) => refProp && (refProp.current = bool);\r\n\r\n  const removeErrorState = (refProp) => {\r\n    setHelperText(null);\r\n    setErrorState(false);\r\n    setErrorRefTo(false, refProp);\r\n  };\r\n\r\n  const checkIfFileTypeIsInvalid = (inputValue, key) => {\r\n    const fileType = inputValue[key]['type'].split('/')[1];\r\n    const isFileTypeInvalid =\r\n      (fileType !== 'jpeg' && fileType !== 'jpg' && fileType !== 'png') || fileType === undefined;\r\n    if (isFileTypeInvalid) {\r\n      return true;\r\n    }\r\n  };\r\n  const checkIfFileIsExceedingSize = (inputValue, key, maxSizeProp) => {\r\n    const fileSize = inputValue[key]['size'];\r\n    const maxSizeInBytes = maxSizeProp * 1000000;\r\n    const isExceedingSize = fileSize > maxSizeInBytes;\r\n    if (isExceedingSize) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const setInvalidFileTypeError = (refProp) => {\r\n    setErrorState(true);\r\n    setHelperText('Formato de archivo inválido, solo se acepta .jpeg, .jpg o .png');\r\n    setErrorRefTo(true, refProp);\r\n  };\r\n\r\n  const setFileExceedingSizeError = (refProp, maxSizeProp) => {\r\n    setErrorState(true);\r\n    setHelperText(`El límite de tamaño por archivo es de ${maxSizeProp}MB`);\r\n    setErrorRefTo(true, refProp);\r\n  };\r\n\r\n  const manageValidation = (maxSizeProp, refProp) => (event) => {\r\n    const currentInputValue = event.target.files;\r\n    let isFileTypeInvalid;\r\n    let isExceedingSize;\r\n    for (const key in currentInputValue) {\r\n      const isAFileKey = Number.isInteger(Number(key));\r\n      if (isAFileKey) {\r\n        isFileTypeInvalid = checkIfFileTypeIsInvalid(currentInputValue, key);\r\n        isExceedingSize = checkIfFileIsExceedingSize(currentInputValue, key, maxSizeProp);\r\n      }\r\n    }\r\n    if (isFileTypeInvalid) {\r\n      setInvalidFileTypeError(refProp);\r\n    } else if (isExceedingSize) {\r\n      setFileExceedingSizeError(refProp, maxSizeProp);\r\n    } else {\r\n      removeErrorState(refProp);\r\n    }\r\n    nestedHandler(event.target.files);\r\n    setFileObj(event.target.files);\r\n  };\r\n\r\n  const handleOnChange = manageValidation(maxSize, ref);\r\n\r\n  return [{ fileObjState, helperText, errorState }, handleOnChange];\r\n};\r\n\r\nexport default useInput;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: '31px',\r\n    '& .MuiOutlinedInput-inputMarginDense': {\r\n      paddingTop: '3px',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import clsx from 'clsx';\r\nimport React from 'react';\r\n\r\nimport Input from './Input';\r\nimport useInput from './fileInput/useInput';\r\nimport useStyles from './fileInput/useStyles';\r\n\r\nconst FileInput = ({ className, maxSize, nestedHandler, ...props }, ref) => {\r\n  const classes = useStyles();\r\n  const [inputState, handleOnChange] = useInput(maxSize, ref, nestedHandler);\r\n  const { fileObjState, helperText, errorState } = inputState;\r\n  return (\r\n    <Input\r\n      className={clsx(classes.root, className)}\r\n      type=\"file\"\r\n      inputProps={{\r\n        accept: 'image/png, image/jpeg, image/jpg',\r\n        multiple: true,\r\n      }}\r\n      onChange={handleOnChange}\r\n      error={errorState}\r\n      files={fileObjState}\r\n      helperText={helperText}\r\n      //ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(FileInput);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    borderRadius: '4px',\r\n    border: '2px solid',\r\n    borderColor: theme.palette.alert.main,\r\n  },\r\n  root: {\r\n    width: 'fit-content',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\n\r\nimport StandarDateInput from './StandarDateInput';\r\nimport TitledItem from './TitledItem';\r\nimport useStyles from './titledDateInput/useStyles';\r\n\r\nconst TitledDateInput = ({ inputTitle, className, error, ...props }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TitledItem title={inputTitle} className={className}>\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        className={clsx(classes.root, error && classes.error)}\r\n      >\r\n        <StandarDateInput type=\"date\" {...props} />\r\n      </Grid>\r\n    </TitledItem>\r\n  );\r\n};\r\n\r\nexport default TitledDateInput;\r\n","import isAfter from 'date-fns/isAfter';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = (formProps, setStateObj, currentFormValuesStorage) => {\r\n  const defaultInputErrors = {\r\n    resultRequired: false,\r\n    resultDateRequired: false,\r\n  };\r\n  const defaultModalState = {\r\n    show: false,\r\n    delete: false,\r\n    close: false,\r\n    text: '',\r\n  };\r\n\r\n  const { name, title, type } = formProps;\r\n  formProps['unit'];\r\n\r\n  const getUnitValue = (obj) => {\r\n    const typeValue = obj.type;\r\n    if (typeValue === 'numerical') {\r\n      return obj.unit;\r\n    }\r\n  };\r\n\r\n  const unitValue = getUnitValue(formProps);\r\n\r\n  const {\r\n    updateGlobalState,\r\n    setAvailableStudiesParent,\r\n    setStudiesCheckboxesStateParent,\r\n    setStudiesFormPropsParent,\r\n    setStudyCountParent,\r\n    setPageParent,\r\n    setStudiesFormValuesStorageParent,\r\n    setCompletedStudiesParent,\r\n  } = setStateObj;\r\n  const {\r\n    result: resultValueStoraged,\r\n    resultDate: resultDateValueStoraged,\r\n    observations: observationsValueStoraged,\r\n    imageFiles: imageFilesValueStoraged,\r\n  } = currentFormValuesStorage;\r\n\r\n  const [modalState, setModalState] = useState(defaultModalState);\r\n  const [result, setResult] = useState(resultValueStoraged);\r\n  const [resultDate, setResultDate] = useState(\r\n    resultDateValueStoraged == 'Invalid Date' ? null : resultDateValueStoraged\r\n  );\r\n  const [observations, setObservations] = useState(observationsValueStoraged);\r\n  const [imageFiles, setImageFiles] = useState(imageFilesValueStoraged);\r\n  const [formErrors, setFormErrors] = useState(defaultInputErrors);\r\n  let isResultInputInErrorRef = useRef();\r\n  let isImageFilesInputInErrorRef = useRef();\r\n\r\n  const resultDateIsAfter = isAfter(resultDate, new Date('2040', '01', '01'));\r\n\r\n  const resultDateIsBefore = isBefore(resultDate, new Date('1900', '01', '01'));\r\n  const isResultDateValidated =\r\n    !resultDateIsAfter &&\r\n    !resultDateIsBefore &&\r\n    resultDate !== null &&\r\n    resultDate != 'Invalid Date';\r\n\r\n  const handleOnChangeFor = (setState) => (value) => setState(value);\r\n\r\n  const handleResultDebounced = useDebouncedCallback(handleOnChangeFor(setResult), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const handleResultDateDebounced = useDebouncedCallback(handleOnChangeFor(setResultDate), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const handleObservationDebounced = useDebouncedCallback(handleOnChangeFor(setObservations), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const resetStatesForUnchecking = (key) => {\r\n    setStudiesCheckboxesStateParent((prevState) => ({\r\n      ...prevState,\r\n      [key]: false,\r\n    }));\r\n    setModalState(defaultModalState);\r\n  };\r\n\r\n  const deleteExistingKeyFromState = (prevState) => {\r\n    const stateObj = { ...prevState };\r\n    delete stateObj[name];\r\n    return stateObj;\r\n  };\r\n\r\n  const removeStudyToRender = (key) => {\r\n    setStudiesFormValuesStorageParent((prevState) => deleteExistingKeyFromState(prevState, key));\r\n    setStudiesFormPropsParent((prevState) => deleteExistingKeyFromState(prevState, key));\r\n    setStudyCountParent((prevState) => prevState - 1);\r\n    setPageParent(1);\r\n  };\r\n\r\n  const setStateForClosingStudyForm = (key) => {\r\n    resetStatesForUnchecking(key);\r\n    removeStudyToRender(key);\r\n  };\r\n\r\n  const setFormError = (formValues) => {\r\n    const { resultValue, resultDateCondition } = formValues;\r\n\r\n    const setFormErrorFor = (key) =>\r\n      setFormErrors({\r\n        ...defaultInputErrors,\r\n        [`${key}Required`]: true,\r\n      });\r\n\r\n    if (resultValue === '' || resultValue == 0) {\r\n      setFormErrorFor('result');\r\n    } else if (!resultDateCondition) {\r\n      setFormErrorFor('resultDate');\r\n    }\r\n  };\r\n\r\n  const formattedDate = isResultDateValidated\r\n    ? `${resultDate.getDate()}/${resultDate.getMonth() + 1}/${resultDate.getFullYear()}`\r\n    : null;\r\n\r\n  const addNewObjInState = (prevState, formValues) => {\r\n    let fileNamesArr = [];\r\n\r\n    const {\r\n      key,\r\n      labelValue,\r\n      resultValue,\r\n      observationsValue,\r\n      date,\r\n      unit,\r\n      typeValue,\r\n      imageFilesObj,\r\n    } = formValues;\r\n\r\n    const stateObj = {\r\n      ...prevState,\r\n      shouldDisplay: true,\r\n      [key]: {\r\n        ['name']: key,\r\n        label: labelValue,\r\n        result: resultValue,\r\n        observations: observationsValue,\r\n        date,\r\n      },\r\n    };\r\n\r\n    const getFilesNames = (obj) => {\r\n      const fileNames = [];\r\n      for (let currentKey in obj) {\r\n        const isAFileKey = Number.isInteger(Number(currentKey));\r\n        if (isAFileKey) {\r\n          fileNames.push(obj[currentKey]['name']);\r\n        }\r\n      }\r\n      return fileNames;\r\n    };\r\n    if (imageFilesObj !== '') {\r\n      fileNamesArr = getFilesNames(imageFilesObj);\r\n    }\r\n    if (typeValue === 'numerical') {\r\n      Object.assign(stateObj[key], {\r\n        unit,\r\n      });\r\n    } else if (typeValue === 'image') {\r\n      Object.assign(stateObj[key], {\r\n        imageFiles: fileNamesArr,\r\n      });\r\n    }\r\n    return stateObj;\r\n  };\r\n\r\n  const handleOnCloseFor = (formValues) => () => {\r\n    const { key, labelValue, resultValue, observationsValue } = formValues;\r\n    const modalTextForClosing = `Todos los datos cargados para \"${labelValue}\" se perderán, ¿está seguro que desea continuar?.`;\r\n    const isFormWithValues = resultValue !== '' || observationsValue !== '';\r\n    if (isFormWithValues) {\r\n      setModalState((prevState) => ({\r\n        ...prevState,\r\n        show: true,\r\n        close: true,\r\n        text: modalTextForClosing,\r\n      }));\r\n    } else {\r\n      setStateForClosingStudyForm(key);\r\n    }\r\n  };\r\n\r\n  const handleOnClose = handleOnCloseFor({\r\n    labelValue: title,\r\n    observationsValue: observations,\r\n    key: name,\r\n    resultValue: result,\r\n  });\r\n\r\n  const handleDeleteWith = (label) => () => {\r\n    const modalTextForDeleting = `Está a punto de eliminar permanentemente el estudio \"${label}\" de la aplicación, ¿Está seguro que desea continuar?`;\r\n    setModalState((prevState) => ({\r\n      ...prevState,\r\n      show: true,\r\n      delete: true,\r\n      text: modalTextForDeleting,\r\n    }));\r\n  };\r\n\r\n  const handleDelete = handleDeleteWith(title);\r\n\r\n  const handleAcceptButtonFor = (modalStateObj, currentKey) => () => {\r\n    const shouldDeleteStudy = modalStateObj['delete'] === true;\r\n    const shouldCloseForm = modalStateObj['close'] === true;\r\n\r\n    if (shouldDeleteStudy) {\r\n      setAvailableStudiesParent((prevState) => deleteExistingKeyFromState(prevState, currentKey));\r\n      setStudiesCheckboxesStateParent((prevState) =>\r\n        deleteExistingKeyFromState(prevState, currentKey)\r\n      );\r\n      setModalState(defaultModalState);\r\n    } else if (shouldCloseForm) {\r\n      resetStatesForUnchecking(currentKey);\r\n    }\r\n    removeStudyToRender(currentKey);\r\n  };\r\n\r\n  const handleAcceptButton = handleAcceptButtonFor(modalState, name);\r\n\r\n  const handleCancelButton = () => setModalState(defaultModalState);\r\n\r\n  const handleOnAddFor = (formValues) => () => {\r\n    const { key } = formValues;\r\n\r\n    const getValidationForAStudyWithFileInput = (formVal) => {\r\n      const { resultValue, resultDateCondition, filesInputErrorRef, resultInputErrorRef } = formVal;\r\n      const condition =\r\n        resultValue !== '' &&\r\n        !resultInputErrorRef.current &&\r\n        resultDateCondition &&\r\n        !filesInputErrorRef.current;\r\n      return condition;\r\n    };\r\n\r\n    const getValidationForStudyForm = (formVal) => {\r\n      const { resultValue, resultDateCondition, resultInputErrorRef } = formVal;\r\n      const condition = resultValue !== '' && !resultInputErrorRef.current && resultDateCondition;\r\n      return condition;\r\n    };\r\n\r\n    const checkIfCurrentStudyHasFileInput = (formVal) => {\r\n      const { filesInputErrorRef } = formVal;\r\n      const condition = typeof filesInputErrorRef.current === 'boolean';\r\n      return condition;\r\n    };\r\n\r\n    const hasCurrentStudyAFileInput = checkIfCurrentStudyHasFileInput(formValues);\r\n    let shouldAddCompletedStudy;\r\n    if (hasCurrentStudyAFileInput) {\r\n      shouldAddCompletedStudy = getValidationForAStudyWithFileInput(formValues);\r\n    } else {\r\n      shouldAddCompletedStudy = getValidationForStudyForm(formValues);\r\n    }\r\n\r\n    if (shouldAddCompletedStudy) {\r\n      updateGlobalState((prevState) => addNewObjInState(prevState, formValues));\r\n      setCompletedStudiesParent((prevState) => addNewObjInState(prevState, formValues));\r\n      setStudiesCheckboxesStateParent((prevState) => ({\r\n        ...prevState,\r\n        [key]: false,\r\n      }));\r\n      removeStudyToRender(key);\r\n    } else setFormError(formValues);\r\n  };\r\n\r\n  const handleOnAdd = handleOnAddFor({\r\n    labelValue: title,\r\n    observationsValue: observations,\r\n    date: formattedDate,\r\n    unit: unitValue,\r\n    typeValue: type,\r\n    key: name,\r\n    imageFilesObj: imageFiles,\r\n    resultValue: result,\r\n    resultDateCondition: isResultDateValidated,\r\n    filesInputErrorRef: isImageFilesInputInErrorRef,\r\n    resultInputErrorRef: isResultInputInErrorRef,\r\n  });\r\n\r\n  const getStoredStudiesUpdatedStateFor = useCallback(\r\n    ({ resultValue, resultDateValue, observationsValue, key, imageFilesArr, studyType }) => (\r\n      prevState\r\n    ) => {\r\n      const newState = {\r\n        ...prevState,\r\n        [key]: {\r\n          result: resultValue,\r\n          resultDate: resultDateValue,\r\n          observations: observationsValue,\r\n        },\r\n      };\r\n      if (studyType === 'image') {\r\n        Object.assign(newState[key], { imageFiles: imageFilesArr });\r\n      }\r\n      return newState;\r\n    },\r\n    []\r\n  );\r\n\r\n  const getStoredStudiesUpdatedState = useCallback(() => {\r\n    const objArgument = {\r\n      resultValue: result,\r\n      resultDateValue: resultDate,\r\n      observationsValue: observations,\r\n      key: name,\r\n      imageFilesArr: imageFiles,\r\n      studyType: type,\r\n    };\r\n    return getStoredStudiesUpdatedStateFor(objArgument);\r\n  }, [getStoredStudiesUpdatedStateFor, result, resultDate, name, imageFiles, type, observations]);\r\n\r\n  useEffect(() => {\r\n    setStudiesFormValuesStorageParent((prevState) => getStoredStudiesUpdatedState()(prevState));\r\n  }, [setStudiesFormValuesStorageParent, getStoredStudiesUpdatedState]);\r\n\r\n  return [\r\n    formErrors,\r\n    result,\r\n    modalState,\r\n    imageFiles,\r\n    resultDate,\r\n    observations,\r\n    isResultInputInErrorRef,\r\n    isImageFilesInputInErrorRef,\r\n    {\r\n      setImageFiles,\r\n      handleResultDebounced,\r\n      handleResultDateDebounced,\r\n      handleObservationDebounced,\r\n      handleOnClose,\r\n      handleDelete,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleOnAdd,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  treatmentsTexts: {\r\n    ...theme.responsiveStyles({ marginBottom: 16 }),\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'baseline',\r\n  },\r\n  textMark: {\r\n    paddingRight: '5px',\r\n    paddingLeft: '5px',\r\n    width: 'fit-content',\r\n  },\r\n  textButton: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  individualFieldWidth: theme.responsiveStyles({ width: 160 }),\r\n  resultInput: {\r\n    paddingRight: '8px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '240px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '270px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  rowContainerBottomLine: {\r\n    ...theme.responsiveStyles({ marginBottom: 14 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n    width: '100%',\r\n    height: '1px',\r\n    marginTop: '-1px',\r\n  },\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n  unitText: { paddingTop: '3px' },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport clsx from 'clsx';\r\nimport FileInput from 'components/FileInput';\r\nimport FormAddedItem from 'components/FormAddedItem';\r\nimport FormHeading from 'components/FormHeading';\r\nimport IconButton from 'components/IconButton';\r\nimport PreSurgicalModalChildren from 'components/PreSurgicalFormChildrenModal';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarModal from 'components/StandarModal';\r\nimport TitledDateInput from 'components/TitledDateInput';\r\nimport TitledInputWithUnit from 'components/TitledInputWithUnit';\r\nimport TitledItem from 'components/TitledItem';\r\nimport TitledTextAreaAutoSize from 'components/TitledTextAreaAutoSize';\r\nimport React from 'react';\r\n\r\nimport useForm from './studyForm/useForm';\r\nimport useStyles from './studyForm/useStyles';\r\n\r\n//TODO for case === 'image' the file must be upload to the server\r\nconst StudyForm = ({ className, formProps, setStateObj, currentFormValuesStorage }) => {\r\n  const classes = useStyles();\r\n  const [\r\n    formErrors,\r\n    result,\r\n    modalState,\r\n    imageFiles,\r\n    resultDate,\r\n    observations,\r\n    isResultInputInErrorRef,\r\n    isImageFilesInputInErrorRef,\r\n    {\r\n      setImageFiles,\r\n      handleResultDebounced,\r\n      handleResultDateDebounced,\r\n      handleObservationDebounced,\r\n      handleOnClose,\r\n      handleDelete,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleOnAdd,\r\n    },\r\n  ] = useForm(formProps, setStateObj, currentFormValuesStorage);\r\n  const { resultRequired, resultDateRequired } = formErrors;\r\n  const { title } = formProps;\r\n\r\n  const setRemainingInput = () => {\r\n    const resultTextArea = [\r\n      <TitledTextAreaAutoSize\r\n        key=\"result\"\r\n        title=\"Resultado:\"\r\n        placeholder=\"/..Resultado...\"\r\n        className={classes.rowBottomMargin}\r\n        value={result}\r\n        nestedHandler={handleResultDebounced}\r\n        isRequiredError={resultRequired}\r\n        classNameTextArea={classes.textArea}\r\n      />,\r\n    ];\r\n    const toRenderArr = [];\r\n    switch (formProps['type']) {\r\n      case 'numerical':\r\n        toRenderArr.push(\r\n          <TitledInputWithUnit\r\n            key=\"numericalResult\"\r\n            title=\"Resultado:\"\r\n            className={classes.rowBottomMargin}\r\n            inputWidthClassName={classes.resultInput}\r\n            value={result}\r\n            placeholder=\"Resultado\"\r\n            nestedHandler={handleResultDebounced}\r\n            isRequiredError={resultRequired}\r\n            inputProps={{ max: 10000000, decimalplaces: 1 }}\r\n            ref={isResultInputInErrorRef}\r\n          />\r\n        );\r\n        break;\r\n      case 'textual':\r\n        toRenderArr.push(resultTextArea);\r\n        break;\r\n      case 'image':\r\n        toRenderArr.push(resultTextArea);\r\n        toRenderArr.push(\r\n          <Grid container item xs={12} sm={6} key=\"imageFileInput\">\r\n            <FileInput\r\n              className={clsx(classes.rowBottomMargin, classes.imageInput)}\r\n              files={imageFiles} //TODO make a controllable component, native input type file doesn't allow to modify its files attribute https://medium.com/trabe/controlled-file-input-components-in-react-3f0d42f901b8\r\n              nestedHandler={(files) => setImageFiles(files)}\r\n              maxSize={10}\r\n              ref={isImageFilesInputInErrorRef}\r\n            />\r\n          </Grid>\r\n        );\r\n    }\r\n    return toRenderArr;\r\n  };\r\n\r\n  return (\r\n    <FormAddedItem className={className}>\r\n      <StandarModal openState={modalState.show}>\r\n        <PreSurgicalModalChildren\r\n          text={modalState.text}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        justifyContent=\"space-between\"\r\n        wrap=\"nowrap\"\r\n        className={classes.addedItemTextContainer}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\" wrap=\"nowrap\">\r\n            <FormHeading\r\n              variant=\"body1\"\r\n              className={clsx(classes.textMark, classes.rowBottomMargin)}\r\n              text={`Estudio: ${title}`}\r\n            />\r\n            <IconButton size=\"medium\" startIcon={<CloseIcon />} onClick={handleOnClose} />\r\n          </Grid>\r\n          <Grid container>{setRemainingInput()}</Grid>\r\n          <TitledDateInput\r\n            inputTitle=\"Fecha:\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={resultDate}\r\n            nestedHandler={handleResultDateDebounced}\r\n            className={classes.rowBottomMargin}\r\n            isRequiredError={resultDateRequired}\r\n          />\r\n          <TitledTextAreaAutoSize\r\n            title=\"Observaciones:\"\r\n            textareaname=\"observations\"\r\n            placeholder=\"/..Observaciones...\"\r\n            className={classes.rowBottomMargin}\r\n            value={observations}\r\n            nestedHandler={handleObservationDebounced}\r\n            classNameTextArea={classes.textArea}\r\n          />\r\n          {formProps['description'] !== '' && (\r\n            <TitledItem title=\"Descripción:\" className={classes.rowBottomMargin}>\r\n              <Typography variant=\"body2\" align=\"left\">\r\n                {formProps['description']}\r\n              </Typography>\r\n            </TitledItem>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className={classes.rowContainerBottomLine} />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <IconButton size=\"medium\" startIcon={<DeleteForeverIcon />} onClick={handleDelete} />\r\n        <StandarButton\r\n          className={classes.textButton}\r\n          text=\"AGREGAR ESTUDIO\"\r\n          onClick={handleOnAdd}\r\n        />\r\n      </Grid>\r\n    </FormAddedItem>\r\n  );\r\n};\r\n\r\nexport default React.memo(StudyForm);\r\n","const createArrFromObject = (obj) => {\r\n  const arr = [];\r\n  for (let key in obj) {\r\n    if (key !== 'shouldDisplay') {\r\n      const currentItem = obj[key];\r\n      arr.push(currentItem);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport default createArrFromObject;\r\n","const getItems = (obj) => {\r\n  let objToReturn = obj;\r\n  delete objToReturn['shouldDisplay'];\r\n  return objToReturn;\r\n};\r\n\r\nexport default getItems;\r\n","import { PreSurgical } from 'context/PreSurgical';\r\nimport createArrFromObject from 'helpers/createArrFromObj';\r\nimport getItems from 'helpers/getItems';\r\nimport { useContext } from 'react';\r\nimport { useMemo, useCallback, useEffect, useState } from 'react';\r\n\r\nconst useForm = (ref, isUnresolvedError) => {\r\n  const studiesFromServer = {\r\n    ['hemoglobin']: {\r\n      name: 'hemoglobin',\r\n      label: 'Hemoglobina',\r\n      type: 'numerical',\r\n      unit: 'g/dl',\r\n      description:\r\n        'El rango normal de hemoglobina se define generalmente como 13,2 a 16,6 gramos (g) de hemoglobina por decilitro (dL) de sangre para los hombres y 11,6 a 15 g/dL para las mujeres.',\r\n    },\r\n    ['electrocardiogram']: {\r\n      name: 'electrocardiogram',\r\n      label: 'Electrocardiográma',\r\n      type: 'textual',\r\n      description:\r\n        'Unos resultados normales incluirían una frecuencia cardíaca de entre 60 y 100 latidos por minuto, y un ritmo cardíaco constante y uniforme.',\r\n    },\r\n    ['chestXRay']: {\r\n      name: 'chestXRay',\r\n      label: 'Radiografía de Torax',\r\n      type: 'image',\r\n      description:\r\n        'Las radiografías de tórax permiten detectar cáncer, infección o acumulación de aire en el espacio alrededor de un pulmón, lo que puede provocar su colapso. También muestran enfermedades pulmonares crónicas, como enfisema o fibrosis quística, así como complicaciones relacionadas con estas enfermedades.',\r\n    },\r\n    ['hematocrit']: {\r\n      name: 'hematocrit',\r\n      label: 'Hematocrito',\r\n      type: 'numerical',\r\n      unit: '%',\r\n      description:\r\n        'El rango normal de hematocritos se define generalmente como desde 40,7% al 50,3% para los hombres y desde 36,1% al 44,3% para las mujeres.',\r\n    },\r\n    ['prothrombinTime']: {\r\n      name: 'prothrombinTime',\r\n      label: 'Tp',\r\n      type: 'numerical',\r\n      unit: 'seg',\r\n      description:\r\n        'El TP se mide en segundos. La mayoría de las veces, los resultados se dan como lo que se llama IIN (índice internacional normalizado). Si el paciente no está tomando anticoagulantes, como warfarina, el rango normal para los resultados de TP es: 11 a 13.5 segundos.',\r\n    },\r\n    ['kAPT']: {\r\n      name: 'kAPT',\r\n      label: 'Kptt',\r\n      type: 'numerical',\r\n      unit: 'seg',\r\n      description: 'Los valores normales de Kptt se definen entre los 35 a los 50 seg.',\r\n    },\r\n  };\r\n\r\n  const defaultModalState = useMemo(\r\n    () => ({\r\n      show: false,\r\n      closeCurrentForm: false,\r\n      closeRootForm: false,\r\n      text: '',\r\n    }),\r\n    []\r\n  );\r\n\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n  const { studiesDone } = initialState;\r\n\r\n  const { shouldDisplay, ...completedStudiesProps } = studiesDone;\r\n\r\n  const [completedStudies, setCompletedStudies] = useState(completedStudiesProps);\r\n  const [shouldRender, setShouldRender] = useState(shouldDisplay);\r\n  //Available studies, state initialized with data from the server\r\n  const [availableStudies, setAvailableStudies] = useState(studiesFromServer);\r\n  const [studiesCheckboxes, setStudiesCheckboxes] = useState();\r\n  const [currentCheckboxStudyName, setCurrentCheckboxStudyName] = useState();\r\n  const [studiesFormProps, setStudiesFormProps] = useState();\r\n  const [storageOfStudyFormValues, setStorageOfStudyFormValues] = useState({});\r\n  const [modalState, setModalState] = useState(defaultModalState);\r\n  const [studyCount, setStudyCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [isUnresolved, setIsUnresolved] = useState(false);\r\n\r\n  const resetForGlobalState = useCallback(() => {\r\n    updateGlobalState((prevState) => ({\r\n      ...prevState,\r\n      studiesDone: {\r\n        shouldDisplay: false,\r\n      },\r\n    }));\r\n  }, [updateGlobalState]);\r\n\r\n  const updateStateWithFunction = useCallback(\r\n    (func) => {\r\n      updateGlobalState((prevState) => ({\r\n        ...prevState,\r\n        studiesDone: {\r\n          ...func(prevState['studiesDone']),\r\n        },\r\n      }));\r\n    },\r\n    [updateGlobalState]\r\n  );\r\n\r\n  const getDefaultCheckboxesStateFrom = useCallback((obj) => {\r\n    const stateObj = {};\r\n    for (let key in obj) {\r\n      stateObj[key] = false;\r\n    }\r\n    return stateObj;\r\n  }, []);\r\n\r\n  const resetFormStates = () => {\r\n    resetForGlobalState();\r\n    setCompletedStudies({});\r\n    setStudiesFormProps({});\r\n    setStorageOfStudyFormValues({});\r\n    setStudyCount(0);\r\n    setPage(1);\r\n    setShouldRender((prevState) => !prevState);\r\n  };\r\n\r\n  const deleteExistingKeyFromState = (currentState, name) => {\r\n    const stateObj = { ...currentState };\r\n    delete stateObj[name];\r\n    return stateObj;\r\n  };\r\n\r\n  const setStatesOnUnchecking = (currentName) => {\r\n    setStudiesCheckboxes((prevState) => ({\r\n      ...prevState,\r\n      [currentName]: false,\r\n    }));\r\n    setStudiesFormProps((prevState) => deleteExistingKeyFromState(prevState, currentName));\r\n    setStorageOfStudyFormValues((prevState) => deleteExistingKeyFromState(prevState, currentName));\r\n    setStudyCount((prevState) => prevState - 1);\r\n    setPage(1);\r\n  };\r\n\r\n  const handleSwitchFor = ({ stateOfStudiesStoraged, studiesDoneState, renderCondition }) => () => {\r\n    const checkValuesEqualityIn = (obj) => {\r\n      for (let key in obj) {\r\n        const currentStudy = obj[key];\r\n        if (currentStudy['result'] !== '' || currentStudy['observations'] !== '') {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n    const atLeastOneFieldIsNotEmpty = checkValuesEqualityIn(stateOfStudiesStoraged);\r\n    const shouldDisplayModal =\r\n      renderCondition === true &&\r\n      (atLeastOneFieldIsNotEmpty || Object.keys(studiesDoneState).length > 1);\r\n    if (shouldDisplayModal) {\r\n      const modalTextForClosing =\r\n        'Todo estudio previamente completado al igual que todos los datos ingresados en formularios de estudios se perderán y no podran recuperarse, ¿está seguro que desea continuar?.';\r\n      setModalState((prevState) => ({\r\n        ...prevState,\r\n        show: true,\r\n        closeRootForm: true,\r\n        text: modalTextForClosing,\r\n      }));\r\n    } else {\r\n      resetFormStates();\r\n    }\r\n  };\r\n\r\n  const handleSwitch = handleSwitchFor({\r\n    stateOfStudiesStoraged: storageOfStudyFormValues,\r\n    studiesDoneState: completedStudies,\r\n    renderCondition: shouldRender,\r\n  });\r\n\r\n  const handleAcceptButtonFor = ({ modalStateObj, currentName }) => () => {\r\n    const { closeRootForm, closeCurrentForm } = modalStateObj;\r\n    if (closeRootForm === true) {\r\n      resetFormStates();\r\n      setModalState(defaultModalState);\r\n    } else if (closeCurrentForm === true) {\r\n      setStatesOnUnchecking(currentName);\r\n      setModalState(defaultModalState);\r\n    }\r\n  };\r\n\r\n  const handleAcceptButton = handleAcceptButtonFor({\r\n    modalStateObj: modalState,\r\n    currentName: currentCheckboxStudyName,\r\n  });\r\n\r\n  const handleCancelButton = () => setModalState(defaultModalState);\r\n\r\n  const handleCheckboxesFor = ({ availableStudiesState, stateOfStudiesStoraged }) => (event) => {\r\n    const checkValuesEqualityInCurrentStudy = (storedValues) => {\r\n      if (storedValues) {\r\n        const { result, observations } = storedValues;\r\n        const areNotEmpty = result !== '' || observations !== '';\r\n        return areNotEmpty;\r\n      }\r\n    };\r\n\r\n    const shouldCloseForm = event.target.checked === false;\r\n    const currentStudyName = event.target.name;\r\n    const { label, type, description, unit } = availableStudiesState[currentStudyName];\r\n    const currentStoredStudyValues = stateOfStudiesStoraged[currentStudyName];\r\n    const atLeastOneFieldIsNotEmpty = checkValuesEqualityInCurrentStudy(currentStoredStudyValues);\r\n\r\n    setCurrentCheckboxStudyName(currentStudyName);\r\n\r\n    const getModalUpdatedStateFor = (studyLabel) => (prevState) => {\r\n      const modalTextForClosingCurrentStudy = `Todos los datos cargados para \"${studyLabel}\" se perderán, ¿está seguro que desea continuar?.`;\r\n      return {\r\n        ...prevState,\r\n        show: true,\r\n        closeCurrentForm: true,\r\n        text: modalTextForClosingCurrentStudy,\r\n      };\r\n    };\r\n\r\n    const getCheckboxesUpdatedStateFor = (currentStudy) => (prevState) => ({\r\n      ...prevState,\r\n      [currentStudy]: event.target.checked,\r\n    });\r\n\r\n    const addNewStudyPropsFor = ({\r\n      studyLabel,\r\n      currentStudy,\r\n      studyType,\r\n      studyDescription,\r\n      measurementUnit,\r\n    }) => (prevState) => {\r\n      const newStudyFormProps = {\r\n        name: currentStudy,\r\n        title: studyLabel,\r\n        type: studyType,\r\n        description: studyDescription,\r\n      };\r\n      if (studyType === 'numerical') {\r\n        Object.assign(newStudyFormProps, { unit: measurementUnit });\r\n      }\r\n      const stateObj = {\r\n        ...prevState,\r\n        [currentStudy]: newStudyFormProps,\r\n      };\r\n      return stateObj;\r\n    };\r\n\r\n    const addNewStudyFormValues = (currentStudy) => (prevState) => {\r\n      const newStudyFormValues = {\r\n        result: '',\r\n        resultDate: new Date(),\r\n        observations: '',\r\n      };\r\n      if (type === 'image') {\r\n        Object.assign(newStudyFormValues, { imageFiles: '' });\r\n      }\r\n      const stateObj = {\r\n        ...prevState,\r\n        [currentStudy]: newStudyFormValues,\r\n      };\r\n      return stateObj;\r\n    };\r\n    if (shouldCloseForm) {\r\n      if (atLeastOneFieldIsNotEmpty) {\r\n        setModalState((prevState) => getModalUpdatedStateFor(label)(prevState));\r\n      } else setStatesOnUnchecking(currentStudyName);\r\n    } else {\r\n      setStudiesCheckboxes((prevState) =>\r\n        getCheckboxesUpdatedStateFor(currentStudyName)(prevState)\r\n      );\r\n      setStudiesFormProps((prevState) =>\r\n        addNewStudyPropsFor({\r\n          studyLabel: label,\r\n          currentStudy: currentStudyName,\r\n          studyType: type,\r\n          studyDescription: description,\r\n          measurementUnit: unit,\r\n        })(prevState)\r\n      );\r\n      setStorageOfStudyFormValues((prevState) =>\r\n        addNewStudyFormValues(currentStudyName)(prevState)\r\n      );\r\n      setStudyCount((prevState) => prevState + 1);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxes = handleCheckboxesFor({\r\n    availableStudiesState: availableStudies,\r\n    studyProps: studiesFormProps,\r\n    stateOfStudiesStoraged: storageOfStudyFormValues,\r\n  });\r\n\r\n  const handlePaginationOnChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const getStudiesCheckboxesArr = (obj) => {\r\n    const arr = [];\r\n    for (let key in obj) {\r\n      const currentItem = obj[key];\r\n      arr.push({\r\n        name: currentItem.name,\r\n        label: currentItem.label,\r\n      });\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const setStateObjStudyForm = useMemo(\r\n    () => ({\r\n      updateGlobalState: updateStateWithFunction,\r\n      setAvailableStudiesParent: setAvailableStudies,\r\n      setStudiesCheckboxesStateParent: setStudiesCheckboxes,\r\n      setStudiesFormPropsParent: setStudiesFormProps,\r\n      setStudyCountParent: setStudyCount,\r\n      setPageParent: setPage,\r\n      setStudiesFormValuesStorageParent: setStorageOfStudyFormValues,\r\n      setCompletedStudiesParent: setCompletedStudies,\r\n    }),\r\n    [updateStateWithFunction]\r\n  );\r\n\r\n  const setStateObjNewStudy = useMemo(\r\n    () => ({\r\n      setAvailableStudiesParent: setAvailableStudies,\r\n      setStudiesCheckboxesStateParent: setStudiesCheckboxes,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const setStateObjCompletedStudy = useMemo(\r\n    () => ({\r\n      updateGlobalState: updateStateWithFunction,\r\n      setCompletedStudiesParent: setCompletedStudies,\r\n    }),\r\n    [updateStateWithFunction]\r\n  );\r\n\r\n  const completedStudiesPropsArr = useMemo(() => createArrFromObject(completedStudies), [\r\n    completedStudies,\r\n  ]);\r\n\r\n  const studiesCheckboxesArr = getStudiesCheckboxesArr(availableStudies);\r\n\r\n  const updateRefOnStudiesToRender = useCallback(({ count, refValue }) => {\r\n    const thereIsStudiesToRender = count !== 0;\r\n    if (thereIsStudiesToRender) {\r\n      refValue.current = true;\r\n    } else {\r\n      refValue.current = false;\r\n    }\r\n  }, []);\r\n\r\n  const manageIsUnresolvedOnProp = useCallback((isUnresolvedProp) => {\r\n    if (isUnresolvedProp) {\r\n      setIsUnresolved(true);\r\n    } else {\r\n      setIsUnresolved(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateRefOnStudiesToRender({ count: studyCount, refValue: ref });\r\n  }, [studyCount, ref, updateRefOnStudiesToRender]);\r\n\r\n  useEffect(() => {\r\n    manageIsUnresolvedOnProp(isUnresolvedError);\r\n  }, [isUnresolvedError, manageIsUnresolvedOnProp]);\r\n\r\n  useEffect(() => {\r\n    if (availableStudies) {\r\n      setStudiesCheckboxes(getDefaultCheckboxesStateFrom(availableStudies));\r\n    }\r\n  }, [availableStudies, getDefaultCheckboxesStateFrom, setStudiesCheckboxes]);\r\n\r\n  useEffect(() => {\r\n    if (shouldDisplay) {\r\n      setShouldRender(shouldDisplay);\r\n    }\r\n  }, [shouldDisplay]);\r\n\r\n  useEffect(() => {\r\n    if (shouldRender) {\r\n      setStudiesCheckboxes(getDefaultCheckboxesStateFrom(availableStudies));\r\n      setCompletedStudies(getItems(studiesDone));\r\n      updateGlobalState((prevState) => ({\r\n        ...prevState,\r\n        ['studiesDone']: {\r\n          shouldDisplay: true,\r\n          ...getItems(studiesDone),\r\n        },\r\n      }));\r\n    }\r\n  }, [\r\n    shouldRender,\r\n    updateGlobalState,\r\n    availableStudies,\r\n    getDefaultCheckboxesStateFrom,\r\n    setCompletedStudies,\r\n    studiesDone,\r\n  ]);\r\n\r\n  return [\r\n    {\r\n      studiesCheckboxes,\r\n      studiesCheckboxesArr,\r\n      storageOfStudyFormValues,\r\n      studiesFormProps,\r\n      page,\r\n      isUnresolved,\r\n      shouldRender,\r\n      modalState,\r\n      studyCount,\r\n      completedStudiesPropsArr,\r\n    },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleCheckboxes,\r\n      handlePaginationOnChange,\r\n      createArrFromObject,\r\n      setStateObjStudyForm,\r\n      setStateObjNewStudy,\r\n      setStateObjCompletedStudy,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  checkBoxesGroup: { width: '100%' },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  rowTopMargin: theme.responsiveStyles({ marginTop: 34 }),\r\n  isUnresolvedError: {\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n    ...theme.responsiveStyles({ padding: 24, marginTop: 34 }),\r\n  },\r\n  textError: {\r\n    color: theme.palette.alert.main,\r\n    textAlign: 'left',\r\n    marginRight: '14px',\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport FormItemsWithSwitch from 'components/FormItemsWithSwitch';\r\nimport PreSurgicalFormChildrenModal from 'components/PreSurgicalFormChildrenModal';\r\nimport StandarCheckboxesGroup from 'components/StandarCheckboxesGroup';\r\nimport StandarModal from 'components/StandarModal';\r\nimport StandarPagination from 'components/StandarPagination';\r\nimport React from 'react';\r\n\r\nimport CompletedStudyList from './medicalStudies/CompletedStudiesList';\r\nimport NewStudyForm from './medicalStudies/NewStudyForm';\r\nimport StudyForm from './medicalStudies/StudyForm';\r\nimport useForm from './medicalStudies/useForm';\r\nimport useStyles from './medicalStudies/useStyles';\r\n\r\n//TODO try render prop component for standarPagination\r\nconst MedicalStudies = ({ isUnresolvedError, className }, ref) => {\r\n  const classes = useStyles();\r\n\r\n  const [\r\n    {\r\n      studiesCheckboxes,\r\n      studiesCheckboxesArr,\r\n      storageOfStudyFormValues,\r\n      studiesFormProps,\r\n      page,\r\n      isUnresolved,\r\n      shouldRender,\r\n      modalState,\r\n      studyCount,\r\n      completedStudiesPropsArr,\r\n    },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleCheckboxes,\r\n      handlePaginationOnChange,\r\n      createArrFromObject,\r\n      setStateObjStudyForm,\r\n      setStateObjNewStudy,\r\n      setStateObjCompletedStudy,\r\n    },\r\n  ] = useForm(ref, isUnresolvedError);\r\n\r\n  const studiesFormPropsArr = createArrFromObject(studiesFormProps);\r\n\r\n  const studyFormToShow = [];\r\n  if (studiesFormPropsArr.length === 1) {\r\n    const currentProps = studiesFormPropsArr[0];\r\n    const { name } = currentProps;\r\n    studyFormToShow.push(\r\n      <StudyForm\r\n        key={name}\r\n        className={classes.rowBottomMargin}\r\n        formProps={currentProps}\r\n        setStateObj={setStateObjStudyForm}\r\n        currentFormValuesStorage={storageOfStudyFormValues[name]}\r\n      />\r\n    );\r\n  } else if (studiesFormPropsArr.length > 1) {\r\n    const currentProps = studiesFormPropsArr[page - 1];\r\n    const { name } = currentProps;\r\n    studyFormToShow.push(\r\n      <StudyForm\r\n        key={name}\r\n        className={classes.rowBottomMargin}\r\n        formProps={currentProps}\r\n        setStateObj={setStateObjStudyForm}\r\n        currentFormValuesStorage={storageOfStudyFormValues[name]}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <FormItemsWithSwitch\r\n      groupTitle=\"Estudios:\"\r\n      className={className}\r\n      switchState={shouldRender}\r\n      handleSwitch={handleSwitch}\r\n    >\r\n      <StandarModal openState={modalState.show}>\r\n        <PreSurgicalFormChildrenModal\r\n          text={modalState.text}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        className={isUnresolved ? classes.isUnresolvedError : null}\r\n      >\r\n        <StandarCheckboxesGroup\r\n          checkboxesArr={studiesCheckboxesArr}\r\n          nestedHandler={handleCheckboxes}\r\n          checkboxesState={studiesCheckboxes}\r\n          className={classes.checkBoxesGroup}\r\n          noWrap\r\n        />\r\n        <NewStudyForm\r\n          className={studyCount >= 1 ? classes.rowBottomMargin : null}\r\n          setStateObj={setStateObjNewStudy}\r\n        />\r\n        {studyFormToShow}\r\n        {studyCount > 1 && (\r\n          <StandarPagination\r\n            count={studyCount}\r\n            page={page}\r\n            color=\"primary\"\r\n            showFirstButton\r\n            showLastButton\r\n            size=\"small\"\r\n            onChange={handlePaginationOnChange}\r\n          />\r\n        )}\r\n      </Grid>\r\n      {isUnresolved && (\r\n        <Typography\r\n          variant=\"caption\"\r\n          className={clsx(\r\n            classes.textError,\r\n            completedStudiesPropsArr.length > 1 && classes.rowBottomMargin\r\n          )}\r\n        >\r\n          Hay formularios abiertos, complételos o ciérrelos, puede hacer esto clickeando el botón X\r\n          en la esquina superior derecha del recuadro del formulario de Estudio, o deseleccionando\r\n          los checkboxes del listado de Estudios, luego vuelva a intentar la validación.\r\n        </Typography>\r\n      )}\r\n\r\n      {completedStudiesPropsArr.length >= 1 && (\r\n        <CompletedStudyList\r\n          itemsToRenderProps={completedStudiesPropsArr}\r\n          className={!isUnresolved ? classes.rowTopMargin : null}\r\n          setStateObj={setStateObjCompletedStudy}\r\n        />\r\n      )}\r\n    </FormItemsWithSwitch>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(MedicalStudies);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  rowDoubleBottomMargin: theme.responsiveStyles({ marginBottom: 48 }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\n\r\nimport AirwayExamForm from './physicalExamForm/AirwayExamForm';\r\nimport FirstSectionPhysicalExam from './physicalExamForm/FirstSectionPhysicalExam';\r\nimport MedicalStudies from './physicalExamForm/MedicalStudies';\r\nimport useStyles from './physicalExamForm/useStyles';\r\n\r\nconst PhysicalExamForm = ({ className, isRequiredError, isUnresolved }, ref) => {\r\n  const classes = useStyles();\r\n  const { firstSectionErrorState, isRequiredAirwaySectionState } = isRequiredError;\r\n  const { isFirstSectionUnresolved, isMedicalStudiesUnresolved } = isUnresolved;\r\n  const { firstSectionRef, isMedicalStudiesUnresolvedRef } = ref;\r\n  return (\r\n    <Grid container className={className}>\r\n      <FirstSectionPhysicalExam\r\n        className={classes.rowDoubleBottomMargin}\r\n        isUnresolvedError={isFirstSectionUnresolved}\r\n        isRequiredError={firstSectionErrorState}\r\n        ref={firstSectionRef}\r\n      />\r\n      <AirwayExamForm\r\n        className={classes.rowDoubleBottomMargin}\r\n        isRequiredError={isRequiredAirwaySectionState}\r\n      />\r\n      <MedicalStudies\r\n        isUnresolvedError={isMedicalStudiesUnresolved}\r\n        ref={isMedicalStudiesUnresolvedRef}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\nexport default React.memo(React.forwardRef(PhysicalExamForm));\r\n","import { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = (setFormState, currentShallowStateKey, formValues) => {\r\n  const formValuesMemoized = useMemo(() => {\r\n    const { shouldDisplay, observations, ...checkboxes } = formValues;\r\n    return {\r\n      shouldDisplay,\r\n      observations,\r\n      checkboxes,\r\n    };\r\n  }, [formValues]);\r\n\r\n  const { shouldDisplay, observations, checkboxes } = formValuesMemoized;\r\n\r\n  const [shouldRender, setShouldRender] = useState(shouldDisplay);\r\n  const [shouldDisplayModal, setShouldDisplayModal] = useState(false);\r\n  const [isTextAreaFieldWithValue, setIsTextAreaFieldWithValue] = useState();\r\n  const [isACheckboxChecked, setIsACheckboxChecked] = useState();\r\n\r\n  const areThereCheckboxes = Object.keys(checkboxes).length !== 0;\r\n  const shouldDisplayModalCondition =\r\n    shouldRender === true && (isACheckboxChecked || isTextAreaFieldWithValue);\r\n\r\n  const createDefaultLocalValues = ({ condition, objectToIterate }) => {\r\n    let defaultObj = {};\r\n    if (condition) {\r\n      for (let key in objectToIterate) {\r\n        defaultObj[key] = false;\r\n      }\r\n    }\r\n    defaultObj['shouldDisplay'] = false;\r\n    defaultObj['observations'] = '';\r\n    return defaultObj;\r\n  };\r\n\r\n  const defaultValues = createDefaultLocalValues({\r\n    condition: areThereCheckboxes,\r\n    objectToIterate: checkboxes,\r\n  });\r\n\r\n  const handleSwitchIf = (condition) => () => {\r\n    if (condition) {\r\n      setShouldDisplayModal(true);\r\n    } else {\r\n      setShouldRender((prevState) => !prevState);\r\n    }\r\n  };\r\n\r\n  const handleSwitch = handleSwitchIf(shouldDisplayModalCondition);\r\n\r\n  const updateGlobalState = useCallback(\r\n    (currentValues) => {\r\n      setFormState((prevState) => {\r\n        const shallowObj = prevState['preSurgicalClinical'];\r\n        const nestedObj = shallowObj[currentShallowStateKey];\r\n        const updatedObj = {\r\n          ...prevState,\r\n          ['preSurgicalClinical']: {\r\n            ...shallowObj,\r\n            [currentShallowStateKey]: {\r\n              ...nestedObj,\r\n              ['shouldDisplay']: true,\r\n              ...currentValues,\r\n            },\r\n          },\r\n        };\r\n        return updatedObj;\r\n      });\r\n    },\r\n    [currentShallowStateKey, setFormState]\r\n  );\r\n\r\n  const handleObservationsDebounced = useDebouncedCallback(\r\n    (value) => {\r\n      updateGlobalState({ ['observations']: value });\r\n    },\r\n    250,\r\n    { trailing: true }\r\n  );\r\n\r\n  const handleCheckboxes = (event) => {\r\n    updateGlobalState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const handleAcceptButton = () => {\r\n    updateGlobalState(defaultValues);\r\n    setShouldRender(false);\r\n    setShouldDisplayModal(false);\r\n  };\r\n\r\n  const handleCancelButton = () => {\r\n    setShouldDisplayModal(false);\r\n  };\r\n\r\n  const evaluateTextAreaValue = (value) => {\r\n    const isTextAreaFilled = value !== '';\r\n    if (isTextAreaFilled) {\r\n      setIsTextAreaFieldWithValue(true);\r\n    } else setIsTextAreaFieldWithValue(false);\r\n  };\r\n\r\n  const evaluateCheckboxesGroupValue = (values) => {\r\n    for (const key in values) {\r\n      if (values[key] === true) {\r\n        return setIsACheckboxChecked(true);\r\n      }\r\n    }\r\n    return setIsACheckboxChecked(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldDisplay) {\r\n      setShouldRender(shouldDisplay);\r\n    }\r\n  }, [shouldDisplay]);\r\n  useEffect(() => {\r\n    if (shouldRender) {\r\n      updateGlobalState(formValues);\r\n    }\r\n  }, [updateGlobalState, formValues, shouldRender]);\r\n\r\n  return [\r\n    { shouldRender, shouldDisplayModal, areThereCheckboxes, checkboxes, observations },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleCheckboxes,\r\n      evaluateCheckboxesGroupValue,\r\n      handleObservationsDebounced,\r\n      evaluateTextAreaValue,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n      marginBottom: '12px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n      marginBottom: '14px',\r\n    },\r\n  },\r\n  topMargin: theme.responsiveStyles({ marginTop: 24 }),\r\n  checkBoxesGroup: { width: '100%' },\r\n}));\r\n\r\nexport default useStyles;\r\n","import clsx from 'clsx';\r\nimport FormItemsWithSwitch from 'components/FormItemsWithSwitch';\r\nimport PreSurgicalModalChildren from 'components/PreSurgicalFormChildrenModal';\r\nimport StandarCheckboxesGroup from 'components/StandarCheckboxesGroup';\r\nimport StandarModal from 'components/StandarModal';\r\nimport StandarTextareaAutosize from 'components/StandarTextareaAutosize';\r\n\r\nimport useForm from './preSurgicalClinicalGenericItem/useForm';\r\nimport useStyles from './preSurgicalClinicalGenericItem/useStyles';\r\n\r\nconst PreSurgicalClinicalGenericItem = ({\r\n  groupTitle,\r\n  checkboxesArr,\r\n  setFormState,\r\n  currentShallowStateKey,\r\n  formValues,\r\n  textAreaPlaceHolder,\r\n  textAreaClassName,\r\n  className,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [\r\n    { shouldRender, shouldDisplayModal, areThereCheckboxes, checkboxes, observations },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleCheckboxes,\r\n      evaluateCheckboxesGroupValue,\r\n      handleObservationsDebounced,\r\n      evaluateTextAreaValue,\r\n    },\r\n  ] = useForm(setFormState, currentShallowStateKey, formValues);\r\n\r\n  return (\r\n    <FormItemsWithSwitch\r\n      groupTitle={`${groupTitle}:`}\r\n      className={className}\r\n      switchState={shouldRender}\r\n      handleSwitch={handleSwitch}\r\n    >\r\n      <StandarModal openState={shouldDisplayModal}>\r\n        <PreSurgicalModalChildren\r\n          text={`Todos los datos cargados para \"${groupTitle}\" se perderán, ¿está seguro que desea continuar?.`}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      {areThereCheckboxes ? (\r\n        <StandarCheckboxesGroup\r\n          checkboxesArr={checkboxesArr}\r\n          nestedHandler={handleCheckboxes}\r\n          checkboxesState={checkboxes}\r\n          className={classes.checkBoxesGroup}\r\n          evaluateValuesEffect={evaluateCheckboxesGroupValue}\r\n        />\r\n      ) : null}\r\n      <StandarTextareaAutosize\r\n        placeholder={textAreaPlaceHolder}\r\n        className={clsx(classes.textArea, textAreaClassName)}\r\n        value={observations}\r\n        nestedHandler={handleObservationsDebounced}\r\n        evaluateValueEffect={evaluateTextAreaValue}\r\n      />\r\n    </FormItemsWithSwitch>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalClinicalGenericItem;\r\n","import { useState } from 'react';\r\n\r\nconst useInputs = ({ setStateObj, currentDrug }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const { setFormStatePS, setTreatmentsParent } = setStateObj;\r\n\r\n  const deleteExistingKeyFromState = (prevState, name) => {\r\n    const stateObj = { ...prevState };\r\n    delete stateObj[name];\r\n    return stateObj;\r\n  };\r\n\r\n  const handleDeleteButton = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleAcceptButtonFor = (currentDrugName) => () => {\r\n    setTreatmentsParent((prevState) => deleteExistingKeyFromState(prevState, currentDrugName));\r\n    setFormStatePS((prevState) => deleteExistingKeyFromState(prevState, currentDrugName));\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleAcceptButton = handleAcceptButtonFor(currentDrug);\r\n\r\n  const handleCancelButton = () => {\r\n    setShowModal(false);\r\n  };\r\n  return [\r\n    showModal,\r\n    {\r\n      handleDeleteButton,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useInputs;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textMark: {\r\n    width: 'fit-content',\r\n    paddingRight: '5px',\r\n    paddingLeft: '5px',\r\n  },\r\n  textMarkContainer: {\r\n    width: 'fit-content',\r\n    flexShrink: '0',\r\n    paddingLeft: '5px',\r\n  },\r\n  rowContainer: {\r\n    ...theme.responsiveStyles({ marginBottom: 16 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  observationContainerSpacing: {\r\n    ...theme.responsiveStyles({ paddingBottom: 16 }),\r\n  },\r\n  textAligment: { textAlign: 'left' },\r\n  textFirstSectionSpacing: theme.responsiveStyles({ marginBottom: 16, paddingTop: 8 }),\r\n  textSecondSectionSpacing: {\r\n    ...theme.responsiveStyles({ paddingTop: 8 }),\r\n    marginLeft: '15px',\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  wrapText: {\r\n    inlineSize: '80%',\r\n    overflowWrap: 'break-word',\r\n    hyphens: 'auto',\r\n  },\r\n  sinceDate: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '64px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '70px',\r\n    },\r\n  },\r\n  observations: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '126px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '136px',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport FormAddedItem from 'components/FormAddedItem';\r\nimport FormHeading from 'components/FormHeading';\r\nimport PreSurgicalFormChildrenModal from 'components/PreSurgicalFormChildrenModal';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarModal from 'components/StandarModal';\r\n\r\nimport useInputs from './treatmentItem/useInputs';\r\nimport useStyles from './treatmentItem/useStyles';\r\n\r\nconst TreatmentItem = ({ className, setStateObj, valuesObj }) => {\r\n  const classes = useStyles();\r\n  const { drug, startingTreatmentDate, endingTreatmentDate, observations } = valuesObj;\r\n  const textMarkContainerWidthClass =\r\n    observations !== '' ? classes.observations : classes.sinceDate;\r\n\r\n  const [showModal, { handleDeleteButton, handleAcceptButton, handleCancelButton }] = useInputs({\r\n    setStateObj,\r\n    currentDrug: drug,\r\n  });\r\n\r\n  return (\r\n    <FormAddedItem className={className}>\r\n      <StandarModal openState={showModal}>\r\n        <PreSurgicalFormChildrenModal\r\n          text={`El tratamiento \"${drug}\" será eliminado permanentemente, ¿Está seguro que desea continuar?`}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      <Grid container alignItems=\"center\" className={classes.rowBottomMargin}>\r\n        <FormHeading\r\n          variant=\"body1\"\r\n          className={clsx(classes.textMark, classes.textAligment)}\r\n          text={`Medicación: ${drug}`}\r\n        />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        {startingTreatmentDate !== '' && (\r\n          <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n            <Grid\r\n              container\r\n              className={clsx(classes.textMarkContainer, textMarkContainerWidthClass)}\r\n            >\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Desde:\"\r\n              />\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(\r\n                classes.textSecondSectionSpacing,\r\n                classes.textAligment,\r\n                classes.wrapText\r\n              )}\r\n            >\r\n              {startingTreatmentDate}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        {endingTreatmentDate !== '' && (\r\n          <Grid container alignItems=\"flex-start\" wrap=\"nowrap\" className={classes.rowContainer}>\r\n            <Grid\r\n              container\r\n              className={clsx(classes.textMarkContainer, textMarkContainerWidthClass)}\r\n            >\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Hasta:\"\r\n              />\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(\r\n                classes.textSecondSectionSpacing,\r\n                classes.textAligment,\r\n                classes.wrapText\r\n              )}\r\n            >\r\n              {endingTreatmentDate}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        {observations !== '' && (\r\n          <Grid\r\n            container\r\n            alignItems=\"flex-start\"\r\n            wrap=\"nowrap\"\r\n            className={clsx(classes.rowContainer, classes.observationContainerSpacing)}\r\n          >\r\n            <Grid\r\n              container\r\n              className={clsx(classes.textMarkContainer, textMarkContainerWidthClass)}\r\n            >\r\n              <FormHeading\r\n                variant=\"body2\"\r\n                className={clsx(classes.textMark, classes.textFirstSectionSpacing)}\r\n                text=\"Observaciones:\"\r\n              />\r\n            </Grid>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={clsx(\r\n                classes.textSecondSectionSpacing,\r\n                classes.textAligment,\r\n                classes.wrapText\r\n              )}\r\n            >\r\n              {observations}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        alignContent=\"flex-end\"\r\n        justifyContent=\"flex-end\"\r\n        className={classes.buttonContainer}\r\n      >\r\n        <StandarButton text=\"ELIMINAR\" onClick={handleDeleteButton} />\r\n      </Grid>\r\n    </FormAddedItem>\r\n  );\r\n};\r\n\r\nexport default TreatmentItem;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowTopMargin: theme.responsiveStyles({ marginTop: 34 }),\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  itemsContainer: {\r\n    '@global': {\r\n      ' > div:last-child': {\r\n        marginBottom: '0px',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport FormHeading from 'components/FormHeading';\r\nimport React from 'react';\r\n\r\nimport TreatmentItem from './TreatmentItem';\r\nimport useStyles from './treatmentsList/useStyles';\r\n\r\nconst TreatmentsList = ({ className, itemsToRenderProps, setStateObj }) => {\r\n  const classes = useStyles();\r\n  const consignedTreatmentsArr = itemsToRenderProps.map((item) => {\r\n    const { drug } = item;\r\n    return (\r\n      <TreatmentItem\r\n        key={drug}\r\n        className={classes.rowBottomMargin}\r\n        valuesObj={item}\r\n        setStateObj={setStateObj}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <FormHeading\r\n        key=\"consignedTreatments\"\r\n        variant=\"body1\"\r\n        className={clsx(className, classes.rowBottomMargin)}\r\n        text=\"Tratamientos Consignados.\"\r\n      />\r\n      <Grid container direction=\"column\" className={classes.itemsContainer}>\r\n        {consignedTreatmentsArr}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(TreatmentsList);\r\n","import isAfter from 'date-fns/isAfter';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport createArrFromObject from 'helpers/createArrFromObj';\r\nimport getItems from 'helpers/getItems';\r\nimport { useState, useMemo, useRef, useEffect, useCallback } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nconst useForm = ({ formValues, setFormState, isUnresolvedError, ref }) => {\r\n  const defaultInputErrors = {\r\n    drugInputRequired: false,\r\n    startingDateRequired: false,\r\n    endingDateRequired: false,\r\n    observationsRequired: false,\r\n  };\r\n\r\n  const { shouldDisplay, ...treatmentsProps } = formValues;\r\n  const [shouldRender, setShouldRender] = useState(shouldDisplay);\r\n  const [shouldDisplayModal, setShouldDisplayModal] = useState(false);\r\n  const [drugValue, setDrugValue] = useState('');\r\n  const [radioButtonValue, setRadioButtonValue] = useState();\r\n  const [observations, setObservations] = useState('');\r\n  const [startingTreatmentDateValue, setStartingTreatmentDateValue] = useState(null);\r\n  const [endingTreatmentDateValue, setEndingTreatmentDateValue] = useState(null);\r\n  const [treatments, setTreatments] = useState(treatmentsProps);\r\n  const [shouldReset, setShouldReset] = useState(false);\r\n  const [formErrors, setFormErrors] = useState(defaultInputErrors);\r\n  const [isUnresolved, setIsUnresolved] = useState(false);\r\n\r\n  let isDrugInputOnErrorRef = useRef();\r\n\r\n  const setStatesToDefaultOn = (range) => {\r\n    const shouldResetAllStates = range === 'all';\r\n    const shouldResetInputsState = range === 'inputs';\r\n    const resetNestedFormsStates = () => {\r\n      setStartingTreatmentDateValue(null);\r\n      setEndingTreatmentDateValue(null);\r\n      setDrugValue('');\r\n      setRadioButtonValue('no');\r\n      setObservations('');\r\n      setFormErrors(defaultInputErrors);\r\n      setShouldReset(true);\r\n    };\r\n    const resetAllStates = () => {\r\n      resetNestedFormsStates();\r\n      setTreatments({});\r\n      setShouldRender((prevState) => !prevState);\r\n    };\r\n    if (shouldResetAllStates) {\r\n      resetAllStates();\r\n    } else if (shouldResetInputsState) {\r\n      resetNestedFormsStates();\r\n    }\r\n  };\r\n\r\n  const isStartingDateAfter = isAfter(startingTreatmentDateValue, new Date());\r\n  const isStartingDateBefore = isBefore(startingTreatmentDateValue, new Date('1900', '01', '01'));\r\n\r\n  const isEndingDateAfter = isAfter(endingTreatmentDateValue, new Date('2040', '01', '01'));\r\n\r\n  const isStartingDateValidated =\r\n    !isStartingDateAfter &&\r\n    !isStartingDateBefore &&\r\n    startingTreatmentDateValue !== null &&\r\n    startingTreatmentDateValue != 'Invalid Date';\r\n\r\n  const isEndingDateInputValueValidated =\r\n    !isEndingDateAfter &&\r\n    endingTreatmentDateValue !== null &&\r\n    endingTreatmentDateValue != 'Invalid Date';\r\n\r\n  const isDrugInputFilled = drugValue !== '';\r\n  const treatmentsPropsArr = useMemo(() => createArrFromObject(treatments), [treatments]);\r\n  const thereAreTreatmentToRender = treatmentsPropsArr.length > 1;\r\n\r\n  const shouldHaveEndingDate = radioButtonValue === 'yes';\r\n  const createTreatmentsObjFrom = ({\r\n    drug,\r\n    startingDateCondition,\r\n    startingDate,\r\n    shouldHaveEndingDateValue,\r\n    endingDate,\r\n    observationsValue,\r\n  }) => (prevState) => {\r\n    const getFormattedDateOn = (condition, date) => {\r\n      if (condition) {\r\n        return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n      } else {\r\n        return '';\r\n      }\r\n    };\r\n    const startingDateValue = getFormattedDateOn(startingDateCondition, startingDate);\r\n    const endingDateValue = getFormattedDateOn(shouldHaveEndingDateValue, endingDate);\r\n    return {\r\n      ...prevState,\r\n      [drug]: {\r\n        drug,\r\n        startingTreatmentDate: startingDateValue,\r\n        endingTreatmentDate: endingDateValue,\r\n        ['observations']: observationsValue,\r\n      },\r\n    };\r\n  };\r\n\r\n  const createTreatmentsObj = createTreatmentsObjFrom({\r\n    drug: drugValue,\r\n    startingDateCondition: isStartingDateValidated,\r\n    startingDate: startingTreatmentDateValue,\r\n    shouldHaveEndingDateValue: shouldHaveEndingDate,\r\n    endingDate: endingTreatmentDateValue,\r\n    observationsValue: observations,\r\n  });\r\n\r\n  const addNewObjInGlobalState = (prevState) => {\r\n    const shallowObj = prevState['treatments'];\r\n    const stateObj = {\r\n      ...prevState,\r\n      ['treatments']: {\r\n        shouldDisplay: true,\r\n        ...createTreatmentsObj(shallowObj),\r\n      },\r\n    };\r\n    return stateObj;\r\n  };\r\n\r\n  const setErrorFor = ({\r\n    drug,\r\n    observationsValue,\r\n    startingDate,\r\n    startingDateCondition,\r\n    shouldHaveEndingDateValue,\r\n    endingDateCondition,\r\n  }) => () => {\r\n    if (drug === '') {\r\n      setFormErrors({\r\n        ...defaultInputErrors,\r\n        isDrugInputOnError: true,\r\n      });\r\n    } else if (observationsValue === '' && startingDate === null) {\r\n      setFormErrors({\r\n        ...defaultInputErrors,\r\n        isStartingDateInputOnError: true,\r\n        isObservationsInputOnError: true,\r\n      });\r\n    } else if (!startingDateCondition) {\r\n      setFormErrors({\r\n        ...defaultInputErrors,\r\n        isStartingDateInputOnError: true,\r\n      });\r\n    } else if (shouldHaveEndingDateValue && !endingDateCondition) {\r\n      setFormErrors({\r\n        ...defaultInputErrors,\r\n        isEndingDateInputOnError: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setError = setErrorFor({\r\n    drug: drugValue,\r\n    startingDateCondition: isStartingDateValidated,\r\n    startingDate: startingTreatmentDateValue,\r\n    shouldHaveEndingDateValue: shouldHaveEndingDate,\r\n    endingDateCondition: isEndingDateInputValueValidated,\r\n    observationsValue: observations,\r\n  });\r\n\r\n  const handleSwitchFor = ({\r\n    drugInputCondition,\r\n    shouldRenderState,\r\n    treatmentsToRenderCondition,\r\n  }) => () => {\r\n    const shouldDisplayModalCondition =\r\n      shouldRenderState && (treatmentsToRenderCondition || drugInputCondition);\r\n    if (shouldDisplayModalCondition) {\r\n      setShouldDisplayModal(true);\r\n    } else {\r\n      setStatesToDefaultOn('all');\r\n    }\r\n  };\r\n\r\n  const handleSwitch = handleSwitchFor({\r\n    drugInputCondition: isDrugInputFilled,\r\n    shouldRenderState: shouldRender,\r\n    treatmentsToRenderCondition: thereAreTreatmentToRender,\r\n  });\r\n\r\n  const handleAcceptButton = () => {\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      ['treatments']: {\r\n        shouldDisplay: false,\r\n      },\r\n    }));\r\n    setShouldDisplayModal(false);\r\n    setStatesToDefaultOn('all');\r\n  };\r\n\r\n  const handleCancelButton = () => {\r\n    setShouldDisplayModal(false);\r\n  };\r\n\r\n  const handleRadioOnChange = (value) => setRadioButtonValue(value);\r\n\r\n  const handleOnChangeFor = (setState) => (value) => setState(value);\r\n\r\n  const resetObservationAndStartingDateError = () =>\r\n    setFormErrors((prevState) => ({\r\n      ...prevState,\r\n      isStartingDateInputOnError: false,\r\n      isObservationsInputOnError: false,\r\n    }));\r\n\r\n  const handleDrugValueDebounced = useDebouncedCallback(handleOnChangeFor(setDrugValue), 250, {\r\n    trailing: true,\r\n  });\r\n\r\n  const handleObservationsDebounced = useDebouncedCallback(\r\n    (value) => {\r\n      resetObservationAndStartingDateError();\r\n      handleOnChangeFor(setObservations)(value);\r\n    },\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleStartingTreatmentDateValueDebounced = useDebouncedCallback(\r\n    (value) => {\r\n      resetObservationAndStartingDateError();\r\n      handleOnChangeFor(setStartingTreatmentDateValue)(value);\r\n    },\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleEndingTreatmentDateValueDebounced = useDebouncedCallback(\r\n    handleOnChangeFor(setEndingTreatmentDateValue),\r\n    250,\r\n    {\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  const handleAddTreatmentFor = ({\r\n    drugInputCondition,\r\n    errorRefCondition,\r\n    observationsValue,\r\n    startingDateCondition,\r\n    startingDateValue,\r\n    shouldHaveEndingDateValue,\r\n    endingDateCondition,\r\n    endingDateValue,\r\n  }) => () => {\r\n    const isDrugValueValidated = drugInputCondition && !errorRefCondition.current;\r\n    const atLeastOneRequiredFieldIsFilled = observationsValue !== '' || startingDateCondition;\r\n    const isEndingDateValidated = shouldHaveEndingDateValue\r\n      ? endingDateCondition &&\r\n        startingDateCondition &&\r\n        !isBefore(\r\n          endingDateValue,\r\n          new Date(\r\n            startingDateValue.getFullYear(),\r\n            startingDateValue.getMonth(),\r\n            startingDateValue.getDate()\r\n          )\r\n        )\r\n      : true;\r\n\r\n    if (isDrugValueValidated && atLeastOneRequiredFieldIsFilled && isEndingDateValidated) {\r\n      setTreatments((prevState) => createTreatmentsObj(prevState));\r\n      setFormState((prevState) => addNewObjInGlobalState(prevState));\r\n      setStatesToDefaultOn('inputs');\r\n    } else {\r\n      setError();\r\n    }\r\n  };\r\n  const handleAddTreatment = handleAddTreatmentFor({\r\n    drugInputCondition: isDrugInputFilled,\r\n    errorRefCondition: isEndingDateInputValueValidated,\r\n    observationsValue: observations,\r\n    startingDateCondition: isStartingDateValidated,\r\n    startingDateValue: startingTreatmentDateValue,\r\n    shouldHaveEndingDateValue: shouldHaveEndingDate,\r\n    endingDateCondition: isEndingDateInputValueValidated,\r\n    endingDateValue: endingTreatmentDateValue,\r\n  });\r\n\r\n  const setStateObjTreatment = useMemo(\r\n    () => ({\r\n      setFormStatePS: setFormState,\r\n      setTreatmentsParent: setTreatments,\r\n    }),\r\n    [setFormState]\r\n  );\r\n\r\n  const updateIsUnresolvedRefOn = useCallback((drugInputCondition, refValue) => {\r\n    if (drugInputCondition) {\r\n      refValue.current = true;\r\n    } else {\r\n      refValue.current = false;\r\n    }\r\n  }, []);\r\n\r\n  const manageIsUnresolvedOnProp = useCallback((isUnresolvedProp) => {\r\n    if (isUnresolvedProp) {\r\n      setIsUnresolved(true);\r\n    } else {\r\n      setIsUnresolved(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateIsUnresolvedRefOn(isDrugInputFilled, ref);\r\n  }, [isDrugInputFilled, ref, updateIsUnresolvedRefOn]);\r\n\r\n  useEffect(() => manageIsUnresolvedOnProp(isUnresolvedError), [\r\n    isUnresolvedError,\r\n    manageIsUnresolvedOnProp,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (shouldReset) {\r\n      setShouldReset(false);\r\n    }\r\n  }, [shouldReset]);\r\n\r\n  useEffect(() => {\r\n    if (shouldDisplay) {\r\n      setShouldRender(shouldDisplay);\r\n    }\r\n  }, [shouldDisplay]);\r\n\r\n  useEffect(() => {\r\n    if (shouldRender) {\r\n      setTreatments(getItems(formValues));\r\n      setFormState((prevState) => ({\r\n        ...prevState,\r\n        ['treatments']: {\r\n          shouldDisplay: true,\r\n          ...getItems(formValues),\r\n        },\r\n      }));\r\n    }\r\n  }, [shouldRender, setFormState, formValues]);\r\n\r\n  return [\r\n    {\r\n      shouldRender,\r\n      shouldDisplayModal,\r\n      formErrors,\r\n      isUnresolved,\r\n      isDrugInputOnErrorRef,\r\n      isStartingDateValidated,\r\n      shouldReset,\r\n      drugValue,\r\n      radioButtonValue,\r\n      treatmentsPropsArr,\r\n    },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleRadioOnChange,\r\n      handleDrugValueDebounced,\r\n      handleObservationsDebounced,\r\n      handleStartingTreatmentDateValueDebounced,\r\n      handleEndingTreatmentDateValueDebounced,\r\n      handleAddTreatment,\r\n      setStateObjTreatment,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  individualFieldWidth: theme.responsiveStyles({ width: 160 }),\r\n  topMargin: theme.responsiveStyles({ marginTop: 24 }),\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 34 }),\r\n  rowTopMargin: theme.responsiveStyles({ marginTop: 34 }),\r\n  dateInputLeftPadding: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      paddingLeft: '0px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingLeft: '16px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: '19px',\r\n    },\r\n  },\r\n  radioButtonsAlignment: {\r\n    alignSelf: 'flex-start',\r\n  },\r\n  rowContainer: {\r\n    ...theme.responsiveStyles({ marginBottom: 16 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n  },\r\n  textArea: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '70%',\r\n    },\r\n  },\r\n  isUnresolvedError: {\r\n    border: '2px solid',\r\n    borderRadius: '4px',\r\n    borderColor: theme.palette.alert.main,\r\n    ...theme.responsiveStyles({ padding: 24 }),\r\n  },\r\n  textError: {\r\n    color: theme.palette.alert.main,\r\n    textAlign: 'left',\r\n    marginRight: '14px',\r\n    marginLeft: '14px',\r\n    marginTop: '4px',\r\n  },\r\n  textExtraError: {\r\n    marginLeft: '14px',\r\n    marginRight: '14px',\r\n    marginTop: '4px',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport FormItemsWithSwitch from 'components/FormItemsWithSwitch';\r\nimport FormRow from 'components/FormRow';\r\nimport LeftFormContainer from 'components/LeftFormContainer';\r\nimport PreSurgicalFormChildrenModal from 'components/PreSurgicalFormChildrenModal';\r\nimport RadioButtonsGroup from 'components/RadioButtonsGroup';\r\nimport RightFormContainer from 'components/RightFormContainer';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarModal from 'components/StandarModal';\r\nimport StandarTextareaAutosize from 'components/StandarTextareaAutosize';\r\nimport TitledDateInput from 'components/TitledDateInput';\r\nimport TitledInput from 'components/TitledInput';\r\nimport TitledItem from 'components/TitledItem';\r\nimport React from 'react';\r\n\r\nimport TreatmentsList from './treatments/TreatmentsList';\r\nimport useForm from './treatments/useForm';\r\nimport useStyles from './treatments/useStyles';\r\n\r\nconst Treatments = ({ formValues, setFormState, className, isUnresolvedError }, ref) => {\r\n  const classes = useStyles();\r\n  const [\r\n    {\r\n      shouldRender,\r\n      shouldDisplayModal,\r\n      formErrors,\r\n      isUnresolved,\r\n      isDrugInputOnErrorRef,\r\n      isStartingDateValidated,\r\n      shouldReset,\r\n      drugValue,\r\n      radioButtonValue,\r\n      treatmentsPropsArr,\r\n    },\r\n    {\r\n      handleSwitch,\r\n      handleAcceptButton,\r\n      handleCancelButton,\r\n      handleRadioOnChange,\r\n      handleDrugValueDebounced,\r\n      handleObservationsDebounced,\r\n      handleStartingTreatmentDateValueDebounced,\r\n      handleEndingTreatmentDateValueDebounced,\r\n      handleAddTreatment,\r\n      setStateObjTreatment,\r\n    },\r\n  ] = useForm({\r\n    formValues,\r\n    setFormState,\r\n    isUnresolvedError,\r\n    ref,\r\n  });\r\n\r\n  const {\r\n    isDrugInputOnError,\r\n    isStartingDateInputOnError,\r\n    isEndingDateInputOnError,\r\n    isObservationsInputOnError,\r\n  } = formErrors;\r\n\r\n  return (\r\n    <FormItemsWithSwitch\r\n      groupTitle=\"Tratamientos\"\r\n      className={className}\r\n      switchState={shouldRender}\r\n      handleSwitch={handleSwitch}\r\n    >\r\n      <StandarModal openState={shouldDisplayModal}>\r\n        <PreSurgicalFormChildrenModal\r\n          text={`Todos los datos cargados para \"Tratamientos\" se perderán, así mismo en caso que haya rellenado algún formulario parcialmente, ¿está seguro que desea continuar?.`}\r\n          handleAcceptButton={handleAcceptButton}\r\n          handleCancelButton={handleCancelButton}\r\n        />\r\n      </StandarModal>\r\n      <Grid\r\n        container\r\n        className={clsx(classes.topMargin, isUnresolved && classes.isUnresolvedError)}\r\n      >\r\n        <FormRow>\r\n          <LeftFormContainer>\r\n            <TitledInput\r\n              inputTitle=\"Fármaco:\"\r\n              placeholder=\"Ingrese nombre del fármaco\"\r\n              maxLength={40}\r\n              nestedHandler={handleDrugValueDebounced}\r\n              isRequiredError={isDrugInputOnError}\r\n              ref={isDrugInputOnErrorRef}\r\n              shouldReset={shouldReset}\r\n            />\r\n          </LeftFormContainer>\r\n          <RightFormContainer>\r\n            <TitledDateInput\r\n              inputTitle=\"Inicio de tratamiento:\"\r\n              format=\"dd/MM/yyyy\"\r\n              nestedHandler={handleStartingTreatmentDateValueDebounced}\r\n              maxDateMessage=\"La fecha no puede ser mayor a la actual\"\r\n              disabled={drugValue === ''}\r\n              disableFuture={true}\r\n              className={classes.rowBottomMargin}\r\n              isRequiredError={isStartingDateInputOnError}\r\n              shouldReset={shouldReset}\r\n            />\r\n          </RightFormContainer>\r\n        </FormRow>\r\n        <Grid container wrap=\"nowrap\" className={clsx(classes.topMargin, classes.rowBottomMargin)}>\r\n          <TitledItem title=\"Suspender medicación.\" className={classes.radioButtonsAlignment}>\r\n            <RadioButtonsGroup\r\n              radioItemsArr={[\r\n                { value: 'yes', label: 'Sí' },\r\n                { value: 'no', label: 'No' },\r\n              ]}\r\n              nestedHandler={handleRadioOnChange}\r\n              disabled={!isStartingDateValidated}\r\n              value={radioButtonValue}\r\n            />\r\n          </TitledItem>\r\n          <TitledDateInput\r\n            inputTitle=\"Para fecha:\"\r\n            format=\"dd/MM/yyyy\"\r\n            nestedHandler={handleEndingTreatmentDateValueDebounced}\r\n            disablePast={true}\r\n            disabled={radioButtonValue === 'no'}\r\n            className={clsx(classes.rowBottomMargin, classes.dateInputLeftPadding)}\r\n            isRequiredError={isEndingDateInputOnError}\r\n            shouldReset={shouldReset}\r\n          />\r\n        </Grid>\r\n        <Grid container className={classes.rowContainer}>\r\n          <StandarTextareaAutosize\r\n            placeholder=\"/..Observaciones...\"\r\n            className={clsx(classes.rowBottomMargin, classes.textArea)}\r\n            nestedHandler={handleObservationsDebounced}\r\n            isRequiredError={isObservationsInputOnError}\r\n            shouldReset={shouldReset}\r\n          />\r\n        </Grid>\r\n        <Grid container justifyContent=\"flex-end\" alignItems=\"flex-start\">\r\n          <StandarButton text=\"Agregar Tratamiento\" onClick={handleAddTreatment} />\r\n        </Grid>\r\n      </Grid>\r\n      {isUnresolved && (\r\n        <Typography\r\n          variant=\"caption\"\r\n          className={clsx(\r\n            classes.textError,\r\n            treatmentsPropsArr.length > 1 && classes.rowBottomMargin\r\n          )}\r\n        >\r\n          Hay datos sin agregar complete el formulario o vacie los campos si son innecesarios, luego\r\n          vuelva a intentar la validación.\r\n        </Typography>\r\n      )}\r\n      {treatmentsPropsArr.length >= 1 && (\r\n        <TreatmentsList\r\n          className={!isUnresolved ? classes.rowTopMargin : null}\r\n          itemsToRenderProps={treatmentsPropsArr}\r\n          setStateObj={setStateObjTreatment}\r\n        />\r\n      )}\r\n    </FormItemsWithSwitch>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(Treatments);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 24 }),\r\n  noCheckboxesTextArea: theme.responsiveStyles({ marginTop: 24 }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import FormHeading from 'components/FormHeading';\r\nimport FormRow from 'components/FormRow';\r\nimport { PreSurgical } from 'context/PreSurgical';\r\nimport React from 'react';\r\nimport { useContext } from 'react';\r\n\r\nimport PresurgicalClinicalGenericItem from './preSurgicalClinicalForm/PreSurgicalClinicalGenericItem';\r\nimport Treatments from './preSurgicalClinicalForm/Treatments';\r\nimport useStyles from './preSurgicalClinicalForm/useStyles';\r\n\r\nconst PreSurgicalClinicalForm = ({ isTreatmentsUnresolved, className }, ref) => {\r\n  const classes = useStyles();\r\n  const { initialState, updateGlobalState } = useContext(PreSurgical);\r\n\r\n  const pSCFormsWithCheckboxesProps = [\r\n    {\r\n      groupTitle: 'Afecciones Cardiovasculares',\r\n      checkboxes: [\r\n        {\r\n          label: 'Hipertensión',\r\n          name: 'checkboxHypertension',\r\n        },\r\n        {\r\n          label: 'Arrítamias',\r\n          name: 'checkboxArrhythmias',\r\n        },\r\n        {\r\n          label: 'Ángor est. CF',\r\n          name: 'checkboxStableAnginaCF',\r\n        },\r\n        {\r\n          label: 'Ángor inest.',\r\n          name: 'checkboxUnstableAngina',\r\n        },\r\n        {\r\n          label: 'IAM Tiempo',\r\n          name: 'checkboxAMIDate',\r\n        },\r\n        {\r\n          label: 'Valvulopatía',\r\n          name: 'checkboxValvularHeartDisease',\r\n        },\r\n        {\r\n          label: 'Disnea CF',\r\n          name: 'checkboxDyspnoeaCF',\r\n        },\r\n        {\r\n          label: 'Cirugía Card. Tiempo',\r\n          name: 'checkboxheartSurgeryDate',\r\n        },\r\n        {\r\n          label: 'Marcapaso',\r\n          name: 'checkboxPacemaker',\r\n        },\r\n        {\r\n          label: 'Edemas',\r\n          name: 'checkboxEdema',\r\n        },\r\n        {\r\n          label: 'Várices',\r\n          name: 'checkboxVaricoseVeins',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'cardiovascular',\r\n    },\r\n    {\r\n      groupTitle: 'Afecciones Respiratorias',\r\n      checkboxes: [\r\n        {\r\n          label: 'Asma',\r\n          name: 'checkboxAsthma',\r\n        },\r\n        {\r\n          label: 'EPOC',\r\n          name: 'checkboxCOPD',\r\n        },\r\n        {\r\n          label: 'Tabaquismo',\r\n          name: 'checkboxSmoking',\r\n        },\r\n        {\r\n          label: 'Tos',\r\n          name: 'checkboxCough',\r\n        },\r\n        {\r\n          label: 'Expectoración',\r\n          name: 'checkboxExpectoration',\r\n        },\r\n        {\r\n          label: 'Disnea CF',\r\n          name: 'checkboxDyspnoeaCF',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'respiratory',\r\n    },\r\n    {\r\n      groupTitle: 'Condición Ocular',\r\n      checkboxes: [\r\n        {\r\n          label: 'Glaucoma',\r\n          name: 'checkboxGlaucoma',\r\n        },\r\n        {\r\n          label: 'Uso de lentes de contacto',\r\n          name: 'checkboxWearingContactLenses',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'ocular',\r\n    },\r\n    {\r\n      groupTitle: 'Afecciones Gastrointestinales',\r\n      checkboxes: [\r\n        {\r\n          label: 'Sme. Acido Sensitivo',\r\n          name: 'checkboxAcidSensitiveSyndrome',\r\n        },\r\n        {\r\n          label: 'Hernia Hiato - reflujo',\r\n          name: 'checkboxHiatalHerniaReflux',\r\n        },\r\n        {\r\n          label: 'Oclusión',\r\n          name: 'checkboxOcclusion',\r\n        },\r\n        {\r\n          label: 'Insuf. Hepática',\r\n          name: 'checkboxLiverFailure',\r\n        },\r\n        {\r\n          label: 'Hepatitis',\r\n          name: 'checkboxHepatitis',\r\n        },\r\n        {\r\n          label: 'Cirrosis',\r\n          name: 'checkboxCirrhosis',\r\n        },\r\n        {\r\n          label: 'Ictericia - Colectosis',\r\n          name: 'checkboxJaundiceCholectosis',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'gastrointestinal',\r\n    },\r\n    {\r\n      groupTitle: 'Afecciones Urinarias',\r\n      checkboxes: [\r\n        {\r\n          label: 'Insuf. renal crónica',\r\n          name: 'checkboxChronicKidneyFailure',\r\n        },\r\n        {\r\n          label: 'Insuf. renal aguda',\r\n          name: 'checkboxAcuteRenalFailure',\r\n        },\r\n        {\r\n          label: 'Diálisis',\r\n          name: 'checkboxDialysis',\r\n        },\r\n        {\r\n          label: 'Incontinencia',\r\n          name: 'checkboxIncontinence',\r\n        },\r\n        {\r\n          label: 'Disuria - Polaquiuria',\r\n          name: 'checkboxDysuriaPolish',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'urinary',\r\n    },\r\n    {\r\n      groupTitle: 'Alergias',\r\n      checkboxes: [\r\n        {\r\n          label: 'Medicamentos',\r\n          name: 'checkboxMedicines',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'allergies',\r\n    },\r\n    {\r\n      groupTitle: 'Afecciones Endocrino Metabolicas',\r\n      checkboxes: [\r\n        {\r\n          label: 'Obesidad',\r\n          name: 'checkboxObesity',\r\n        },\r\n        {\r\n          label: 'Diabetes',\r\n          name: 'checkboxDiabetes',\r\n        },\r\n        {\r\n          label: 'Hipertirodismo',\r\n          name: 'checkboxHyperthyroidism',\r\n        },\r\n        {\r\n          label: 'Hipotirodismo',\r\n          name: 'checkboxHypothyroidism',\r\n        },\r\n        {\r\n          label: 'Suprarrenales',\r\n          name: 'checkboxAdrenals',\r\n        },\r\n        {\r\n          label: 'Desnutrición',\r\n          name: 'checkboxMalnutrition',\r\n        },\r\n        {\r\n          label: 'Deshidratación',\r\n          name: 'checkboxDehydration',\r\n        },\r\n        {\r\n          label: 'Hipertermia',\r\n          name: 'checkboxHyperthermia',\r\n        },\r\n        {\r\n          label: 'Alcoholismo',\r\n          name: 'checkboxAlcoholism',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'endocrineMetabolic',\r\n    },\r\n    {\r\n      groupTitle: 'Afecciones Neuromusculares',\r\n      checkboxes: [\r\n        {\r\n          label: 'ACV',\r\n          name: 'checkboxCVA',\r\n        },\r\n        {\r\n          label: 'AIT',\r\n          name: 'checkboxTIA',\r\n        },\r\n        {\r\n          label: 'Paresia',\r\n          name: 'checkboxParesis',\r\n        },\r\n        {\r\n          label: 'Parestesia',\r\n          name: 'checkboxParaesthesia',\r\n        },\r\n        {\r\n          label: 'Afasias',\r\n          name: 'checkboxAphasias',\r\n        },\r\n        {\r\n          label: 'Convulsiones',\r\n          name: 'checkboxSeizures',\r\n        },\r\n        {\r\n          label: 'Hiper. endocraneana',\r\n          name: 'checkboxIntracranialHypertension',\r\n        },\r\n        {\r\n          label: 'Miopatías',\r\n          name: 'checkboxMyopathies',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'neuromuscular',\r\n    },\r\n    {\r\n      groupTitle: 'Hematología',\r\n      checkboxes: [\r\n        {\r\n          label: 'Anemia',\r\n          name: 'checkboxAnemia',\r\n        },\r\n        {\r\n          label: 'Coagulopatías',\r\n          name: 'checkboxCoagulopathies',\r\n        },\r\n        {\r\n          label: 'Transfusiones',\r\n          name: 'checkboxTransfusions',\r\n        },\r\n        {\r\n          label: 'Testigo de Jehová',\r\n          name: 'checkboxJehovahsWitness',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'hematological',\r\n    },\r\n    {\r\n      groupTitle: 'Enf. de tej. conectivo',\r\n      checkboxes: [\r\n        {\r\n          label: 'LES',\r\n          name: 'checkboxSEL',\r\n        },\r\n        {\r\n          label: 'AR',\r\n          name: 'checkboxRA',\r\n        },\r\n        {\r\n          label: 'Sme. Antifosfolípidos',\r\n          name: 'checkboxAntiphospholipidSyndrome',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'connectiveTissueDiseases',\r\n    },\r\n    {\r\n      groupTitle: 'Antec. Ginecobstétricos',\r\n      checkboxes: [\r\n        {\r\n          label: 'FUM',\r\n          name: 'checkboxLMP',\r\n        },\r\n        {\r\n          label: 'Embarazos',\r\n          name: 'checkboxPregnancies',\r\n        },\r\n        {\r\n          label: 'Abortos',\r\n          name: 'checkboxAbortions',\r\n        },\r\n        {\r\n          label: 'Eclampsia',\r\n          name: 'checkboxEclampsia',\r\n        },\r\n        {\r\n          label: 'Preeclampsia ACO',\r\n          name: 'checkboxPreeclampsiaOC',\r\n        },\r\n      ],\r\n      keyForFormStateNestedObJ: 'obstetricGynecologicalHistory',\r\n    },\r\n  ];\r\n\r\n  const pSCFormsWithoutCheckboxesProps = [\r\n    { groupTitle: 'Afecciones Psiquiátricas', keyForFormStateNestedObJ: 'psychiatric' },\r\n    {\r\n      groupTitle: 'Antecedentes Anestésicos',\r\n      keyForFormStateNestedObJ: 'anestheticHistory',\r\n    },\r\n    {\r\n      groupTitle: 'Otros',\r\n      keyForFormStateNestedObJ: 'others',\r\n    },\r\n  ];\r\n\r\n  const { preSurgicalClinical, treatments } = initialState;\r\n  const pSCFormsWithCheckboxesArray = pSCFormsWithCheckboxesProps.map((item) => {\r\n    const currentGroupTitle = item['groupTitle'];\r\n    const currentCheckboxes = item['checkboxes'];\r\n\r\n    const currentShallowStateKey = item['keyForFormStateNestedObJ'];\r\n    const key = currentShallowStateKey;\r\n    const currentFormValues = preSurgicalClinical[currentShallowStateKey];\r\n\r\n    return (\r\n      <PresurgicalClinicalGenericItem\r\n        groupTitle={currentGroupTitle}\r\n        checkboxesArr={currentCheckboxes}\r\n        key={key}\r\n        currentShallowStateKey={currentShallowStateKey}\r\n        formValues={currentFormValues}\r\n        setFormState={updateGlobalState}\r\n        textAreaPlaceHolder=\"/..Observaciones...\"\r\n        addButtonText=\"Agregar Observación\"\r\n        className={classes.rowBottomMargin}\r\n      />\r\n    );\r\n  });\r\n\r\n  const pSCFormsWithoutCheckboxesArray = pSCFormsWithoutCheckboxesProps.map((item) => {\r\n    const currentGroupTitle = item['groupTitle'];\r\n    const currentShallowStateKey = item['keyForFormStateNestedObJ'];\r\n    const key = currentShallowStateKey;\r\n    const currentFormValues = preSurgicalClinical[currentShallowStateKey];\r\n\r\n    return (\r\n      <PresurgicalClinicalGenericItem\r\n        groupTitle={currentGroupTitle}\r\n        key={key}\r\n        currentShallowStateKey={currentShallowStateKey}\r\n        formValues={currentFormValues}\r\n        setFormState={updateGlobalState}\r\n        textAreaPlaceHolder=\"/..Observaciones...\"\r\n        addButtonText=\"Agregar Observación\"\r\n        className={classes.rowBottomMargin}\r\n        textAreaClassName={classes.noCheckboxesTextArea}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <FormRow className={className}>\r\n      <FormHeading\r\n        className={classes.rowBottomMargin}\r\n        text=\"Clínica Pre-Operatoria.\"\r\n        variant=\"body1\"\r\n      />\r\n      {pSCFormsWithCheckboxesArray}\r\n      {pSCFormsWithoutCheckboxesArray}\r\n      <Treatments\r\n        formValues={treatments}\r\n        setFormState={updateGlobalState}\r\n        isUnresolvedError={isTreatmentsUnresolved}\r\n        ref={ref}\r\n      />\r\n    </FormRow>\r\n  );\r\n};\r\n\r\nexport default React.memo(React.forwardRef(PreSurgicalClinicalForm));\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modalChildrenContainer: {\r\n    ...theme.responsiveStyles({\r\n      padding: 24,\r\n    }),\r\n    width: '500px',\r\n    borderRadius: '5px',\r\n    borderWidth: '2px',\r\n    borderColor: theme.palette.secondary.main,\r\n    borderStyle: 'solid',\r\n    background: theme.palette.mainBackground.dark,\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n\r\n  modalItemsMargin: theme.responsiveStyles({\r\n    marginBottom: 24,\r\n  }),\r\n\r\n  isValid: {\r\n    color: theme.palette.success.main,\r\n  },\r\n\r\n  modalButtonsContainer: theme.responsiveStyles({ marginBottom: 34 }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarModal from 'components/StandarModal';\r\n\r\nimport useStyles from './preSurgicalFormModal/useStyles';\r\n\r\nconst PreSurgicalFormModal = ({\r\n  handleSubmittForm,\r\n  setStatesGroup,\r\n  conditionsGroup,\r\n  dynamicText,\r\n  staticTextsGroup,\r\n  classNamesGroup,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const getTextForBothErrors = (text) =>\r\n    `Se han detectado los siguientes estudios requeridos faltantes: \"${text}\". Hay campos requeridos Incompletos. Todos los estudios y campos requeridos deben estar completos antes de guardar el formulario como Completado.`;\r\n\r\n  const getStringToDisplay = ({ conditions, strings }) => {\r\n    const { medicalStudiesRequired, requiredErrorSetted } = conditions;\r\n    const {\r\n      forMedicalStudiesRequiredSetted,\r\n      forRequiredErrorSetted,\r\n      forFormValidated,\r\n      forBothErrorSetted,\r\n    } = strings;\r\n\r\n    const areBothErrorSetted = medicalStudiesRequired && requiredErrorSetted;\r\n    if (areBothErrorSetted) {\r\n      return forBothErrorSetted;\r\n    } else {\r\n      if (medicalStudiesRequired) {\r\n        return forMedicalStudiesRequiredSetted;\r\n      } else if (requiredErrorSetted) {\r\n        return forRequiredErrorSetted;\r\n      } else {\r\n        return forFormValidated;\r\n      }\r\n    }\r\n  };\r\n\r\n  const { setIsValidated, setIsPreviewClicked } = setStatesGroup;\r\n\r\n  const {\r\n    isValidated,\r\n    areMedicalStudiesRequiredErrorSetted,\r\n    isRequiredErrorSetted,\r\n  } = conditionsGroup;\r\n\r\n  const {\r\n    titleIsRequiredErrorSetted,\r\n    titleForAreMedicalStudiesRequiredErrorSetted,\r\n    textForAreMedicalStudiesRequiredErrorSetted,\r\n  } = staticTextsGroup;\r\n\r\n  const { bottomLine, errorSettedBlueText } = classNamesGroup;\r\n  const titleForBothErrorSetted = 'Faltan estudios y campos requeridos.';\r\n  const titleForAllIsValidated = 'Todo esta en orden.';\r\n  const textForBothErrorSetted = getTextForBothErrors(dynamicText);\r\n  const textForIsRequiredErrorSetted =\r\n    'Solo podrá guardar el formulario como incompleto, para resolver complételos según corresponda.';\r\n\r\n  const textForAllIsValidated =\r\n    'Si va a guardar el formulario como Completado aseguresé que todos los datos fueron cargados correctamente, recuerde que los Pre-Quirúrgicos Completados solo podrán ser modificados por usuarios con permisos de Administrador.';\r\n\r\n  const titleToDisplay = getStringToDisplay({\r\n    conditions: {\r\n      medicalStudiesRequired: areMedicalStudiesRequiredErrorSetted,\r\n      requiredErrorSetted: isRequiredErrorSetted,\r\n    },\r\n    strings: {\r\n      forMedicalStudiesRequiredSetted: titleForAreMedicalStudiesRequiredErrorSetted,\r\n      forRequiredErrorSetted: titleIsRequiredErrorSetted,\r\n      forFormValidated: titleForAllIsValidated,\r\n      forBothErrorSetted: titleForBothErrorSetted,\r\n    },\r\n  });\r\n\r\n  const textToDisplay = getStringToDisplay({\r\n    conditions: {\r\n      medicalStudiesRequired: areMedicalStudiesRequiredErrorSetted,\r\n      requiredErrorSetted: isRequiredErrorSetted,\r\n    },\r\n    strings: {\r\n      forMedicalStudiesRequiredSetted: textForAreMedicalStudiesRequiredErrorSetted,\r\n      forRequiredErrorSetted: textForIsRequiredErrorSetted,\r\n      forFormValidated: textForAllIsValidated,\r\n      forBothErrorSetted: textForBothErrorSetted,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StandarModal openState={isValidated}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"center\"\r\n        alignContent=\"flex-start\"\r\n        className={classes.modalChildrenContainer}\r\n      >\r\n        <Typography\r\n          className={clsx(\r\n            classes.modalItemsMargin,\r\n            areMedicalStudiesRequiredErrorSetted || isRequiredErrorSetted\r\n              ? errorSettedBlueText\r\n              : classes.isValid\r\n          )}\r\n          variant=\"h6\"\r\n          align=\"left\"\r\n        >\r\n          {titleToDisplay}\r\n        </Typography>\r\n        <Typography className={classes.modalItemsMargin} align=\"left\">\r\n          {textToDisplay}\r\n        </Typography>\r\n        <Grid container justifyContent=\"flex-start\">\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            className={clsx(bottomLine, classes.modalButtonsContainer)}\r\n          >\r\n            <StandarButton text=\"Incompleto\" onClick={handleSubmittForm('incomplete')} />\r\n            <StandarButton\r\n              text=\"Completado\"\r\n              disabled={areMedicalStudiesRequiredErrorSetted || isRequiredErrorSetted}\r\n              onClick={handleSubmittForm('completed')}\r\n            />\r\n          </Grid>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <StandarButton\r\n              text=\"Cancelar\"\r\n              onClick={() => {\r\n                setIsValidated(false);\r\n                setIsPreviewClicked(false);\r\n              }}\r\n            />\r\n            <StandarButton\r\n              text=\"Previsualizar\"\r\n              onClick={() => {\r\n                setIsPreviewClicked(true);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </StandarModal>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalFormModal;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 12 }),\r\n}));\r\n\r\nexport default useStyles;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\n\r\nimport useStyles from './validationMessage/useStyles';\r\n\r\nconst ValidationMessage = ({ title, text, shouldDisplay, className, headerClassName }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {shouldDisplay && (\r\n        <Grid container direction=\"column\" alignItems=\"flex-start\" className={className}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"left\"\r\n            className={clsx(classes.rowBottomMargin, headerClassName)}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography align=\"left\">{text}</Typography>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ValidationMessage;\r\n","import ValidationMessage from './validationMessagesList/ValidationMessage';\r\n\r\nconst ValidationMessagesList = ({ validationMessagesArr, className }) =>\r\n  validationMessagesArr.map((item) => (\r\n    <ValidationMessage\r\n      title={item.title}\r\n      key={item.title}\r\n      text={item.text}\r\n      shouldDisplay={item.shouldDisplay}\r\n      headerClassName={item.headerClassName}\r\n      className={className}\r\n    />\r\n  ));\r\n\r\nexport default ValidationMessagesList;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: '1',\r\n    width: '96%',\r\n    [theme.breakpoints.up('xs')]: {\r\n      width: '96%',\r\n      marginTop: '24px',\r\n      paddingTop: '24px',\r\n      paddingLeft: '24px',\r\n      paddingRight: '24px',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '96%',\r\n      marginTop: '24px',\r\n      paddingTop: '24px',\r\n      paddingLeft: '24px',\r\n      paddingRight: '24px',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '80%',\r\n      marginTop: '24px',\r\n      paddingTop: '24px',\r\n      paddingLeft: '24px',\r\n      paddingRight: '24px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '70%',\r\n      marginTop: '30px',\r\n      paddingTop: '30px',\r\n      paddingLeft: '30px',\r\n      paddingRight: '30px',\r\n    },\r\n    background: theme.palette.mainBackground.dark,\r\n  },\r\n  rowBottomMargin: theme.responsiveStyles({ marginBottom: 48 }),\r\n  doubleRowBottomMargin: theme.responsiveStyles({ marginBottom: 96 }),\r\n  rightMargin: theme.responsiveStyles({ marginRight: 48 }),\r\n  bottomLine: {\r\n    ...theme.responsiveStyles({ paddingBottom: 34 }),\r\n    boxShadow: '0px 1px 1px rgb(168 184 194 / 68%)',\r\n    width: '100%',\r\n  },\r\n  errorSettedRedText: {\r\n    color: theme.palette.alert.main,\r\n  },\r\n  errorSettedBlueText: {\r\n    color: theme.palette.info.main,\r\n  },\r\n  dateInputLabel: {\r\n    '@global': {\r\n      ' .MuiInputLabel-formControl': {\r\n        position: 'absolute',\r\n        top: '11px',\r\n        right: '50px',\r\n        left: 'unset',\r\n        fontSize: '20px',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\n\r\nimport useStyles from './useStyles';\r\n\r\nconst useForm = () => {\r\n  const preSurgicalDefaultState = {\r\n    currentPatient: {\r\n      lastName: 'Gonzáles',\r\n      firstName: 'Joaquín',\r\n      iDNumber: '32.589.451',\r\n      gender: 'male',\r\n      age: '34',\r\n    },\r\n    headingSection: {\r\n      preSurgicalDiagnostic: '',\r\n      proposedSurgeon: '',\r\n    },\r\n    preSurgicalClinical: {\r\n      cardiovascular: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxHypertension: false,\r\n        checkboxArrhythmias: false,\r\n        checkboxStableAnginaCF: false,\r\n        checkboxUnstableAngina: false,\r\n        checkboxAMIDate: false,\r\n        checkboxValvularHeartDisease: false,\r\n        checkboxDyspnoeaCF: false,\r\n        checkboxheartSurgeryDate: false,\r\n        checkboxPacemaker: false,\r\n        checkboxEdema: false,\r\n        checkboxVaricoseVeins: false,\r\n      },\r\n      respiratory: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxAsthma: false,\r\n        checkboxCOPD: false,\r\n        checkboxSmoking: false,\r\n        checkboxCough: false,\r\n        checkboxExpectoration: false,\r\n        checkboxDyspnoeaCF: false,\r\n      },\r\n      ocular: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxGlaucoma: false,\r\n        checkboxWearingContactLenses: false,\r\n      },\r\n      gastrointestinal: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxAcidSensitiveSyndrome: false,\r\n        checkboxHiatalHerniaReflux: false,\r\n        checkboxOcclusion: false,\r\n        checkboxLiverFailure: false,\r\n        checkboxHepatitis: false,\r\n        checkboxCirrhosis: false,\r\n        checkboxJaundiceCholectosis: false,\r\n      },\r\n      urinary: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxChronicKidneyFailure: false,\r\n        checkboxAcuteRenalFailure: false,\r\n        checkboxDialysis: false,\r\n        checkboxIncontinence: false,\r\n        checkboxDysuriaPolish: false,\r\n      },\r\n      allergies: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxMedicines: false,\r\n      },\r\n      endocrineMetabolic: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxObesity: false,\r\n        checkboxDiabetes: false,\r\n        checkboxHyperthyroidism: false,\r\n        checkboxHypothyroidism: false,\r\n        checkboxAdrenals: false,\r\n        checkboxMalnutrition: false,\r\n        checkboxDehydration: false,\r\n        checkboxHyperthermia: false,\r\n        checkboxAlcoholism: false,\r\n      },\r\n      neuromuscular: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxCVA: false,\r\n        checkboxTIA: false,\r\n        checkboxParesis: false,\r\n        checkboxParaesthesia: false,\r\n        checkboxAphasias: false,\r\n        checkboxSeizures: false,\r\n        checkboxIntracranialHypertension: false,\r\n        checkboxMyopathies: false,\r\n      },\r\n      hematological: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxAnemia: false,\r\n        checkboxCoagulopathies: false,\r\n        checkboxTransfusions: false,\r\n        checkboxJehovahsWitness: false,\r\n      },\r\n      connectiveTissueDiseases: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxSEL: false,\r\n        checkboxRA: false,\r\n        checkboxAntiphospholipidSyndrome: false,\r\n      },\r\n      obstetricGynecologicalHistory: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n        checkboxLMP: false,\r\n        checkboxPregnancies: false,\r\n        checkboxAbortions: false,\r\n        checkboxEclampsia: false,\r\n        checkboxPreeclampsiaOC: false,\r\n      },\r\n      psychiatric: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n      },\r\n      anestheticHistory: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n      },\r\n      others: {\r\n        shouldDisplay: false,\r\n        observations: '',\r\n      },\r\n    },\r\n\r\n    treatments: {\r\n      shouldDisplay: false,\r\n    },\r\n\r\n    physicalExams: {\r\n      cardiacAuscultation: '',\r\n      pulmonaryAuscultation: '',\r\n      spine: '',\r\n      diastolicPressure: '',\r\n      systolicPressure: '',\r\n      pulse: '',\r\n      asaLevel: 1,\r\n      painLevel: 0,\r\n      weight: '',\r\n      height: '',\r\n      vTFactor: 2,\r\n      observations: '',\r\n      bMIndex: '',\r\n      bMI: '',\r\n      bMIC: '',\r\n      tV: '',\r\n      bloodType: '',\r\n      factorRh: '',\r\n    },\r\n\r\n    airwayExams: {\r\n      mouthOpening: '',\r\n      malampati: '',\r\n      thyromentalDistance: '',\r\n      goniomentalDistance: '',\r\n      neckMovement: '',\r\n      teeth: '',\r\n      difficultAirwayForetell: '',\r\n      observations: '',\r\n    },\r\n\r\n    studiesDone: {\r\n      shouldDisplay: false,\r\n    },\r\n\r\n    bottomSection: {\r\n      psychicState: '',\r\n      psychicStateObservation: '',\r\n      anestheticPlan: '',\r\n      anestheticPlanObservation: '',\r\n      bloodSampleRequest: '',\r\n      iCURequest: '',\r\n      interconsultations: '',\r\n      extraObservations: '',\r\n    },\r\n  };\r\n\r\n  //Necessary to the validationMessagesArr\r\n  const classes = useStyles();\r\n  //Initial Global State\r\n  const [initialFormState /*, setInitialFormState*/] = useState(preSurgicalDefaultState);\r\n\r\n  //Form Values Global State\r\n  const [formGlobalState, setFormGlobalState] = useState(preSurgicalDefaultState);\r\n\r\n  const contextObject = useMemo(\r\n    () => ({\r\n      initialState: initialFormState,\r\n      updateGlobalState: setFormGlobalState,\r\n    }),\r\n    [initialFormState]\r\n  );\r\n\r\n  const [dateState, setDateState] = useState(new Date());\r\n\r\n  const [isPreviewClicked, setIsPreviewClicked] = useState(false);\r\n\r\n  const [isRequiredErrorHeaderSection, setIsRequiredErrorHeaderSection] = useState({\r\n    preSurgicalDiagnosticIsRequired: false,\r\n    proposedSurgeonIsRequired: false,\r\n  });\r\n  const [isRequiredErrorFirstSection, setIsRequiredErrorFirstSection] = useState({\r\n    weightIsRequired: false,\r\n    heightIsRequired: false,\r\n  });\r\n  const [isRequiredAirwaySection, setIsRequiredAirwaySection] = useState({\r\n    mouthOpeningIsRequired: false,\r\n    malampatiIsRequired: false,\r\n    thyromentalDistanceIsRequired: false,\r\n    goniomentalDistanceIsRequired: false,\r\n    neckMovementIsRequired: false,\r\n    teethIsRequired: false,\r\n    difficultAirwayForetellIsRequired: false,\r\n  });\r\n  const [isRequiredBottomSection, setIsRequiredBottomSection] = useState({\r\n    anestheticPlanIsRequired: false,\r\n  });\r\n\r\n  const [isRequiredDateAndTime, setIsRequiredDateAndTime] = useState(false);\r\n\r\n  const [isTreatmentsUnresolved, setIsTreatmentsUnresolved] = useState();\r\n  const [isFirstSectionUnresolved, setIsFirstSectionUnresolved] = useState();\r\n  const [isMedicalStudiesUnresolved, setIsMedicalStudiesUnresolved] = useState();\r\n\r\n  const [medicalStudiesRequired, setMedicalStudiesRequired] = useState({});\r\n\r\n  const [isRequiredErrorSetted, setIsRequiredErrorSetted] = useState(false);\r\n  const [isInputOnErrorSetted, setIsInputOnErrorSetted] = useState(false);\r\n  const [isInnerFormUnresolvedSetted, setIsInnerFormUnresolvedSetted] = useState(false);\r\n  const [areMedicalStudiesRequiredErrorSetted, setIsMedicalStudiesRequiredErrorSetted] = useState(\r\n    false\r\n  );\r\n  const [areBothFieldsRequiredBloodPresure, setAreBothFieldsRequiredBloodPresure] = useState(false);\r\n  const [areBothFieldsRequiredBloodType, setAreBothFieldsRequiredBloodType] = useState(false);\r\n\r\n  const [isValidated, setIsValidated] = useState(false);\r\n\r\n  const [formDataWasSended, setFormDataWasSended] = useState(false); //set this after reciving succesed response from the server\r\n  const [formDataWasSendedAsCompleted, setFormDataWasSendedAsCompleted] = useState(false);\r\n\r\n  //Validated form values\r\n  const [preSurgicalFormPDFData, setPreSurgicalFormPDFData] = useState({});\r\n\r\n  let countOfRequiredInputsCompleted = useRef(0);\r\n  let isPreSurgicalDiagnosticInputOnError = useRef(false);\r\n  let isProposedSurgeonInputOnError = useRef(false);\r\n  let isWeightInputOnError = useRef(false);\r\n  let isHeightInputOnError = useRef(false);\r\n  let firstSectionProduct = useRef(false);\r\n  let isDiastolicPressureInputOnError = useRef(false);\r\n  let isSystolicPressureInputOnError = useRef(false);\r\n  let isPulseInputOnError = useRef(false);\r\n  let isFirstSectionUnresolvedRef = useRef(false);\r\n  let isTreatmentsUnresolvedRef = useRef(false);\r\n  let isMedicalStudiesUnresolvedRef = useRef(false);\r\n  let isRequiredErrorSettedRef = useRef(false);\r\n  let isRequiredDateSettedRef = useRef(false);\r\n  let isInputOnErrorSettedRef = useRef(false);\r\n  let isInnerFormUnresolvedSettedRef = useRef(false);\r\n  let areBothFieldsRequiredBloodPresureRef = useRef(false);\r\n  let areBothFieldsRequiredBloodTypeRef = useRef(false);\r\n  let areDoubleFieldsUnresolvedRef = useRef(false);\r\n  let newWindowRef = useRef(null);\r\n  let pDFFileUrlRef = useRef();\r\n  let downloadButtonRef = useRef();\r\n  let maxDateProp = useRef();\r\n\r\n  const headerSectionRef = useMemo(\r\n    () => ({\r\n      isPreSurgicalDiagnosticInputOnError,\r\n      isProposedSurgeonInputOnError,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const physicalExamRef = useMemo(\r\n    () => ({\r\n      isMedicalStudiesUnresolvedRef,\r\n      firstSectionRef: {\r\n        isWeightInputOnError,\r\n        isHeightInputOnError,\r\n        bloodPresureForm: [isDiastolicPressureInputOnError, isSystolicPressureInputOnError],\r\n        isPulseInputOnError,\r\n        firstSectionProduct,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const physicalExamIsUnresolved = useMemo(\r\n    () => ({\r\n      isFirstSectionUnresolved,\r\n      isMedicalStudiesUnresolved,\r\n    }),\r\n    [isFirstSectionUnresolved, isMedicalStudiesUnresolved]\r\n  );\r\n\r\n  const inputsOnErrorRefs = [\r\n    isPreSurgicalDiagnosticInputOnError.current,\r\n    isProposedSurgeonInputOnError.current,\r\n    isWeightInputOnError.current,\r\n    isHeightInputOnError.current,\r\n    isDiastolicPressureInputOnError.current,\r\n    isSystolicPressureInputOnError.current,\r\n    isPulseInputOnError.current,\r\n  ];\r\n\r\n  const physicalExamFormIsRequired = useMemo(\r\n    () => ({\r\n      firstSectionErrorState: {\r\n        isRequiredErrorFirstSectionState: isRequiredErrorFirstSection,\r\n        bloodPresureErrorState: areBothFieldsRequiredBloodPresure,\r\n        bloodTypeErrorState: areBothFieldsRequiredBloodType,\r\n      },\r\n      isRequiredAirwaySectionState: isRequiredAirwaySection,\r\n    }),\r\n    [\r\n      isRequiredErrorFirstSection,\r\n      isRequiredAirwaySection,\r\n      areBothFieldsRequiredBloodPresure,\r\n      areBothFieldsRequiredBloodType,\r\n    ]\r\n  );\r\n\r\n  const getDateAndTimeFormatted = (dateAndTime) => {\r\n    const formattedDateAndTime = `${dateAndTime.getDate()}/${\r\n      dateAndTime.getMonth() + 1\r\n    }/${dateAndTime.getFullYear()} ${dateAndTime.toLocaleString('en-US', {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: false,\r\n    })}`;\r\n    return formattedDateAndTime;\r\n  };\r\n\r\n  const objectCreatorToSubmit = (formState) => {\r\n    const {\r\n      preSurgicalClinical,\r\n      treatments,\r\n      studiesDone,\r\n      physicalExams,\r\n      currentPatient,\r\n      headingSection,\r\n      airwayExams,\r\n      bottomSection,\r\n    } = formState;\r\n\r\n    const {\r\n      psychiatric,\r\n      anestheticHistory,\r\n      others,\r\n      ...pSCFormWithCheckboxesState\r\n    } = preSurgicalClinical;\r\n\r\n    const pSCFormWithOutCheckboxesState = {\r\n      psychiatric,\r\n      anestheticHistory,\r\n      others,\r\n    };\r\n\r\n    const getFormsValuesWithCheckboxes = (state) => {\r\n      const getCheckedCheckboxesFrom = (obj) => {\r\n        let resultingArr = [];\r\n        for (const key in obj) {\r\n          if (obj[key]) {\r\n            resultingArr.push(key);\r\n          }\r\n        }\r\n        return resultingArr;\r\n      };\r\n      let objectToReturn = {};\r\n      const { observations, ...checkboxes } = state;\r\n      const checkedCheckboxesArr = getCheckedCheckboxesFrom(checkboxes);\r\n      const isObservationsInputFilled = observations !== '';\r\n      const isThereCheckedCheckboxes = checkedCheckboxesArr.length !== 0;\r\n      if (isObservationsInputFilled) {\r\n        Object.assign(objectToReturn, { observations });\r\n      }\r\n      if (isThereCheckedCheckboxes) {\r\n        Object.assign(objectToReturn, { conditions: checkedCheckboxesArr });\r\n      }\r\n      return objectToReturn;\r\n    };\r\n\r\n    const iterateOver = (state, objectUpdater) => {\r\n      const objectToReturn = {};\r\n      const assignFalseToCurrent = (key, inObj) => Object.assign(inObj, { [key]: false });\r\n      for (const shallowKey in state) {\r\n        const { shouldDisplay, ...rest } = state[shallowKey];\r\n        if (shouldDisplay) {\r\n          const currentUpdate = objectUpdater(rest);\r\n          const isResultingObjEmpty = Object.keys(currentUpdate).length === 0;\r\n          if (isResultingObjEmpty) {\r\n            assignFalseToCurrent(shallowKey, objectToReturn);\r\n          } else Object.assign(objectToReturn, { [shallowKey]: currentUpdate });\r\n        } else {\r\n          assignFalseToCurrent(shallowKey, objectToReturn);\r\n        }\r\n      }\r\n      return objectToReturn;\r\n    };\r\n\r\n    const getObservations = (state) => {\r\n      let objectToReturn = {};\r\n      const { observations } = state;\r\n      const isObservationsInputFilled = observations !== '';\r\n      if (isObservationsInputFilled) {\r\n        Object.assign(objectToReturn, { observations });\r\n      }\r\n      return objectToReturn;\r\n    };\r\n\r\n    const getArrayFrom = (stateObj) => {\r\n      let arrToReturn = [];\r\n      const { shouldDisplay, ...rest } = stateObj;\r\n      if (shouldDisplay) {\r\n        for (const shallowKey in rest) {\r\n          arrToReturn.push(rest[shallowKey]);\r\n        }\r\n      }\r\n      return arrToReturn;\r\n    };\r\n\r\n    const conditionsWithCheckboxes = iterateOver(\r\n      pSCFormWithCheckboxesState,\r\n      getFormsValuesWithCheckboxes\r\n    );\r\n    const conditionWithOutCheckboxes = iterateOver(pSCFormWithOutCheckboxesState, getObservations);\r\n    const treatmentsArr = getArrayFrom(treatments);\r\n    const medicalStudiesArr = getArrayFrom(studiesDone);\r\n    const date = getDateAndTimeFormatted(dateState);\r\n\r\n    const objToReturn = {\r\n      conditionsWithCheckboxes,\r\n      conditionWithOutCheckboxes,\r\n      treatments: treatmentsArr,\r\n      medicalStudies: medicalStudiesArr,\r\n      currentPatient,\r\n      headingSection,\r\n      physicalExams,\r\n      airwayExams,\r\n      bottomSection,\r\n      date,\r\n    };\r\n    return objToReturn;\r\n  };\r\n\r\n  const getValidationParameter = (state) => {\r\n    const { headingSection, airwayExams, bottomSection } = state;\r\n    return [\r\n      {\r\n        currentValue: headingSection['preSurgicalDiagnostic'],\r\n        currentStateKey: 'preSurgicalDiagnosticIsRequired',\r\n        setState: setIsRequiredErrorHeaderSection,\r\n      },\r\n      {\r\n        currentValue: headingSection['proposedSurgeon'],\r\n        currentStateKey: 'proposedSurgeonIsRequired',\r\n        setState: setIsRequiredErrorHeaderSection,\r\n      },\r\n      {\r\n        currentValue: airwayExams['mouthOpening'],\r\n        currentStateKey: 'mouthOpeningIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n      {\r\n        currentValue: airwayExams['malampati'],\r\n        currentStateKey: 'malampatiIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n      {\r\n        currentValue: airwayExams['thyromentalDistance'],\r\n        currentStateKey: 'thyromentalDistanceIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n\r\n      {\r\n        currentValue: airwayExams['goniomentalDistance'],\r\n        currentStateKey: 'goniomentalDistanceIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n\r\n      {\r\n        currentValue: airwayExams['neckMovement'],\r\n        currentStateKey: 'neckMovementIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n      {\r\n        currentValue: airwayExams['teeth'],\r\n        currentStateKey: 'teethIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n      {\r\n        currentValue: airwayExams['difficultAirwayForetell'],\r\n        currentStateKey: 'difficultAirwayForetellIsRequired',\r\n        setState: setIsRequiredAirwaySection,\r\n      },\r\n      {\r\n        currentValue: bottomSection['anestheticPlan'],\r\n        currentStateKey: 'anestheticPlanIsRequired',\r\n        setState: setIsRequiredBottomSection,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const getValidationParameterForNumberType = (state) => {\r\n    const { physicalExams } = state;\r\n    return [\r\n      {\r\n        currentValue: physicalExams['weight'],\r\n        currentStateKey: 'weightIsRequired',\r\n        setState: setIsRequiredErrorFirstSection,\r\n      },\r\n      {\r\n        currentValue: physicalExams['height'],\r\n        currentStateKey: 'heightIsRequired',\r\n        setState: setIsRequiredErrorFirstSection,\r\n      },\r\n    ];\r\n  };\r\n  const incrementValidatedInputsCount = (countRef) => (countRef.current = countRef.current + 1);\r\n  const manageInputsRequiredError = ({\r\n    shouldSetError,\r\n    currentSetState,\r\n    currentStateKey,\r\n    requiredErrorSettedRef,\r\n    countOfRequiredInputCompletedRef,\r\n  }) => {\r\n    const manageRequiredError = ({ setState, stateKey, ref }) => {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [stateKey]: true,\r\n      }));\r\n      setIsRequiredErrorSetted(true);\r\n      ref.current = true;\r\n    };\r\n\r\n    const manageInputValueValidated = ({ setState, stateKey, ref }) => {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [stateKey]: false,\r\n      }));\r\n      incrementValidatedInputsCount(ref);\r\n    };\r\n    if (shouldSetError) {\r\n      manageRequiredError({\r\n        setState: currentSetState,\r\n        stateKey: currentStateKey,\r\n        ref: requiredErrorSettedRef,\r\n      });\r\n    } else {\r\n      manageInputValueValidated({\r\n        setState: currentSetState,\r\n        stateKey: currentStateKey,\r\n        ref: countOfRequiredInputCompletedRef,\r\n      });\r\n    }\r\n  };\r\n\r\n  const manageInputsOnErrorRef = ({ refsArr, ref }) => {\r\n    for (const item of refsArr) {\r\n      const isCurrentInputOnError = item === true;\r\n      if (isCurrentInputOnError) {\r\n        ref.current = true;\r\n        return setIsInputOnErrorSetted(true);\r\n      }\r\n    }\r\n    ref.current = false;\r\n    return setIsInputOnErrorSetted(false);\r\n  };\r\n\r\n  const manageIsFirstSectionPhysicalExamUnresolvedError = ({\r\n    state,\r\n    firstSectionProductRef,\r\n    firstSectionUnresolvedRef,\r\n    innerFormUnresolvedSettedRef,\r\n  }) => {\r\n    const { bMIndex, tV } = state;\r\n    const firstSectionProductVerification = bMIndex * tV;\r\n\r\n    const areFirstSectionInputValuesOutdated =\r\n      firstSectionProductVerification !== firstSectionProductRef.current;\r\n    const areWeightAndHeightInputsFilled = !Number.isNaN(firstSectionProductRef.current);\r\n    const areFirstSectionValuesNotCalculated = firstSectionProductRef.current === 0;\r\n    const isFirstSectionFormUnresolved =\r\n      areFirstSectionInputValuesOutdated || areFirstSectionValuesNotCalculated;\r\n\r\n    const setError = () => {\r\n      setIsFirstSectionUnresolved(true);\r\n      firstSectionUnresolvedRef.current = true;\r\n      setIsInnerFormUnresolvedSetted(true);\r\n      innerFormUnresolvedSettedRef.current = true;\r\n    };\r\n    const removeError = () => {\r\n      setIsFirstSectionUnresolved(false);\r\n      firstSectionUnresolvedRef.current = false;\r\n    };\r\n\r\n    if (areWeightAndHeightInputsFilled) {\r\n      if (isFirstSectionFormUnresolved) {\r\n        setError();\r\n      } else {\r\n        removeError();\r\n      }\r\n    }\r\n  };\r\n\r\n  const manageIsMedicalStudiesFormUnresolvedError = ({\r\n    innerFormUnresolvedSettedRef,\r\n    medicalStudiesUnresolvedRef,\r\n  }) => {\r\n    const setError = () => {\r\n      setIsMedicalStudiesUnresolved(true);\r\n      setIsInnerFormUnresolvedSetted(true);\r\n      innerFormUnresolvedSettedRef.current = true;\r\n    };\r\n    const removeError = () => setIsMedicalStudiesUnresolved(false);\r\n    if (medicalStudiesUnresolvedRef.current) {\r\n      setError();\r\n    } else {\r\n      removeError();\r\n    }\r\n  };\r\n\r\n  const manageIsTreatmentsFormUnresolvedError = ({\r\n    treatmentsUnresolvedRef,\r\n    innerFormUnresolvedSettedRef,\r\n  }) => {\r\n    const setError = () => {\r\n      setIsTreatmentsUnresolved(true);\r\n      setIsInnerFormUnresolvedSetted(true);\r\n      innerFormUnresolvedSettedRef.current = true;\r\n    };\r\n    const removeError = () => setIsTreatmentsUnresolved(false);\r\n    if (treatmentsUnresolvedRef.current) {\r\n      setError();\r\n    } else {\r\n      removeError();\r\n    }\r\n  };\r\n\r\n  const manageMedicalStudiesRequired = (state) => {\r\n    const getCompletedMedicalStudies = (completedMedicalStudies) => {\r\n      const array = [];\r\n      for (const key in completedMedicalStudies) {\r\n        array.push(key);\r\n      }\r\n      return array;\r\n    };\r\n    const getCompleteRequiredMedicalStudies = (completedStudies) =>\r\n      completedStudies.filter(\r\n        (item) =>\r\n          item === 'electrocardiogram' ||\r\n          item === 'hematocrit' ||\r\n          item === 'hemoglobin' ||\r\n          item === 'prothrombinTime' ||\r\n          item === 'kAPT'\r\n      );\r\n    const getRequiredStudiesMissing = ({ requiredStudies, completedRequiredStudiesArr }) => {\r\n      const arr = requiredStudies.filter((study) => {\r\n        for (const completedStudy of completedRequiredStudiesArr) {\r\n          const itMatches = study['name'] === completedStudy;\r\n          if (itMatches) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n\r\n      return arr;\r\n    };\r\n    const getLabelsOfRequiredStudiesMissing = (missingStudies) => {\r\n      const arr = [];\r\n      for (const obj of missingStudies) {\r\n        const label = obj['label'];\r\n        arr.push(label);\r\n      }\r\n      return arr;\r\n    };\r\n    const requiredStudiesArr = [\r\n      { name: 'electrocardiogram', label: 'Electrocardiográma' },\r\n      { name: 'hematocrit', label: 'Hematocritos' },\r\n      { name: 'hemoglobin', label: 'Hemoglobina' },\r\n      { name: 'prothrombinTime', label: 'Tp' },\r\n      { name: 'kAPT', label: 'Kptt' },\r\n    ];\r\n    const completedStudiesArr = getCompletedMedicalStudies(state);\r\n    const completedRequiredStudies = getCompleteRequiredMedicalStudies(completedStudiesArr);\r\n    const requiredStudiesMissing = getRequiredStudiesMissing({\r\n      requiredStudies: requiredStudiesArr,\r\n      completedRequiredStudiesArr: completedRequiredStudies,\r\n    });\r\n    const labelsOfRequiredStudiesMissing = getLabelsOfRequiredStudiesMissing(\r\n      requiredStudiesMissing\r\n    );\r\n    const stringToRetur = labelsOfRequiredStudiesMissing.join('-');\r\n\r\n    setMedicalStudiesRequired(stringToRetur);\r\n    setIsMedicalStudiesRequiredErrorSetted(() => (stringToRetur === '' ? false : true));\r\n  };\r\n\r\n  const manageDoubleFieldsValidation = ({ state, refs }) => {\r\n    const manageAreBothDoubleFieldsCompleted = ({\r\n      firstValue,\r\n      secondValue,\r\n      bothFieldsRequiredRef,\r\n      bothFieldsRequiredStateUpdater,\r\n    }) => {\r\n      const isOnlyOneFieldCompleted =\r\n        (firstValue !== '' && secondValue === '') || (firstValue === '' && secondValue !== '');\r\n      if (isOnlyOneFieldCompleted) {\r\n        bothFieldsRequiredRef.current = true;\r\n        bothFieldsRequiredStateUpdater(true);\r\n      } else {\r\n        bothFieldsRequiredRef.current = false;\r\n        bothFieldsRequiredStateUpdater(false);\r\n      }\r\n    };\r\n    const updateDoubleFieldsUnresolvedRef = ({\r\n      bloodPresureRef,\r\n      bloodTypeRef,\r\n      doubleFieldsUnresolvedRef,\r\n    }) => {\r\n      if (bloodPresureRef.current === true || bloodTypeRef.current === true) {\r\n        doubleFieldsUnresolvedRef.current = true;\r\n      } else {\r\n        doubleFieldsUnresolvedRef.current = false;\r\n      }\r\n    };\r\n\r\n    const { bloodPresure, bloodType, doubleFieldsUnresolved } = refs;\r\n    const diastolicPressureVal = state.diastolicPressure;\r\n    const systolicPressureVal = state.systolicPressure;\r\n    const bloodTypeVal = state.bloodType;\r\n    const factorRhVal = state.factorRh;\r\n\r\n    manageAreBothDoubleFieldsCompleted({\r\n      firstValue: diastolicPressureVal,\r\n      secondValue: systolicPressureVal,\r\n      bothFieldsRequiredRef: bloodPresure,\r\n      bothFieldsRequiredStateUpdater: setAreBothFieldsRequiredBloodPresure,\r\n    });\r\n    manageAreBothDoubleFieldsCompleted({\r\n      firstValue: bloodTypeVal,\r\n      secondValue: factorRhVal,\r\n      bothFieldsRequiredRef: bloodType,\r\n      bothFieldsRequiredStateUpdater: setAreBothFieldsRequiredBloodType,\r\n    });\r\n    updateDoubleFieldsUnresolvedRef({\r\n      bloodPresureRef: bloodPresure,\r\n      bloodTypeRef: bloodType,\r\n      doubleFieldsUnresolvedRef: doubleFieldsUnresolved,\r\n    });\r\n  };\r\n\r\n  const manageDateRequiredError = (refs) => {\r\n    const setError = (refObj) => {\r\n      const { isRequiredDateSetted, requiredErrorSetted } = refObj;\r\n      isRequiredDateSetted.current = true;\r\n      setIsRequiredDateAndTime(true);\r\n      setIsRequiredErrorSetted(true);\r\n      requiredErrorSetted.current = true;\r\n    };\r\n    const manageRequiredDateValidated = (refObj) => {\r\n      const { requiredInputsCompletedRef, isRequiredDateSetted } = refObj;\r\n      isRequiredDateSetted.current = false;\r\n      setIsRequiredDateAndTime(false);\r\n      incrementValidatedInputsCount(requiredInputsCompletedRef);\r\n    };\r\n\r\n    const isDateInvalid = dateState === null || dateState == 'Invalid Date';\r\n\r\n    if (isDateInvalid) {\r\n      setError(refs);\r\n    } else {\r\n      manageRequiredDateValidated(refs);\r\n    }\r\n  };\r\n\r\n  const manageAllRequiredInputsCompleted = ({\r\n    requiredInputsCompletedRef,\r\n    requiredErrorSettedRef,\r\n  }) => {\r\n    const removeRequiredError = (ref) => {\r\n      setIsRequiredErrorSetted(false);\r\n      ref.current = false;\r\n    };\r\n    const resetCount = (ref) => (ref.current = 0);\r\n\r\n    const areAllRequiredInputsCompleted = requiredInputsCompletedRef.current === 13;\r\n\r\n    if (areAllRequiredInputsCompleted) {\r\n      removeRequiredError(requiredErrorSettedRef);\r\n    }\r\n    resetCount(requiredInputsCompletedRef);\r\n  };\r\n\r\n  const validateFormOnClickFor = ({ state, refs }) => () => {\r\n    const { physicalExams, studiesDone } = state;\r\n    const {\r\n      requiredErrorSettedRef,\r\n      countOfRequiredInputCompletedRef,\r\n      firstSectionProductRef,\r\n      firstSectionUnresolvedRef,\r\n      innerFormUnresolvedSettedRef,\r\n      treatmentsUnresolvedRef,\r\n      medicalStudiesUnresolvedRef,\r\n      requiredDateSettedRef,\r\n      bloodPresure,\r\n      bloodType,\r\n      doubleFieldsUnresolved,\r\n    } = refs;\r\n    getValidationParameter(state).forEach((item) => {\r\n      const shouldSetError = item.currentValue === '';\r\n      manageInputsRequiredError({\r\n        shouldSetError,\r\n        currentSetState: item.setState,\r\n        currentStateKey: item.currentStateKey,\r\n        requiredErrorSettedRef,\r\n        countOfRequiredInputCompletedRef,\r\n      });\r\n    });\r\n    getValidationParameterForNumberType(state).forEach((item) => {\r\n      const shouldSetError = item.currentValue === '' || item.currentValue == 0;\r\n      manageInputsRequiredError({\r\n        shouldSetError,\r\n        currentSetState: item.setState,\r\n        currentStateKey: item.currentStateKey,\r\n        requiredErrorSettedRef,\r\n        countOfRequiredInputCompletedRef,\r\n      });\r\n    });\r\n\r\n    manageDateRequiredError({\r\n      isRequiredDateSetted: requiredDateSettedRef,\r\n      requiredErrorSetted: requiredErrorSettedRef,\r\n      requiredInputsCompletedRef: countOfRequiredInputCompletedRef,\r\n    });\r\n\r\n    manageAllRequiredInputsCompleted({\r\n      requiredInputsCompletedRef: countOfRequiredInputCompletedRef,\r\n      requiredErrorSettedRef,\r\n    });\r\n\r\n    manageInputsOnErrorRef({\r\n      refsArr: inputsOnErrorRefs,\r\n      ref: isInputOnErrorSettedRef,\r\n    });\r\n    manageIsFirstSectionPhysicalExamUnresolvedError({\r\n      state: physicalExams,\r\n      firstSectionProductRef,\r\n      firstSectionUnresolvedRef,\r\n      innerFormUnresolvedSettedRef,\r\n    });\r\n    manageIsMedicalStudiesFormUnresolvedError({\r\n      innerFormUnresolvedSettedRef,\r\n      medicalStudiesUnresolvedRef,\r\n    });\r\n    manageIsTreatmentsFormUnresolvedError({\r\n      treatmentsUnresolvedRef,\r\n      innerFormUnresolvedSettedRef,\r\n    });\r\n    manageDoubleFieldsValidation({\r\n      state: physicalExams,\r\n      refs: {\r\n        bloodPresure,\r\n        bloodType,\r\n        doubleFieldsUnresolved,\r\n      },\r\n    });\r\n    if (\r\n      firstSectionUnresolvedRef.current === false &&\r\n      treatmentsUnresolvedRef.current === false &&\r\n      medicalStudiesUnresolvedRef.current === false\r\n    ) {\r\n      setIsInnerFormUnresolvedSetted(false);\r\n      innerFormUnresolvedSettedRef.current = false;\r\n    }\r\n    manageMedicalStudiesRequired(studiesDone);\r\n    if (\r\n      isInputOnErrorSettedRef.current === false &&\r\n      innerFormUnresolvedSettedRef.current === false &&\r\n      isRequiredDateSettedRef.current === false &&\r\n      areDoubleFieldsUnresolvedRef.current === false\r\n    ) {\r\n      setIsValidated(true);\r\n      setFormGlobalState((prevState) => ({\r\n        ...prevState,\r\n        date: getDateAndTimeFormatted(dateState),\r\n      }));\r\n      setPreSurgicalFormPDFData(objectCreatorToSubmit(formGlobalState));\r\n    }\r\n  };\r\n\r\n  const validateFormOnClick = validateFormOnClickFor({\r\n    state: formGlobalState,\r\n    refs: {\r\n      requiredErrorSettedRef: isRequiredErrorSettedRef,\r\n      countOfRequiredInputCompletedRef: countOfRequiredInputsCompleted,\r\n      firstSectionProductRef: firstSectionProduct,\r\n      firstSectionUnresolvedRef: isFirstSectionUnresolvedRef,\r\n      innerFormUnresolvedSettedRef: isInnerFormUnresolvedSettedRef,\r\n      treatmentsUnresolvedRef: isTreatmentsUnresolvedRef,\r\n      medicalStudiesUnresolvedRef: isMedicalStudiesUnresolvedRef,\r\n      bloodPresure: areBothFieldsRequiredBloodPresureRef,\r\n      bloodType: areBothFieldsRequiredBloodTypeRef,\r\n      doubleFieldsUnresolved: areDoubleFieldsUnresolvedRef,\r\n      requiredDateSettedRef: isRequiredDateSettedRef,\r\n    },\r\n  });\r\n\r\n  const getTextForMedicalStudiesRequiredError = (dynamicText) =>\r\n    `Estudios faltantes: \"${dynamicText}\". Se requiere que todos los estudios requeridos esten cargados antes de guardar el formulario como Completado.`;\r\n\r\n  const titleIsRequiredErrorSetted = 'Campos requeridos incompletos.';\r\n  const titleForAreMedicalStudiesRequiredErrorSetted = 'Faltan estudios requeridos.';\r\n  const textForAreMedicalStudiesRequiredErrorSetted = getTextForMedicalStudiesRequiredError(\r\n    medicalStudiesRequired\r\n  );\r\n\r\n  const validationMessagesArr = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Fecha y hora requerida.',\r\n        text: 'Debe ingresar un valor válido antes de continuar.',\r\n        shouldDisplay: isRequiredDateAndTime,\r\n        headerClassName: classes.errorSettedRedText,\r\n      },\r\n      {\r\n        title: 'Campos dobles incompletos.',\r\n        text:\r\n          'Se han detectado campos dobles con solo una entrada completa, no son campos requeridos pero si ingreso un valor ambos campos deben estar completos para poder continuar.',\r\n        shouldDisplay: areBothFieldsRequiredBloodPresure || areBothFieldsRequiredBloodType,\r\n        headerClassName: classes.errorSettedRedText,\r\n      },\r\n      {\r\n        title: titleIsRequiredErrorSetted,\r\n        text:\r\n          'Solo podrá guardar el formulario como incompleto, para resolver complételos según corresponda, luego regrese aquí y vuelva a intentar la validación.',\r\n        shouldDisplay: isRequiredErrorSetted,\r\n        headerClassName: classes.errorSettedRedText,\r\n      },\r\n      {\r\n        title: 'Valores no válidos.',\r\n        text:\r\n          'Revise el formulario y corríjalos según corresponda, luego regrese aquí y vuelva a intertar la validación.',\r\n        shouldDisplay: isInputOnErrorSetted,\r\n        headerClassName: classes.errorSettedRedText,\r\n      },\r\n      {\r\n        title: 'Formularios no resueltos.',\r\n        text:\r\n          'Se han detectado campos con datos sin agregar, este error se puede presentar en los formularios de Tratamientos, Estudios, o en la subsección de Exámen Físico para calcular IMC, PI, PIC y VT cuando los mismos no han sido resueltos por el usuario, resuelva lo solicitado en el formulario corespondiente luego regrese aqui y vuelva a intentar la validación.',\r\n        shouldDisplay: isInnerFormUnresolvedSetted,\r\n        headerClassName: classes.errorSettedRedText,\r\n      },\r\n      {\r\n        title: titleForAreMedicalStudiesRequiredErrorSetted,\r\n        text: textForAreMedicalStudiesRequiredErrorSetted,\r\n        shouldDisplay: areMedicalStudiesRequiredErrorSetted,\r\n        headerClassName: classes.errorSettedBlueText,\r\n      },\r\n    ],\r\n    [\r\n      isRequiredDateAndTime,\r\n      classes.errorSettedRedText,\r\n      classes.errorSettedBlueText,\r\n      areBothFieldsRequiredBloodPresure,\r\n      areBothFieldsRequiredBloodType,\r\n      titleForAreMedicalStudiesRequiredErrorSetted,\r\n      textForAreMedicalStudiesRequiredErrorSetted,\r\n      areMedicalStudiesRequiredErrorSetted,\r\n      isInnerFormUnresolvedSetted,\r\n      isInputOnErrorSetted,\r\n      isRequiredErrorSetted,\r\n    ]\r\n  );\r\n\r\n  const handleSubmittForm = (formStatus) => () => {\r\n    const shouldSubmittAsCompleted = formStatus === 'completed';\r\n    setPreSurgicalFormPDFData((prevState) => ({\r\n      ...prevState,\r\n      status: formStatus,\r\n    }));\r\n    setFormDataWasSended(true);\r\n    setIsValidated(false);\r\n    if (shouldSubmittAsCompleted) {\r\n      setFormDataWasSendedAsCompleted(true);\r\n    }\r\n  };\r\n\r\n  const handleDateTimeDebounce = useDebouncedCallback(setDateState, 250, { trailing: true });\r\n\r\n  const setStatesGroupForModal = useMemo(\r\n    () => ({\r\n      setIsValidated,\r\n      setIsPreviewClicked,\r\n    }),\r\n    [setIsValidated, setIsPreviewClicked]\r\n  );\r\n\r\n  const conditionsGroupForModal = useMemo(\r\n    () => ({\r\n      isValidated,\r\n      areMedicalStudiesRequiredErrorSetted,\r\n      isRequiredErrorSetted,\r\n    }),\r\n    [isValidated, areMedicalStudiesRequiredErrorSetted, isRequiredErrorSetted]\r\n  );\r\n\r\n  const staticTextsGroup = useMemo(\r\n    () => ({\r\n      titleIsRequiredErrorSetted,\r\n      titleForAreMedicalStudiesRequiredErrorSetted,\r\n      textForAreMedicalStudiesRequiredErrorSetted,\r\n    }),\r\n    [\r\n      titleIsRequiredErrorSetted,\r\n      titleForAreMedicalStudiesRequiredErrorSetted,\r\n      textForAreMedicalStudiesRequiredErrorSetted,\r\n    ]\r\n  );\r\n\r\n  const classNamesGroup = useMemo(\r\n    () => ({\r\n      errorSettedBlueText: classes.errorSettedBlueText,\r\n      bottomLine: classes.bottomLine,\r\n    }),\r\n    [classes.errorSettedBlueText, classes.bottomLine]\r\n  );\r\n\r\n  const refsGroupForPDFMaker = useMemo(\r\n    () => ({\r\n      pDFFileUrlRef,\r\n      newWindowRef,\r\n    }),\r\n    [pDFFileUrlRef, newWindowRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setFormGlobalState(initialFormState);\r\n  }, [initialFormState]);\r\n\r\n  return [\r\n    {\r\n      contextObject,\r\n      isPreviewClicked,\r\n      isRequiredErrorHeaderSection,\r\n      isRequiredBottomSection,\r\n      isTreatmentsUnresolved,\r\n      formDataWasSended,\r\n      formDataWasSendedAsCompleted,\r\n      preSurgicalFormPDFData,\r\n      downloadButtonRef,\r\n      headerSectionRef,\r\n      physicalExamRef,\r\n      physicalExamIsUnresolved,\r\n      physicalExamFormIsRequired,\r\n      validationMessagesArr,\r\n      conditionsGroupForModal,\r\n      staticTextsGroup,\r\n      classNamesGroup,\r\n      refsGroupForPDFMaker,\r\n      maxDateProp,\r\n      dateState,\r\n      isRequiredDateAndTime,\r\n      medicalStudiesRequired,\r\n      isTreatmentsUnresolvedRef,\r\n      currentPatient: formGlobalState.currentPatient,\r\n      pDFFileUrlRef,\r\n    },\r\n    {\r\n      validateFormOnClick,\r\n      handleSubmittForm,\r\n      handleDateTimeDebounce,\r\n      setStatesGroupForModal,\r\n      setIsPreviewClicked,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport PDFMaker from 'PDF/PDFMaker';\r\nimport clsx from 'clsx';\r\nimport StandarButton from 'components/StandarButton';\r\nimport StandarDateInput from 'components/StandarDateInput';\r\nimport { PreSurgical } from 'context/PreSurgical';\r\n\r\nimport BottomSection from './preSurgicalForm/BottomSection';\r\nimport HeaderSectionPS from './preSurgicalForm/HeaderSectionPS';\r\nimport PhysicalExamForm from './preSurgicalForm/PhysicalExamForm';\r\nimport PresurgicalClinicalForm from './preSurgicalForm/PreSurgicalClinicalForm';\r\nimport PreSurgicalFormModal from './preSurgicalForm/PreSurgicalFormModal';\r\nimport ValidationMessagesList from './preSurgicalForm/ValidationMessagesList';\r\nimport useForm from './preSurgicalForm/useForm';\r\nimport useStyles from './preSurgicalForm/useStyles';\r\n//\r\n//TODO if the user exit this page without saving the form show modal\r\n/*NOTE: with server request in case of a loaded patient with its PreSurgical form incomplete, the server should return a\r\nstate with the current data of the form that will be pass as an inicialized state*/\r\n\r\n//TAKE INTO ACCOUNT having shouldDisplay here it will be useful for the cases where\r\n//there is a semi completed preSurgical form returned by the server, so, for the\r\n//fields where there is selected data, those field must be rendered open.\r\nconst PreSurgicalForm = () => {\r\n  const classes = useStyles();\r\n  const [\r\n    {\r\n      contextObject,\r\n      isPreviewClicked,\r\n      isRequiredErrorHeaderSection,\r\n      isRequiredBottomSection,\r\n      isTreatmentsUnresolved,\r\n      formDataWasSended,\r\n      formDataWasSendedAsCompleted,\r\n      preSurgicalFormPDFData,\r\n      downloadButtonRef,\r\n      headerSectionRef,\r\n      physicalExamRef,\r\n      physicalExamIsUnresolved,\r\n      physicalExamFormIsRequired,\r\n      validationMessagesArr,\r\n      conditionsGroupForModal,\r\n      staticTextsGroup,\r\n      classNamesGroup,\r\n      refsGroupForPDFMaker,\r\n      maxDateProp,\r\n      dateState,\r\n      isRequiredDateAndTime,\r\n      medicalStudiesRequired,\r\n      isTreatmentsUnresolvedRef,\r\n      currentPatient,\r\n      pDFFileUrlRef,\r\n    },\r\n    {\r\n      validateFormOnClick,\r\n      handleSubmittForm,\r\n      handleDateTimeDebounce,\r\n      setStatesGroupForModal,\r\n      setIsPreviewClicked,\r\n    },\r\n  ] = useForm();\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justifyContent=\"flex-start\" className={classes.root}>\r\n      <PreSurgicalFormModal\r\n        handleSubmittForm={handleSubmittForm}\r\n        setStatesGroup={setStatesGroupForModal}\r\n        conditionsGroup={conditionsGroupForModal}\r\n        dynamicText={medicalStudiesRequired}\r\n        staticTextsGroup={staticTextsGroup}\r\n        classNamesGroup={classNamesGroup}\r\n      />\r\n      <PreSurgical.Provider value={contextObject}>\r\n        <HeaderSectionPS\r\n          className={classes.rowBottomMargin}\r\n          isRequiredError={isRequiredErrorHeaderSection}\r\n          ref={headerSectionRef}\r\n        />\r\n        <PresurgicalClinicalForm\r\n          className={classes.rowBottomMargin}\r\n          isTreatmentsUnresolved={isTreatmentsUnresolved}\r\n          ref={isTreatmentsUnresolvedRef}\r\n        />\r\n        <PhysicalExamForm\r\n          className={classes.rowBottomMargin}\r\n          isRequiredError={physicalExamFormIsRequired}\r\n          ref={physicalExamRef}\r\n          isUnresolved={physicalExamIsUnresolved}\r\n        />\r\n        <BottomSection\r\n          className={classes.doubleRowBottomMargin}\r\n          isRequiredError={isRequiredBottomSection}\r\n        />\r\n      </PreSurgical.Provider>\r\n      <Grid container direction=\"column\" alignItems=\"flex-start\">\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          className={clsx(classes.rowBottomMargin, classes.bottomLine)}\r\n          wrap=\"nowrap\"\r\n        >\r\n          <StandarButton\r\n            text=\"Descargar PDF\"\r\n            download={`Ficha Pre-Quirurgica_${currentPatient.lastName} ${\r\n              currentPatient.firstName\r\n            }_${preSurgicalFormPDFData ? preSurgicalFormPDFData.date : ''}`}\r\n            href={'default'}\r\n            disabled={!formDataWasSended}\r\n            onClick={() => {\r\n              downloadButtonRef.current.setAttribute('href', pDFFileUrlRef.current);\r\n              return true;\r\n            }}\r\n            ref={(e) => (downloadButtonRef.current = e)}\r\n          />\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <StandarDateInput\r\n              label={\r\n                dateState != 'Invalid Date' && dateState !== null\r\n                  ? dateState\r\n                      .toLocaleString('en-US', { hour: 'numeric', hour12: true })\r\n                      .match(/(AM)|(PM)/)[0]\r\n                  : ''\r\n              }\r\n              format=\"dd/MM/yyyy  hh:mm\"\r\n              value={dateState}\r\n              onChange={handleDateTimeDebounce}\r\n              maxDate={maxDateProp.current}\r\n              maxDateMessage=\"La fecha no puede ser mayor a la actual\"\r\n              isRequiredError={isRequiredDateAndTime}\r\n              className={clsx(classes.rightMargin, classes.dateInputLabel)}\r\n            />\r\n            <StandarButton\r\n              text=\"Validar\"\r\n              onClick={validateFormOnClick}\r\n              disabled={formDataWasSendedAsCompleted}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <ValidationMessagesList\r\n          validationMessagesArr={validationMessagesArr}\r\n          className={classes.rowBottomMargin}\r\n        />\r\n        <PDFMaker\r\n          data={preSurgicalFormPDFData}\r\n          renderInWindowSetState={setIsPreviewClicked}\r\n          renderInWindowState={isPreviewClicked}\r\n          ref={refsGroupForPDFMaker}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PreSurgicalForm;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { es } from 'date-fns/locale';\r\n\r\nimport Footer from './agenda/Footer';\r\nimport NavBar from './agenda/NavBar';\r\nimport PreSurgicalForm from './agenda/PreSurgicalForm';\r\n//import ItemsList from '../../Pages/Agenda/ItemsList';\r\n//import PatientForm from './Forms/PatientForm';\r\n\r\n//PreSurgical bySearch\r\n/*\r\nconst case_1PS = {\r\n  '25/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaaa',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '23:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: ['Radiografía torax', 'ECG'],\r\n      doctorInitials: 'JC',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n\r\n  '11/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaab',\r\n      isPreSurgicalDone: false,\r\n      registeredSchedule: '23:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'JC',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n\r\n  '08/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaab',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '08:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'VH',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: true,\r\n      '19:00': {\r\n        id: 'procedureDataaaa1',\r\n        procedure: 'Cirugía_2',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '25 / 02 / 2021 - 19:00 Hs',\r\n        endDateAndTime: '25 / 02 / 2021 - 23:05 Hs',\r\n      },\r\n      '13:00': {\r\n        id: 'procedureDataaaa2',\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '25 / 02 / 2021 - 13:00 Hs',\r\n        endDateAndTime: '25 / 02 / 2021 - 16:05 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '05/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaad',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '03:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'JC',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: true,\r\n      '8:30': {\r\n        id: 'procedureDataaad',\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '07 / 02 / 2021 - 08:30 Hs',\r\n        endDateAndTime: '07 / 02 / 2021 - 11:00 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '04/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaae',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '03:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'JC',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: true,\r\n      '19:30': {\r\n        id: 'procedureDataaae',\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'RB',\r\n        startDateAndTime: '08 / 02 / 2021 - 19:30 Hs',\r\n        endDateAndTime: '08 / 02 / 2021 - 23:00 Hs',\r\n      },\r\n    },\r\n  },\r\n};*/\r\n\r\n//PreSurgical byDate\r\n/*\r\nconst case_2PS = {\r\n  '20:00': {\r\n    personalData: {\r\n      patientLastName: 'Rizzo',\r\n      patientFirstName: 'Marcos Emanuel',\r\n      patientIdentityNumber: '29.548.356',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaah',\r\n      isPreSurgicalDone: false,\r\n      registeredSchedule: '20:00',\r\n      asaValue: 'iii',\r\n      isAirwayCompromised: true,\r\n      allergies: 'incomplete',\r\n      pendingStudies: ['Radiografía torax', 'ECG'],\r\n      doctorInitials: 'FP',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaah',\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n  '15:55': {\r\n    personalData: {\r\n      patientLastName: 'Cole',\r\n      patientFirstName: 'Matías',\r\n      patientIdentityNumber: '30.254.896',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaai',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '15:55',\r\n      asaValue: 'iv',\r\n      isAirwayCompromised: false,\r\n      allergies: 'doesNotHave',\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'VH',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaai',\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n  '12:11': {\r\n    personalData: {\r\n      patientLastName: 'Pérez',\r\n      patientFirstName: 'Fiama Sofía',\r\n      patientIdentityNumber: '36.325.789',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaaj',\r\n      isPreSurgicalDone: false,\r\n      registeredSchedule: '12:11',\r\n      asaValue: 'v',\r\n      isAirwayCompromised: false,\r\n      allergies: 'doesNotHave',\r\n      pendingStudies: ['Radiografía torax'],\r\n      doctorInitials: 'VH',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaaj',\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n  '08:35': {\r\n    personalData: {\r\n      patientLastName: 'Ramirez',\r\n      patientFirstName: 'Fernando',\r\n      patientIdentityNumber: '32.114.785',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaak',\r\n      isPreSurgicalDone: false,\r\n      registeredSchedule: '08:35',\r\n      asaValue: 'vi',\r\n      isAirwayCompromised: false,\r\n      allergies: ['Insulina'],\r\n      pendingStudies: ['Radiografía torax'],\r\n      doctorInitials: 'VH',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaak',\r\n      isProcedureDone: false,\r\n    },\r\n  },\r\n  '03:35': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    preSurgicalData: {\r\n      id: 'preSurgicalaal',\r\n      isPreSurgicalDone: true,\r\n      registeredSchedule: '03:35',\r\n      asaValue: 'i',\r\n      isAirwayCompromised: true,\r\n      allergies: ['Ciprofloxacina', 'Ibuprofeno', 'Insulina', 'Sulfamidas'],\r\n      pendingStudies: 'doesNotHave',\r\n      doctorInitials: 'JC',\r\n    },\r\n    procedureData: {\r\n      isProcedureDone: true,\r\n      '19:30': {\r\n        id: 'procedureDataaal',\r\n        procedure: 'Cirugía_2',\r\n        doctorInitials: 'RB',\r\n        startDateAndTime: '08 / 02 / 2021 - 19:30 Hs',\r\n        endDateAndTime: '08 / 02 / 2021 - 23:00 Hs',\r\n      },\r\n      '13:30': {\r\n        id: 'procedureDataaal',\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'RB',\r\n        startDateAndTime: '08 / 02 / 2021 - 13:30 Hs',\r\n        endDateAndTime: '08 / 02 / 2021 - 17:00 Hs',\r\n      },\r\n    },\r\n  },\r\n};*/\r\n\r\n//Procedure bySearch\r\n/*\r\nconst case_1P = {\r\n  '25/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      '19:00': {\r\n        id: 'procedureDataaaa1',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '25 / 02 / 2021 - 19:00 Hs',\r\n        endDateAndTime: '25 / 02 / 2021 - 23:05 Hs',\r\n      },\r\n      '13:00': {\r\n        id: 'procedureDataaaa2',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_2',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '25 / 02 / 2021 - 13:00 Hs',\r\n        endDateAndTime: '25 / 02 / 2021 - 16:05 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '11/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      '12:00': {\r\n        id: 'procedureDataaab',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '11 / 02 / 2021 - 12:00 Hs',\r\n        endDateAndTime: '11 / 02 / 2021 - 17:05 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '08/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      '13:41': {\r\n        id: 'procedureDataaac',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '08 / 02 / 2021 - 13:41 Hs',\r\n        endDateAndTime: '08 / 02 / 2021 - 16:05 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '05/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      '08:30': {\r\n        id: 'procedureDataaad',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'JC',\r\n        startDateAndTime: '05 / 02 / 2021 - 08:30 Hs',\r\n        endDateAndTime: '05 / 02 / 2021 - 11:00 Hs',\r\n      },\r\n    },\r\n  },\r\n\r\n  '04/02/2021': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      '19:30': {\r\n        id: 'procedureDataaae',\r\n        isProcedureDone: true,\r\n        procedure: 'Cirugía_1',\r\n        doctorInitials: 'RB',\r\n        startDateAndTime: '04 / 02 / 2021 - 19:30 Hs',\r\n        endDateAndTime: '04 / 02 / 2021 - 23:00 Hs',\r\n      },\r\n    },\r\n  },\r\n};*/\r\n\r\n//Procedure byDate\r\n/*\r\nconst case_2P = {\r\n  '20:00': {\r\n    personalData: {\r\n      patientLastName: 'Rizzo',\r\n      patientFirstName: 'Marcos Emanuel',\r\n      patientIdentityNumber: '29.548.356',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaaa1',\r\n      isProcedureDone: false,\r\n      procedure: 'Cirugía_1',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 20:00 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 23:05 Hs',\r\n    },\r\n  },\r\n\r\n  '17:00': {\r\n    personalData: {\r\n      patientLastName: 'Rizzo',\r\n      patientFirstName: 'Marcos Emanuel',\r\n      patientIdentityNumber: '29.548.356',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaaa2',\r\n      isProcedureDone: false,\r\n      procedure: 'Cirugía_2',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 17:00 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 19:05 Hs',\r\n    },\r\n  },\r\n\r\n  '15:55': {\r\n    personalData: {\r\n      patientLastName: 'Cole',\r\n      patientFirstName: 'Matías',\r\n      patientIdentityNumber: '30.254.896',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaab',\r\n      isProcedureDone: false,\r\n      procedure: 'Cirugía_1',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 15:55 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 17:05 Hs',\r\n    },\r\n  },\r\n\r\n  '12:11': {\r\n    personalData: {\r\n      patientLastName: 'Pérez',\r\n      patientFirstName: 'Fiama Sofía',\r\n      patientIdentityNumber: '36.325.789',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaac',\r\n      isProcedureDone: true,\r\n      procedure: 'Cirugía_1',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 12:11 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 16:05 Hs',\r\n    },\r\n  },\r\n  '08:35': {\r\n    personalData: {\r\n      patientLastName: 'Ramirez',\r\n      patientFirstName: 'Fernando',\r\n      patientIdentityNumber: '32.114.785',\r\n    },\r\n\r\n    procedureData: {\r\n      id: 'procedureDataaad',\r\n      isProcedureDone: true,\r\n      procedure: 'Cirugía_1',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 08:35 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 16:05 Hs',\r\n    },\r\n  },\r\n  '03:35': {\r\n    personalData: {\r\n      patientLastName: 'Herrera',\r\n      patientFirstName: 'Juan José',\r\n      patientIdentityNumber: '35.243.852',\r\n    },\r\n    procedureData: {\r\n      id: 'procedureDataaae',\r\n      isProcedureDone: true,\r\n      procedure: 'Cirugía_1',\r\n      doctorInitials: 'JC',\r\n      startDateAndTime: '25 / 02 / 2021 - 03:35 Hs',\r\n      endDateAndTime: '25 / 02 / 2021 - 09:05 Hs',\r\n    },\r\n  },\r\n};*/\r\n\r\n//COMMENTS:\r\n\r\n//WITH CASE_2 use fromRequest='byDate'\r\n\r\n//GUIDELANCE render ItemList only after recive the ItemList requested\r\n//GUIDELANCE the ItemList object must be recived by pages of a specified quantity of item\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    background: theme.palette.mainBackground.main,\r\n    [theme.breakpoints.up('xs')]: { paddingBottom: '124px' },\r\n    [theme.breakpoints.up('sm')]: { paddingBottom: '174px' },\r\n    [theme.breakpoints.up('lg')]: { paddingBottom: '180px' },\r\n  },\r\n}));\r\n\r\nconst Agenda = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiPickersUtilsProvider locale={es} utils={DateFnsUtils}>\r\n      <NavBar />\r\n      <Grid container direction=\"column\" className={classes.root}>\r\n        {/*\r\n      \r\n        \r\n\r\n      */}\r\n\r\n        <PreSurgicalForm />\r\n\r\n        {/*  <PatientForm />  \r\n      \r\n   <ItemsList fromRequest=\"byDate\" shouldDisplayFor=\"procedure\" itemsData={case_2P} />\r\n      */}\r\n      </Grid>\r\n      <Footer />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default Agenda;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n//Remenber- SnackBar to show up messages / Drawer to temporary sidebar in next pages of the app\r\n// / Dialog to recurrent user accounts / Stepper to show to the user the progress of a process with some steps\r\n// Table to show selectable info\r\n// Tool Tips to show some basic info about the function of a button\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 700,\r\n      md: 900,\r\n      lg: 1368,\r\n      xl: 1921,\r\n    },\r\n  },\r\n\r\n  customShadows: {\r\n    defaultOutter:\r\n      \"1px -1px 3px rgba(0,0,0,0.25), 2px -2px 3px rgba(0,0,0,0.10)\",\r\n  },\r\n\r\n  palette: {\r\n    mainBackground: {\r\n      main: \"#EEF9FF\",\r\n      dark: \"#D0E3ED\",\r\n    },\r\n    primary: {\r\n      //dark background\r\n      light: \"#7aa1b8\",\r\n      main: \"#426175\",\r\n    },\r\n    secondary: {\r\n      //border color\r\n      main: \"#2DBCB6\",\r\n    },\r\n\r\n    ternary: {\r\n      //forms background\r\n      //light: '#BDD1DC',\r\n      light: \"#cae0ec\",\r\n      main: \"#B6C7D1\",\r\n      dark: \"#A8B8C2\",\r\n      darker: \"#73818a\",\r\n    },\r\n\r\n    info: {\r\n      //blue\r\n      light: \"#6286D9\",\r\n      main: \"#3364D6\",\r\n    },\r\n\r\n    alert: {\r\n      //red\r\n      main: \"#f44336\",\r\n    },\r\n\r\n    success: {\r\n      //green\r\n      main: \"#60B234\",\r\n    },\r\n\r\n    secondaryTextColor: {\r\n      main: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst roundingWithBase0_5 = (valueToRound) => {\r\n  const int_part = Math.trunc(valueToRound);\r\n  const difference = valueToRound - int_part;\r\n  let roundedValue;\r\n  if (difference === 0 || difference === 0.5) {\r\n    roundedValue = valueToRound;\r\n  } else if (difference < 0.25) {\r\n    roundedValue = int_part;\r\n  } else if (difference >= 0.25 && difference < 0.75) {\r\n    roundedValue = int_part + 0.5;\r\n  } else if (difference >= 0.75) {\r\n    roundedValue = int_part + 1;\r\n  }\r\n  return roundedValue;\r\n};\r\n\r\nconst responsiveStyles = (initialStyleObj, isImportant) => {\r\n  const unitValue = 0.5;\r\n  const important = isImportant ? \" !important\" : \"\";\r\n  let firstBreakpointsStyles = {};\r\n  let secondBreakpointsStyles = {};\r\n  let thirdBreakpointsStyles = {};\r\n  for (const property in initialStyleObj) {\r\n    const integerMultiplier = initialStyleObj[property];\r\n    const value = integerMultiplier * unitValue;\r\n    const incrementedValue_lg = value * 1.125;\r\n    const incrementedValue_xl = value * 1.25;\r\n    const finalValue_lg = roundingWithBase0_5(incrementedValue_lg);\r\n    const finalValue_xl = roundingWithBase0_5(incrementedValue_xl);\r\n    firstBreakpointsStyles[property] = `${value}px${important}`;\r\n    secondBreakpointsStyles[property] = `${finalValue_lg}px${important}`;\r\n    thirdBreakpointsStyles[property] = `${finalValue_xl}px${important}`;\r\n  }\r\n  const responsiveStylesObj = {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      ...firstBreakpointsStyles,\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      ...secondBreakpointsStyles,\r\n    },\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      ...thirdBreakpointsStyles,\r\n    },\r\n  };\r\n  return responsiveStylesObj;\r\n};\r\n\r\nconst fontFamily = '\"Helvetica\", \"Arial\", sans-serif';\r\ntheme.typography.fontFamily = fontFamily;\r\ntheme.responsiveStyles = responsiveStyles;\r\n\r\ntheme.defaultResponsiveFontSizes = {\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    fontSize: \"16px\",\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n    fontSize: \"18px\",\r\n  },\r\n};\r\nconst { defaultResponsiveFontSizes } = theme;\r\nconst { primary, ternary, alert, mainBackground } = theme.palette;\r\n\r\ntheme.props = {\r\n  ...theme.props,\r\n  MuiTypography: {\r\n    align: \"center\",\r\n  },\r\n  MuiGrid: {\r\n    alignItems: \"center\",\r\n  },\r\n  MuiMenuItem: {\r\n    disableRipple: true,\r\n  },\r\n};\r\n\r\ntheme.typography.body1 = {\r\n  ...theme.typography.body1,\r\n  fontFamily,\r\n  ...defaultResponsiveFontSizes,\r\n  fontWeight: \"700\",\r\n};\r\n\r\ntheme.typography.body2 = {\r\n  ...theme.typography.body2,\r\n  fontFamily,\r\n  fontWeight: \"700\",\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    fontSize: \"14px\",\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n    fontSize: \"16px\",\r\n  },\r\n};\r\n\r\ntheme.typography.h6 = {\r\n  fontFamily,\r\n  fontWeight: \"700\",\r\n  [theme.breakpoints.up(\"xs\")]: {\r\n    fontSize: \"20px\",\r\n  },\r\n  [theme.breakpoints.up(\"xl\")]: {\r\n    fontSize: \"23px\",\r\n  },\r\n};\r\n\r\ntheme.typography.caption = {\r\n  ...theme.typography.caption,\r\n  fontWeight: \"600\",\r\n};\r\n\r\ntheme.overrides = {\r\n  MuiGrid: {\r\n    root: {\r\n      boxSizing: \"border-box\",\r\n      overflow: \"hidden\",\r\n    },\r\n  },\r\n  MuiTypography: {\r\n    button: {\r\n      fontFamily,\r\n      lineHeight: \"1\",\r\n      fontWeight: \"700\",\r\n      ...defaultResponsiveFontSizes,\r\n    },\r\n  },\r\n\r\n  MuiSvgIcon: {\r\n    root: {\r\n      display: \"block\",\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        fontSize: \"20px\",\r\n      },\r\n      [theme.breakpoints.up(\"xl\")]: {\r\n        fontSize: \"22px\",\r\n      },\r\n    },\r\n    fontSizeLarge: responsiveStyles({ fontSize: 86 }),\r\n    fontSizeSmall: responsiveStyles({ fontSize: 32 }),\r\n  },\r\n\r\n  MuiButton: {\r\n    root: {\r\n      lineHeight: \"1\",\r\n      letterSpacing: \"0px\",\r\n      \"&:hover\": {\r\n        backgroundColor: primary.light,\r\n      },\r\n    },\r\n    textSizeSmall: {\r\n      fontSize: \"16px\",\r\n      padding: \"5px\",\r\n      height: \"28px\",\r\n      flexShrink: \"0\",\r\n    },\r\n\r\n    iconSizeSmall: {\r\n      \"& :first-child\": {\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n          fontSize: \"18px\",\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n          fontSize: \"22px\",\r\n        },\r\n      },\r\n    },\r\n    startIcon: {\r\n      marginRight: \"0px\",\r\n      \"&.MuiButton-iconSizeSmall\": { marginLeft: \"auto\", marginRight: \"3px\" },\r\n    },\r\n  },\r\n\r\n  MuiBadge: {\r\n    anchorOriginTopRightRectangle: {\r\n      transform: \"scale(1) translate(0%, 0%)\",\r\n    },\r\n    colorError: {\r\n      backgroundColor: alert.main,\r\n    },\r\n    badge: responsiveStyles({\r\n      fontSize: 24,\r\n      height: 24,\r\n      minWidth: 52,\r\n    }),\r\n  },\r\n\r\n  MuiOutlinedInput: {\r\n    root: {\r\n      backgroundColor: ternary.main,\r\n      \"&:hover\": {\r\n        backgroundColor: ternary.dark,\r\n      },\r\n      \"&.Mui-focused\": {\r\n        backgroundColor: ternary.main,\r\n      },\r\n      \"&.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        top: \"-5px\",\r\n        borderWidth: \"2px\",\r\n      },\r\n      \"&:hover $notchedOutline\": {\r\n        borderColor: primary.light,\r\n      },\r\n      \"& $notchedOutline\": {\r\n        borderWidth: \"0px\",\r\n      },\r\n      \"&.MuiOutlinedInput-root.Mui-error .MuiOutlinedInput-notchedOutline\": {\r\n        border: \"2px solid\",\r\n        borderColor: theme.palette.alert.main,\r\n      },\r\n    },\r\n    inputMarginDense: {\r\n      boxSizing: \"border-box\",\r\n      paddingTop: \"0px\",\r\n      paddingBottom: \"0px\",\r\n      paddingLeft: \"10px\",\r\n      paddingRight: \"10px\",\r\n    },\r\n  },\r\n\r\n  MuiInputBase: {\r\n    root: {\r\n      height: \"100%\",\r\n      lineHeight: \"unset\",\r\n    },\r\n    input: {\r\n      fontWeight: \"500\",\r\n      height: \"28px\",\r\n      fontSize: \"16px\",\r\n    },\r\n  },\r\n  MuiFormControl: {\r\n    root: {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n\r\n  MuiAccordion: {\r\n    root: {\r\n      \"&:before\": {\r\n        height: \"0px\",\r\n      },\r\n    },\r\n    rounded: {\r\n      borderRadius: \"5px\",\r\n    },\r\n  },\r\n\r\n  MuiAccordionSummary: {\r\n    root: {\r\n      ...responsiveStyles({ minHeight: 70 }),\r\n      justifyContent: \"space-between\",\r\n      background: mainBackground.dark,\r\n      borderRadius: \"5px\",\r\n      \"&:hover\": {\r\n        filter: \"brightness(97%)\",\r\n      },\r\n      \"&.Mui-expanded\": {\r\n        minHeight: \"unset\",\r\n        borderWidth: \"2px\",\r\n        borderRadius: \"5px\",\r\n        borderBottomLeftRadius: \"0px\",\r\n        borderBottomRightRadius: \"0px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n    content: {\r\n      maxWidth: \"94%\",\r\n      margin: \"0px\",\r\n      \"&.Mui-expanded\": {\r\n        margin: \"0px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiAccordionDetails: {\r\n    root: {\r\n      background: mainBackground.dark,\r\n      padding: \"0px\",\r\n      borderBottomLeftRadius: \"5px\",\r\n      borderBottomRightRadius: \"5px\",\r\n    },\r\n  },\r\n\r\n  MuiIconButton: {\r\n    root: responsiveStyles({ padding: 10 }),\r\n  },\r\n\r\n  MuiMenuItem: {\r\n    root: {\r\n      minHeight: \"auto\",\r\n    },\r\n  },\r\n\r\n  MuiPaper: {\r\n    elevation1: {\r\n      boxShadow: theme.customShadows.defaultOutter,\r\n    },\r\n  },\r\n\r\n  MuiSwitch: {\r\n    thumb: {\r\n      boxShadow: theme.customShadows.defaultOutter,\r\n    },\r\n  },\r\n\r\n  MuiFormLabel: {\r\n    root: {\r\n      color: \"black\",\r\n      \"&.Mui-focused\": {\r\n        color: \"black\",\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiInput: {\r\n    underline: {\r\n      \"&.MuiInput-underline:hover:before\": {\r\n        borderBottom: \"2px solid #2DBCB6\",\r\n      },\r\n      \"&.MuiInput-underline:after\": {\r\n        borderBottom: \"2px solid #2DBCB6\",\r\n      },\r\n    },\r\n  },\r\n\r\n  MuiSlider: {\r\n    root: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Component } from 'react';\r\n\r\nimport Agenda from './pages/Agenda';\r\nimport theme from './theme';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ThemeProvider theme={theme}>\r\n          <Agenda />\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}